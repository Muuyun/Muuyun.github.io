<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Share-25]]></title>
    <url>%2F2019%2F10%2F05%2Fshare-25%2F</url>
    <content type="text"><![CDATA[Fun 离散制造的产品往往由多个零件经过一系列并不连续的工序的加工最终装配而成，加工此类产品的企业可以称为离散制造型企业。流程型企业生产特点：工艺过程是连续进行的，不能中断；工艺过程的加工顺序是固定不变的，生产设施按照工艺流程布置；劳动对象按照固定的工艺流程连续不断的通过一系列的设备和装备被加工处理成产品。 订单资格要素是指允许一家企业的产品参与竞争的资格筛选标准。 订单赢得要素指企业的产品或服务区别于其他的企业，从而赢得订单。根据不同情况，这些要素可以是产品的成本（价格），产品质量及可靠性或其他要点。 氢气大巴 丰田公司将向2022年北京冬季奥运会，提供100辆氢燃料电池公共汽车，在场馆之间运送游客。这应该是中国第一次引入氢气燃料的公共汽车。目前，东京已经有15辆氢气大巴在运营。 跟纯电动汽车相比，氢气汽车没有充电这个环节，更方便省事。但是，它需要广泛的充气站网络，这成了氢动力汽车推广的最大难题。 你们读过计算机四大名著吗？ 计算机四大名著如下：算法导论，深入理解计算机系统，SICP，计算机网络：自顶向下方法 程序员长期盯着显示器，到了下午眼睛干涩酸痛的问题解决方案，便宜。 The Evolution of Trustan interactive guide to the game theory of why &amp; how we trust each other ML 人工智能学科研究的主要内容包括：知识表示、自动推理和搜索方法、机器学习和知识获取、知识处理系统、自然语言理解、计算机视觉、智能机器人、自动程序设计等方面。 机器学习在近30多年已发展为一门多领域交叉学科，涉及概率论、统计学、逼近论、凸分析、计算复杂性理论等多门学科。机器学习理论主要是设计和分析一些让计算机可以自动“学习”的算法。机器学习算法是一类从数据中自动分析获得规律，并利用规律对未知数据进行预测的算法。因为学习算法中涉及了大量的统计学理论，机器学习与推断统计学联系尤为密切，也被称为统计学习理论。 机器学习已广泛应用于数据挖掘、计算机视觉、自然语言处理、生物特征识别、搜索引擎、医学诊断、检测信用卡欺诈、证券市场分析、DNA序列测序、语音和手写识别、战略游戏和机器人等领域。 Tool 翻译侠 浏览器翻译插件，支持 Chrome 和 Firefox，鼠标点击或选择触发翻译，可以翻译多种语言，底层为 Google translate API。 12306 购票助手，内置 Docker 环境；支持分布式、多账号、多任务购票以及 Web 页面管理：https://github.com/pjialin/py12306 ShowMeBug 一个国产的在线实时编程环境，程序员面试助手，可以实时观看应聘者远程编程 中国传统颜色手册 一个方便使用的在线色表，列出中国古典的常见颜色。 Resource Git的奇技淫巧 高质量的Git中文教程 有关 git 的学习资料 寓教于乐，用玩游戏的方式学习 Git！ Essay 这不是CG！波士顿动力新视频——Spot Launch &amp; More Parkour Atlas 2018年度中国大学生自强之星揭晓 电脑上网页截图，一个 Chrome 就够了 Note In the information age, objective obstacles no longer exist. The so-called obstacles are subjective. If you want to develop new technologies, you don’t need millions of dollars, you Just fill the fridge with pizza and cola, then have a cheap computer, and with the determination to dedicate yourself, you can have any programming realm you want! ― John Carmack A man who gives a good account of himself is probably lying, since any life when viewed from the inside is simply a series of defeats. ― George Orwell In life, unlike chess, the game continues after checkmate. ― Isaac Asimov]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[cinemachine]]></title>
    <url>%2F2019%2F09%2F29%2Fcinemachine%2F</url>
    <content type="text"><![CDATA[插件：cinemachine，unity-chan! Model，hand painted nature kit lite main camera : show debug text show camera frustum cm vcam : solo ， priority lens follow ，look at noise : handheld 镜头融合：timeline 推轨镜头：Dolly camera with track(镜头跟着轨道走DollyTrack —— waypoints) 切镜：clearshot 自由观察相机：freelookcamera 状态驱动相机：state driven camera 混合列表相机：blend list camera(以时间作为分割点，比较少用) 目标组相机：target group camera(一个相机可以跟随多个物体) 2D相机：2D camera 混合相机：mixing camera 轨道物体：dolly track with cart（物体跟着轨道走） Body: transposer LockToTarget 相机跟着物体旋转 LockToTarget WithWorldUp 当物体翻转，相机不会翻转 案例：NPC的各种触发镜头都不同 各家AR的功能价格等介绍]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-24]]></title>
    <url>%2F2019%2F09%2F27%2Fshare-24%2F</url>
    <content type="text"><![CDATA[Fun unity校园招聘 Hack Week DBR DBR是TOC（约束理论）中的一种管理方法，Drum-Buffer-Rope，中文直译为“鼓·缓冲·绳子方法” 鼓是指生产系统中的控制点。如果系统中存在瓶颈，那么瓶颈就是最好的控制点。如果系统没有瓶颈，则选择次瓶颈资源。如果一个系统既没有瓶颈，也不存在次瓶颈资源，那么控制点的位置可以任意选择。但最好的位置是物流分叉点，即该处资源的产出流向好几个下游作业。 缓冲器是指在瓶颈前面设置的缓冲库存。缓冲器是一种时间缓冲，其目的是希望加工中心总有工作要做，至于何种产品正在被加工并不重要。 绳子是指将瓶颈已加工的情况传递给上游作业的信息的传递，其目的是为了按需生产，以避免库存增加。作为信息传递的绳子既可以是正式的，也可以是非正式的。 甘特图甘特图,也称为条状图( Bar chart)。是在1917年由亨利·甘特开发的,其内在思想简单,基本是一条线条图,横轴表示时间,纵轴表示活动(项目),线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行,及实际进展与计划要求的对比。管理者由此极为便利地弄清一项任务(项目)还剩下哪些工作要做,并可评估工作是提前还是滞后,亦或正常进行。是一种理想的控制工具。 经济订货批量经济订货批量 economic order quantity(EOQ),通过平衡采购进货成本和保管仓储成本核算,以实现总库存成本最低的最佳订货量。经济订货批量是固定订货批量模型的一种,可以用来确定企业一次订货(外购或自制)的数量。当企业按照经济订货批量来订货时,可实现订货成本和储存成本之和最小化。 快速换模 SMED, Single Minute Exchange of Die 快速换模。快速换模是将模具的产品换模时间、生产启动时间或调整时间等尽可能减少的一种过程改进方法。可显著地缩短机器安装、设定换模所需的时间。 Tool Research 一个中文搜索的聚合网站，显示同一个关键字在不同网站的搜索结果。 whiteboard 微软推出的一个白板工具 whiteboard；每次有一个新的想法时，通常不会画思维导图，而总是拿笔把预想的原型先画出来。这时更倾向于白板，而不是思维导图工具或 Axure 之类的工具，演示视频 编程备忘的网站，把一个软件最常用的一些命令给你记录下来了，非常的方便https://devhints.io gifcities GifCities is a special project of the Internet Archive to celebrate 20 years of preserving the web. Internet Archive is a non-profit digital library of millions of free books, movies, software, music, websites, and more. Resource lorefree去中心化免费电子书共享社区 IRead搜索电子书 电子课本网 大学生做家教用 Health 护肤时不要“啪啪”拍脸。 涂抹护肤品时，“啪啪”拍脸或按摩虽然能带来快感，但并不能帮助吸收，反而会加快护肤品蒸发。如果你是敏感肌，拍脸动作的刺激还可能加重敏感症状。 喝完水就小便是正常的。 喝很多水时，水分被吸收进血液，马上就会被“监控”到。身体知道水多了，会通知肾脏赶快排水，然后小便也就来了。喝完水就小便很正常，总比狂喝水但不排好。 喝蜂蜜水不能通便。 少数人吃多了蜂蜜后容易拉便便，是因为他们本身不能吸收果糖。对于大部分人，蜂蜜是不通便的，蜂蜜水更没有该作用。非要说蜂蜜水有什么好，那就是：好喝。 Essay 漫话：如何给女朋友解释什么是 Git 和 GitHub？ 利用看板思维，快速在印象笔记中完成一份职场报告 茫茫健身房，你需要一个训练伙伴：Jefit English 笔迹 相比起扔掉一件物品，只是占有而从不使用是更不尊重物品的行为。 如果打算拥有一件物品，就要经常使用，好好保养和爱惜。 物品不单单是完成一项特定功能，也是人与人之间的情感连接。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ERP沙盘]]></title>
    <url>%2F2019%2F09%2F27%2Felectronic%20sand%20box%2F</url>
    <content type="text"><![CDATA[上个星期六日在学校的虚拟仿真实验室参加了电子沙盘培训，接触到了另一个领域的知识，发现原来金融也能这么好玩，虽然在现实世界不能当CEO，不过也能在电子沙盘的世界里过一过CEO的瘾。 电子沙盘指通过计算机网络系统模拟企业运营的软件。电子沙盘分为三维数字沙盘、声光电沙盘和多媒体触控沙盘。电子沙盘有展示内容广,设计手法精湛,展示手段先进,科技含量最高等特点。 在这里和大家分享一下关于电子沙盘的相关信息： 参与途径 可以在qq搜索ERP沙盘群，花个1，2块钱就能玩一把了，其实加一个群就够了 可以利用学校的资源，找学校沙盘模拟的老师/加入ERP沙盘模拟协会/上ERP课程/参加ERP比赛 电子沙盘系统 学习资源 综合能力训练（ERP模拟经营沙盘）西南财经大学 中国大学MOOC(慕课) ERP沙盘模拟详解 知识点 如果研发三个产品，那么权益下降太多，下一年贷款额度会少，对应的现金流也可能更紧张。而同时生产三种产品就需要较多生产线，否则不能规模化生产，而生产线需要资金，又跟研发产品带来的现金流紧张矛盾。如果不规模化生产，那广告费就会显得较高，拉低单个产品利润。所以一般最多只能研发两个产品。 实际上在这个游戏里面，很多东西都是定量或者因变量，可以提前确定的。比如下一批生产，支付利息，原材料入库等等。自变量只有两个（一个也对），广告、预计销售的产品（要销售多少就生产多少），而广告都是自己定的，只要拿到的订单越接近实际情况，预算就越接近实际。所以实际上，可以通过预算，做到最优方案，只要推演的足够多 管理会计里面讲决策五步骤：确定问题与不确定性 获取信息 预测未来 选择方案做决策 实施决策，其实也就是这样。预测未来就是预测市场怎么样，也是有分析方法的 预算最好做前三年，觉得费劲也可以只做两年，后面每一年都要做好下一年预算 想玩好前两年必须短贷，第二年结束的时候权益较第一年提升就可以用第三年长贷替换第二年第一季短贷 市场全部开拓，权益压力大可以第二年再开国际市场 ISO权益压力大可以第一年不研发，我一般第一年最起码研发9K，第二年开始全部都投 有关租赁线，手工线的使用是区分度最大的地方，这个点才是拉高权益的唯一方式 高毛利就是单个毛利高，高周转就是回款快，从采购，生产，销售整个流程资金运转速度快。节省借钱的成本，加快发展速度。经营情况不止跟现金有关，还跟整个生产过程资金流通速度有关（费雪方程）。对应过来就是账期短一点的。高杠杆就是尽量借钱，假如你有50，你借50，100块钱赚了50，净资产就翻倍了。不借钱净资产只能增加50%，25。 第一年的广告一定要多投。因为第一年的订单多少直接关系到之后的所有者权益。所有者权益变少，贷款额度也会变少，就会很难运行下去的。 提前一年决定下一年的生产产品，提前计算好下一年的各种产品数量。订单最好接正好的，不过只能少不能多。要知道，违约的代价很高啊！ 柔性生产线更好。如果有余额，尽量多建柔性线。因为各种产品的盈利随着时间会有波动。前3年P1P2比较好，第四年是P2的全盛时期。到第五六年的时候，P2的盈利就变少了，应该把重心放到P3,P4上去。当然，如果你前几年运营的不好导致所有者权益太低的话，那就果断舍弃P4吧，生产成本太高啦。 第一年最好买个大厂房，大厂房就像是植物大战僵尸里房子前面的推土机，是你最后一道防线啊！贷款借不出来的时候还能买个厂房周济一下什么的。 下列两种情况定义为破产 1.资金流断流 2.所有者权益为负 当你产出的货长期卖不出去而被迫库存的时候，其资金回流能力及盈利能力会受到一定程度的影响。资金投入了生产和销售却不能将其转换为收入，会使资金流出远大于流入，久而久之，恶性循环，最终资金流断流。同时销售收入减少，净利润减少甚至亏损，久而久之，恶性循环，最终权益为负。 因此，提醒各位新沙迷，省广告费需慎重。 经营策略根据什么制定，其实很简单，规则，市场。 没有规则和市场，何谈方案。 所以任何方案都是基于规则和市场的，没有万能方案一说。 间谍看研发看线看库存看采购，然后算清楚同产品竞争对手的产能 基本玩精了，基本功扎实的情况下，胜负手就是两点 运气（开局的产品挤不挤，广告，这个比如你出35他36，你正好没单有脾气吗？） 微操（特别是前三年，在短时间内通过财务计算节省费用）]]></content>
      <categories>
        <category>dailylog</category>
      </categories>
      <tags>
        <tag>sandbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-23]]></title>
    <url>%2F2019%2F09%2F15%2Fshare-23%2F</url>
    <content type="text"><![CDATA[Fun 世界最快的跑车 法国跑车公司布加迪制造的 Chiron 超级跑车，8月2日开出了304.77mph（490.5公里/小时）的最高速度，成为第一辆突破300mph的超级跑车。此前的最高记录是 Koenigsegg 跑车2017年创造的284.55mph。 这种速度的跑车，基本上就是在地面上飞，但是必须保证不能脱离地面，因此有很高的技术难度。Chiron 最初于2016年推出，有16个汽缸，4个涡轮增压器，总功率输出为1500马力，价格超过300万美元。 搞笑诺贝尔奖 第29届搞笑诺贝尔奖近日在哈佛大学颁发。该奖每年选出一些似乎毫无意义的科研项目。今年的获奖者如下。 化学奖 ： 评估一个典型5岁孩童每天的唾液分泌总量。方法是先对食物称重，然后让孩子咀嚼这些食物，吐出来再次称重，以测量里面多了多少唾液。 物理学奖 ：研究树袋熊排出方形粪便的方式和原因。树袋熊是已知的唯一一种会排出方形粪便的动物。 工程学奖：人类婴儿的自动换尿布机。 解剖学奖：测量了未穿衣服和穿衣服的法国邮递员两侧阴囊温度的不对称性。科学界此前曾争论过，男性的左侧阴囊温度是否比右侧稍高一些，这个研究发现两侧温度的确不一致。 经济学奖：测定了哪个国家的纸币最容易传播危险的病菌，结果发现是罗马尼亚。 和平奖：：试图测量挠痒痒带来的愉悦程度。结果显示，背部和脚踝处的瘙痒感要强于前臂，因此挠痒痒的愉悦感也要强烈一些。 医学奖：证据表明食用披萨或有助于预防疾病、延年益寿，前提是要在意大利境内食用在意大利制作的披萨。 心理学奖 ：1988年，一个研究组发现，嘴里叼一支笔会让你微笑，也因此会更加快乐。开展这项研究的科学家 Strack 自己在2016年重新对这个问题进行了研究和实验，但却发现无法复现当年自己得出的结论。 人工智能威士忌 英国一家酿酒公司推出了，世界第一款人工智能创建的威士忌。它通过现有配方，结合销售数据和客户偏好，在超过7000万个选择之中，创建了一种金黄色的麦芽威士忌。该公司宣称，这种酒带有太妃糖、奶油香草、梨、苹果、白胡椒和烤橡木桶的清淡口感。 苹果公司正式发布 iPadOS，现在就可以安装升级。它将一些桌面电脑的功能引入了 iPad，比如 程序坞 dock 和支持直接插入U盘。苹果公司的产品线目前有五个操作系统：MacOS、iOS、iPadOS、WatchOS、tvOS。 Stack Overflow 选择了一个印度人担任首席执行官。在硅谷高管级别，印度人比华人强太多了。 摸鱼吧 Tool Postwoman一款 API 测试工具，Postwoman 代码完全开源，因此你可以很方便的将其部署到公司内网上，定制团队的 API 文档编写与测试流程。 CS Rankings该网站提供计算机科学各领域研究机构的排名，可以查看全球排名，也可以查看每个大洲的排名。 BugMeNot 意思是“不要窃听我”。作用是提供用于登录网站论坛的帐号和密码，因为一些网站注册时需要填写信用卡号，老外出于对隐私的担心，共享帐号也就应运而生。BugMeNot 的使用方法很简单，只需要输入某个网站的域名，点击搜索就会得到用于登录该网站的帐号和密码，搜索结果会显示可用帐号以及成功率。当然，也并不是所有的网站都有效，但大部分论坛网站是有效的。 一个正则闯关的网站 自己玩玩看，可以复习（锻炼）一下正则的很多语法及用法。 Resource awesome-qrcode 二维码生成工具，可以生成静态二维码、图像二维码和动画二维码。 Chrome 上面有什么可以提高程序员效率的好用的插件推荐一下 ArtiPub ArtiPub (Article Publisher的简称，意为”文章发布者”)是一款开源的一文多发平台，可以帮助文章作者将编写好的文章自动发布到掘金、SegmentFault、CSDN、知乎、开源中国等技术媒体平台，传播优质知识，获取最大的曝光度。ArtiPub安装简单，提供了多种安装方式，可以一键安装使用，安装一般只要5分钟。 Note PS是位图编辑而CDR是矢量图绘制，位图是有无数个像素组合而成的，图位放大后会失真（出现马赛克效果），矢量图是有具体的几何图形组合而成的，矢量图放大后不会失真。 Essay Firefox | 祭出一把杀猪大刀 新一期工作桌面「体验提升」计划，Get✔️ 我的写博工作流：编辑器、图片上传与图床服务 English Health Wi-Fi对人无害。 手机、路由器等Wi-Fi设备（无线局域网通信设备）发出的是非电离辐射，对人无害。但是，如果你带手机去有Wi-Fi的厕所就麻烦了——容易玩得入迷，一蹲不起。 花香可能诱发偏头痛。 强烈的气味，即使是闻起来还不错的香味（包括香水味），能诱发偏头痛。最常见的就是某些鲜花、化妆品及油漆的味道，尽量避开。 痛风患者可以适当多喝牛奶。 牛奶中含蛋白质和钙比较丰富，嘌呤含量很少。这对于不能多吃肉类和水产品的痛风患者来说，是非常理想的食物。 笔迹 睡眠就像水消失在水中 好书读不懂怎么办？没关系，只有一个办法靠谱：硬着头皮读完，然后反复读很多遍。这是一个特别重要的本领，很多人不知道。其实，重要的知识，从来都是通过反复学习才能获得的。一下就能学会得东西，通常上价值不大。 学习编程很酷的一点是，你会同时获得两个专长。一个专长是计算机科学和编程，另一个是需要你来编程的那个专门领域。除非你是编译器作者，否则你总是会有自己的专门领域。– Rich Hickey，Clojure 语言的发明者 Picture Everything is over, I will open up new worlds]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-22]]></title>
    <url>%2F2019%2F09%2F15%2Fshare-22%2F</url>
    <content type="text"><![CDATA[Fun 9月5日，发生了一笔10亿美元的比特币交易。这就是比特币的一个特点，所有人都可以看见这笔交易，但是不知道是谁交易。整笔交易的手续费是600美元，这个费用是传统银行不可想象的。 人工智能促进协会（英語：Association for the Advancement of Artificial Intelligence）是人工智能领域的主要学术组织之一。该协会主办的年会（AAAI, The National Conference on Artificial Intelligence）是一个全世界最主要的人工智能学术会议。 Tool WriteathonWriteathon 是一款在线写作工具，基于极简理念，提供简洁、高效、专注的写作体验。 where is Sci-HubSci-Hub 提供免费的科学论文下载，由于版权问题，它必须经常更换域名。该网站告诉你，现在可以通过哪个域名访问到 Sci-Hub。 皎然影音乐一个中文网站，收集电影音乐资源。由于刚刚开站，资源还不多。 Resource Oh My RSS 一个中文 IT 网站的 RSS 聚合服务，代码开源。 Standard Ebooks 一个对版权过期的英文小说进行精心排版，提供电子书下载的网站。 中英文电子书大集合 电子书格式一般有：pdf、epub、mobi、azw3、txt等 Essay 必须忘记 - 遗忘对于大脑正常运作非常重要) 如何延长硬盘的寿命 – 一定记得要备份 不到 2000 块钱，这是一份睡眠舱升级指南 English Health 吃感冒药后开车，危险程度等于酒驾。 很多复方感冒药中有减轻鼻塞、流鼻涕的成分，这类成分的主要副作用就是使人犯困。服药后开车，注意力不如正常情况下集中。酒驾危险，药驾也要不得！ 有骨关节炎的人，有时能预测天气。 骨关节炎患者的关节疼痛，的确与天气变化有关，与空气湿度和气温变化有相关性，天气越冷影响越大。有时候，他们真的能预测突然降温和雨雪天气。 口香糖嚼多了容易放屁。 嚼口香糖时会不停地吞下空气。肚子里气体太多无处安放，人要么打嗝，要么就憋成了屁。大多数“口香糖屁”是不臭的，但要注意控制好声音。 笔迹 任何一个人如果曾经有最终习得某种技能的经验，就会知道，在习得的那一瞬间，整个世界都会为之改变。换一种说法：因为有能力做更多的事情，他也就不再存在于原本的世界里；因为所习得的技能，他拥有了另一个完全不同的世界。 说者的语篇内容可以分为两类：事实和看法。如果是事实，那么我们就要花时间想想“他所陈述的内容真实性如何”。如果是看法，那么我们就要花时间想想“他的这个看法/意见的根源在哪”。 只有自己放弃了争论的习惯之后才反应过来，原来那并不是人微言轻，而是人微易怒。弱小的个体更容易闹情绪，若是有情绪掺杂，那么言论就越发地不靠谱，不靠谱的言论又掺杂着更多的情绪。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-21]]></title>
    <url>%2F2019%2F08%2F30%2Fshare-21%2F</url>
    <content type="text"><![CDATA[Fun 生物学家研究表明,沙蚁等昆虫的复眼具有对天空偏振光敏感的独特结构,能够感知偏振光在天空中强度和方向的分布模式,并利用其来实现导航定位的目的。仿生导航微传感器就是模仿沙蚁复眼的偏振光导航定位机理,结合微电子技术和微机械加工技术,利用MEMS工艺进行研制的一种微型导航定位系统。相比传统的导航设备它具有体积小、精度高、灵敏度好集成度高及抗干扰能力强等特点因而在导航定位领域有着极其广阔的应用前景。 互联网法院2019年8月17日，北京互联网法院成立一周年之际，展示了移动微法院、屏幕共享、智能审判应用、天平链等多项互联网技术的实际司法应用。一位80多岁的老人在手机端立案成功，然后在线进行庭审，整个诉讼过程全部在手机上完成，可以不离开家就打完官司。另一起案件中，原告不在国内，被告代理人在外出差，案件承办法官外出培训。法官与双方当事人约定晚上6时同时登录移动微法院，并顺利在手机端完成调解笔录的签字和调解书的送达。 北斗卫星多于 GPS2018年，中国发射了18颗北斗导航卫星。目前，一共有35颗北斗卫星在运行，而美国的 GPS 卫星只有31颗，欧盟的伽利略系统22颗，俄罗斯的 GLONASS 系统24颗。另外，日本（4颗）和印度（6颗）的系统只限于本国可用。全世界195个国家和地区中的130个（多是一带一路沿线国家），接收到的北斗卫星要多于 GPS 卫星。这使得在这些国家，使用北斗定位会信号更强，定位更快速。上图中，深蓝的区域是北斗占优，红色的区域是 GPS 占优。 日本庆应大学正在开发机器人尾巴，模仿了猎豹和猴子的尾巴，用于在跑步和攀爬时保持机器人或真人的平衡。 钍发电 传统的核电站都使用铀和钚作为燃料，但是科学家提出可以改用钍。钍的蕴藏量较多、产生较少核废料、不易制成武器，而且钍裂变发电较有效率。 生产1千克材料需要多少能量 生产一公斤木材需要1度电左右，一公斤生铁6度电，一公斤电解铝70度电，一公斤芯片硅2000度电。 电子游戏的总收入 十年前开始，电子游戏的总收入已经超过电影业和音乐业的总和，现在更是远远不止。想要加入电影业或音乐业的人，真的应该改方向，比如，写电视或电影的剧本，不如写游戏剧本。 Tool GitMind ——免费在线思维导图软件超好用的免费在线思维导图工具，支持手机端使用，支持插入图片、链接，可以用来做读书笔记、知识梳理以及日常工作安排。还有许多主题可以使用。 短视频解析支持解析快手、抖音、Youtube、Tiktok、火山、今日头条、西瓜视频、皮皮虾、小咖秀、趣多拍、微视、美拍、秒拍、网易云、TikTok、哔哩哔哩、陌陌、映客、迅雷、阳光宽频、全民 K 歌、刷宝、WIDE 短视频、小红书、等平台的视频，而且解析出来的网站视频没有水印。 remove非常好用的图片删除背景工具，可以给自己的图片更换任何想要的背景。 Resource Student-resources本文介绍的是利用学生身份可以享受到的相关学生优惠权益，但也希望各位享受权利的同时不要忘记自己的义务，不要售卖、转手自己的学生优惠资格，使得其他同学无法受益。 FreeCourses : Free courses about programming 程序员技能图谱 星际黑客 专门收录安全技术文章的社区 Essay 收纳 - 只留下你心动的 咖啡入门书 我的日本码农就职总结 本文较为详尽的记录了计算机专业应届生在日本校招求职整个过程，包括抉择、事前准备、面试经历及感想。如果你想去日本工作，可以参考。 English Health 坐着不要超过90分钟。 《美国糖尿病学会2016版指南》中明确指出：所有人都该减少久坐，特别是避免久坐超过90分钟。久坐不利于下肢血液循环和腰背健康。过年不要沉迷于打麻将哟。 低头玩手机，特别伤颈椎。 不低头的时候，脖子只用承担头部的重量，但低头45度时，脖子承受的重量可达30千克。时间久了，脖子痛，肩膀痛……都可能找上你。玩手机，也要抬头挺胸。 吃饭，七八分饱最好。 吃饭吃到七八分饱，不会饿得快，也不容易发胖。这时胃已经满足了，但习惯性地还想多吃两口。如果撤走食物，很快也就忘了吃东西这事儿。 笔迹 读书，其实不见得一定要有目的，随意闲翻同样有益——有用的知识经常是偶然获得的。时间久了，我们就会发现，读书偶得的知识不仅多，而且非常重要，只不过很多人因为片面而又肤浅地理解“人生应该有目标”而失去了这些机会。 往往只有优秀的人，才拥有有效的人脉。从整体上看，人脉当然很重要。不过，针对某个个体来说，比人脉更重要的是他所拥有的资源。 在一个所有人都匆匆忙忙的世界里，想放慢节奏实在是一件非常难的事情。但是，我们应该记住的是：凡是值得做的事情，都值得慢慢去做，做很久很久。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-20]]></title>
    <url>%2F2019%2F08%2F23%2Fshare-20%2F</url>
    <content type="text"><![CDATA[Fun 街角的一尊佛像 Oakland 东湖区从2012年有神秘佛坛与固定祭祀活动开始，这区的犯罪率在一年内下降了80%。 田中达也的微型日历 日本艺术家田中达也的想象力，一点不比天马行空的孩子们差。过去四年里，他仅仅利用一些小食品、日常用品和一柄放大镜，就制作了一部神级想象力的“微型日历” 语音伪装神器 不久前，一位来自比利时的小哥在 GitHub 上开源了一个基于深度学习的语音合成项目，它通过采集分析一段具体的声音样本，便可在 5 秒内生成与之类似的克隆语音。 这个黑科技具体如何操作，可看下面这个视频：https://youtu.be/-O_hYhToKoA。朗读、采集、分析、生成语音，一气呵成，如果你有兴趣，也可以用自己的声音试下，效果惊人。 世界最快超级计算机 超级计算机制造商 Cray 公司与美国政府签署了一份价值6亿美元的合同，建造世界第一台每秒100亿亿次（10的18次方）浮点运算的超级计算机，名为 El Capitan。它预计将在2023年末投入使用。 目前，世界最快的超级计算机是美国的 Summit，每秒运算20亿亿次，占地面积相当于两个网球场，耗资2亿美元。 可口可乐公司将它的瓶装水产品改成铝罐包装，因为塑料对环境影响太大，各国都开始限制使用塑料。 特斯拉公司开始在加州交付太阳能屋顶，原有的屋顶瓦片都被换成可以发电的太阳能瓦片。 Tool 百度网盘提取码查询 百度网盘提取码在线查询是基于云盘万能钥匙API进行查询网点网盘分享链接密码，可以让您轻松获取提取码，从而下载到分享的资源。 app: duet 可以将你的ipad和Windows电脑相连，将ipad作为扩展屏幕 GeoGebra这是一款结合几何、代数与微积分的免费动态数学软件，也支持在线直接绘图 /计算。 Resource vant-weapp轻量、可靠的小程序 UI 组件库 free-api收集免费的接口服务,做一个api的搬运工 awesome-wechat-weapp微信小程序开发资源汇总 Essay Flex 布局教程：语法篇 白镜·平行之恋 FACEBOOK 伦敦终面经历 五月份的时候，在 LINKEDIN 上看到 FACEBOOK 伦敦的招聘广告，于是就投了，当时不抱希望的。投了简历很快就接到 FB 猎头的联系。 English Health 抗氧化保健品没有必要买。 具有”抗氧化“作用的物质成分并不神奇，主要来源就是各种植物。完全不需要吃抗氧化保健品，只要平常多吃新鲜蔬菜、水果就好。 喝红酒，不能软化血管。 红酒中的白藜芦醇成分有保护心血管的作用，但含量非常低，即使每天喝1吨也起不到软化血管的效果。而且，红酒中还有不少酒精，会伤害肝脏，喝了对健康没有好处。 咖啡不致癌。 2016年，世界卫生组织明确指出，“咖啡不存在致癌危险性”。每天喝咖啡的朋友，不用担心有什么问题。不过前提是：别喝65摄氏度以上太烫的咖啡。 笔迹 比成功更重要的是成长。如果“成功”是与他人比较的话，那么“成长”则是与自己比较——今天的我和昨天的我、明天的我和今天的我之间的比较。后一种比较显然比前一种对个体来说意义更大，也能够带来更加踏实的幸福感。 大约2500年前，塞内卡就把运气这件事说得非常清楚：“所谓幸运就是当你准备好的时候机会来了。”当一个人没有准备好的时候，对他来讲，不存在任何机会。 尽管法兰克·奈特曾提出一个相当正确的观点：“努力”相对于另外两个因素——出身和运气——是最无足轻重的。但是，我们仍然可以看到很多现实的例子：有相当数量的人确实通过“努力”改变了他们自己的“运气”，进而改变了他们后代的“出身”。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-19]]></title>
    <url>%2F2019%2F08%2F23%2Fshare-19%2F</url>
    <content type="text"><![CDATA[Fun news 第一条是丹麦发放全世界第一笔负利率贷款，利率是-0.5%。银行借你一万元，一年后你还9950元。 据说原因是，银行没有足够的贷款业务，为了减少存款，已经向企业存款收费了。既然存款可以收费，那么贷款负利率也能赚钱。 第二条是德国政府正在出售负利率的债券。你买一万元国债，若干年后，政府还你9000多元。还真的有人买，据说动机是，以后的负利率会更大，所以这种债券还有升值可能。 这两条新闻说明了什么？就是一点，欧洲的钱非常多，但是投资机会很少，钱没有去处。所以，移民到欧洲好不好？生活环境是很好，但可能也很苦闷，因为看不到发展机会。 目前，全世界都是资本过剩。国内的利率已经在下跌，肯定还会不断下跌，投资机会也会越来越稀缺。 这告诉我们两点启示。一是钱存在银行，长期肯定不会增值；二是融资将会越来越容易，创业项目根本不担心融不到钱。 新能源样本房 特斯拉公司在澳大利亚展示新能源样本房。这是一套五个居室的乡间别墅，屋顶安装了33块太阳能板，电能储存在车库的两个 Powerwall 电池组里面。不过，太阳能只能满足一半的用电需求，每天用电几个小时之后，还是需要当地电网供电。 去除海洋微塑料的新方法 16岁的爱尔兰少年 Fionn Ferreira 发明了一种从海洋中去除微塑料的新方法，获得了2019年谷歌科学节（Google Science Fair）的大奖。 Ferreira 的方法是将磁铁碎屑液化倒入水中，可以吸附微塑料，然后将磁铁放入水中，把带有微塑料的磁铁碎屑吸走。据报道，这种方法可以从水样中去除了约88％的微塑料。 微塑料是长度小于5毫米的塑料颗粒，由于非常小，因此逃脱了水过滤系统，进入了河流和海洋，各种的海洋动物都会摄入它们，并且最终进入人体。 一个波兰团队发现，银河系的形状不是一个平的圆盘，而是像一个两端翘起的黑胶唱片，一端向上翘，另一端向下翘。 NEC 公司展示新研制的飞行汽车。日本政府计划2023年通过飞行汽车运送货物，2030年之前开始城市的载人飞行。 美国的废弃建筑 该网站专门探访美国废弃的建筑，有民宅，也有工厂和商店，然后拍摄照片，撰写游记，放到网上。 Tool Gissue GitHub issues 备份工具，只要填入仓库地址就可以下载压缩文件包，一次性下载所有 issue。 互动式元素周期表 点击查看各种元素的介绍，以及其他一些互动功能。 Listen 1音乐播放器 Resource freeCodeCamp | React project ideas : 27 fun app ideas you can build while learning React. karan/Projects : a large collection of small projects for beginners with vicky002/1000-Projects : Mega List of practical projects that one can solve in any programming language! Essay 为什么一天有两次潮汐（中文） 潮汐是月球引力引起的，这样的话，应该最靠近月球的时候，才会发生涨潮。但是事实上，地球上大多数地方，一天有两次涨潮，某个地点最远离月球的时候也会涨潮，这是为什么？ TuTu生活志(Vlog)目前使用的一些重要设备或服务 我的桌面 1.0 English Health 喝酒上脸其实是乙醛引起的。 酒精经过肝脏代谢后，会转化为有强致癌性的乙醛。有些人天生缺乏乙醛脱氢酶，饮酒后乙醛消除比较慢，会在体内积累，导致脸红。红脸、白脸，都和酒量无关。 运动不到30分钟也能消耗脂肪。 虽然有氧运动时间越长，燃脂效果越好，但即使只运动20分钟，也能消耗脂肪，与其纠结动多久，不如现在就动起来！ 长时间开车、坐车，每隔一二个小时活动下。 久坐不活动，腿部血液不流动，容易引起下肢深静脉血栓。每一二个小时走动一下，可以降低血栓形成的风险。如果怕忘了，就多喝水，多停车，跑跑厕所吧。 笔迹 写作能力中最基本的一种——写出简洁、有效、准确、朴素、具体的说明性和说理性文章的能力。 优秀的领导，能够把人们带到他们想去的地方；而卓越的领导，能够把人们带到他们应该去但是没想过要去的地方。 有些任务是你所陌生的，那么在执行过程中就必然会遭遇各种所谓的“意外”。其实它们根本不是意外，只不过是因为你对任务不熟悉，它们才成了“意外”。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-18]]></title>
    <url>%2F2019%2F08%2F22%2Fshare-18%2F</url>
    <content type="text"><![CDATA[Fun Programmer Competency Matrix article for knowing what our level as a programmer is. No code 编码的最高境界 播客制作入门指南 ScreenToGif 此工具可以记录屏幕的选定区域、网络摄像头的实时图像和绘图板上的实时图像，可以编辑并将动画保存为 GIF 或视频 。是一个c#项目，到时可以练着看看。 Education Ecosystem screencast of people building application, websites, games, etc. Twitch.tv The programming community of twitch. Tool html2file 收集一系列html转文档的开源插件，做成html页面转文件的微服务集成Web应用，目前包含 html转PDF、html转图片、html转markdown、html转word等等。 linux-command Linux命令大全搜索工具，内容包含Linux命令手册、详解、学习、搜集。 支持自定义样式的在线微信Markdown排版工具 Resouce 中国科学技术大学课程资源 libpku - 贵校课程资料民间整理 浙江大学课程攻略共享计划 清华大学计算机系课程攻略 Essay GitHub 新出的 Actions 是什么 华为 Harmony OS 的 SEO 问题 科学上网 English Health 腰围过粗要小心。 对于中国人来说，男性腰围85厘米、女性腰围80厘米，是腹部脂肪堆积的警戒线。一旦高于这个数值，就要小心患代谢综合征的风险，最好赶紧减肥。 肾功能不全的人，不能吃杨桃。 杨桃含有杨桃毒素，肾功能正常的人，能通过排尿代谢这种毒素，但某些肾病患者无法及时排出，可能会出现恶心、呕吐，甚至是癫痫、昏迷等中毒症状，严重时可致命。 黑枸杞没有特殊保健功效。 黑枸杞的黑色来源于花青素，目前没有证据能证明它有特殊保健功效。而且花青素在很多深色食物中都有，可以多买点茄子、黑米、紫甘蓝……便宜又好吃。 笔迹 人们可能基于一模一样的原因作出截然相反的决定。 所谓的情商，指的是一个人有多大的能力去创造共赢局面。 往往不是有兴趣才能做好，而是做好了才有兴趣。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[hacker-laws]]></title>
    <url>%2F2019%2F08%2F20%2Fhacker-laws%2F</url>
    <content type="text"><![CDATA[介绍当人们谈论开发时，会聊到许多定律。 下面收录了一些最常见的定律。 包含对一些定律、原则以及模式的解释，但不提倡其中任何一个。 它们的应用始终存在着争论，并且很大程度上取决于你正在做什么。 定律阿姆达尔定律 (Amdahl’s Law) 阿姆达尔定律是一个显示计算任务潜在加速能力的公式。这种能力可以通过增加系统资源来实现，通常用于并行计算中。它可以预测增加处理器数量的实际好处，然而增加处理器数量会受到程序并行性的限制。 举例说明：如果程序由两部分组成，部分 A 必须由单个处理器执行，部分 B 可以并行运行。那么向执行程序的系统添加多个处理器只能获得有限的好处。它可以极大地提升部分 B 的运行速度，但部分 A 的运行速度将保持不变。 下图展示了一些运行速度的提升潜能的例子： 可以看出，50％ 并行化的程序在使用大于 10 个处理单元之后的速度提升收效甚微，而 95％ 并行化的程序在使用超过一千个处理单元之后仍然可以显著提升速度。 随着摩尔定律减慢，单个处理器的速度增加缓慢，并行化是提高性能的关键。图形编程是一个极好的例子，现代着色器可以并行渲染单个像素或片段。这也是现代显卡通常具有数千个处理核心（GPU 或着色器单元）的原因。 参见： 布鲁克斯法则 摩尔定律 布鲁克斯法则 (Brooks’s Law) 英文维基百科 软件开发后期，添加人力只会使项目开发得更慢。 这个定律表明，在许多情况下，试图通过增加人力来加速已延期项目的交付，将会使项目交付得更晚。布鲁克斯也明白，这是一种过度简化。但一般的论据是，新资源的时间增加和通信开销，会在短期内使开发速度减慢。而且，许多任务是密不可分的，换句话说，这样可以使更多的资源之间能轻易分配，这也意味着潜在的速度增长也更低。 谚语 九个女人不能在一个月内生一个孩子 与布鲁克斯法则同出一辙，特别是某些不可分割或者并行的工作。 这是《人月神话》的中心主题。 参见： Death March 阅读清单：《人月神话》 康威定律 (Conway’s Law) 英文维基百科 中文维基百科 这个定律说明了系统的技术边界可以反应一个组织的结构，它通常会在改进组织时被提及。康威定律表明，如果一个组织被分散成许多小而无联系的单元，那么它开发的软件也是小而分散的。如果组织是更多地围绕以功能或服务为导向的垂直结构，那么软件系统也会反映这一点。 参见： The Spotify Model 盖尔定律 (Gall’s Law) 英文维基百科#Gall’s_law) 一个切实可行的复杂系统势必是从一个切实可行的简单系统发展而来的。从头开始设计的复杂系统根本不切实可行，无法修修补补让它切实可行。你必须由一个切实可行的简单系统重新开始。 (约翰·盖尔)) 盖尔定律说明了设计高度复杂的系统很可能会失败。它们很难一蹴而就，更多是从简单的系统逐渐演变而来。 最典型的例子便是互联网。如今的互联网是一个高度复杂的系统，而它最早只是被定义为一种在学术机构之间共享内容的方式。互联网成功实现了最初的目标，并且随着时间不断演化，最终成就了如今的复杂繁荣。 参见： KISS (Keep It Simple, Stupid) 邓巴数字 (Dunbar’s Number) 英文维基百科 邓巴数字是对一个人能够保持稳定社会关系的人数的认知极限——在这种关系中，一个人知道每个人是谁，也知道每个人与其他人的关系如何。而对这一数字的确切值则有着一些不同意见。邓巴指出，人仅能轻松地维持 150 个稳定的关系。这样的关系在一个更社会化的背景中，便是当你碰巧在酒吧里碰到这些人时候，你不会因为加入他们而感到尴尬。邓巴数字的估计值一般在 100 至 250 之间。 和人与人之间稳定的关系一样，开发人员与代码库的关系也需要努力维护。当面对大型、复杂的项目，或许多项目的归属权时，我们会依赖于约定、策略和建模过程来进行扩展。邓巴数字不仅在办公室规模的扩大的过程中举足轻重，而且在设置团队工作范围，或决定系统何时应该注重于辅助建模和组织管理开销自动化的工具时，也是非常重要的。将邓巴数字放入工程内容中进行类比，那就是您能加入并有信心随叫随到进行轮换的项目数(亦或是单个项目的规范化复杂性)。 汉隆的剃刀（Hanlon’s Razor） 英文维基百科 中文维基百科 能解释为愚蠢的，就不要解释为恶意的。 罗伯特 · 汉隆 这一原则表明，一个行为所产生的消极结果并不是恶意。相反，消极结果更有可能归咎于这些没有得到充分理解的行动或影响。 侯世达定律 (Hofstadter’s Law) 英文维基百科 中文维基百科 即使考虑到侯世达定律，它也总是比你预期的要长。 在估计需要多长时间开发时，你可能会听到此定律。软件开发似乎有这样一条定理，即我们往往不能准确地估计需要多长时间才能完成。 语出《哥德尔、艾舍尔、巴赫：集异璧之大成》。 参见： 阅读清单：《哥德尔、艾舍尔、巴赫：集异璧之大成》 哈伯特定律 (Hutber’s Law)英文维基百科 改善即恶化。 (帕特里克·哈伯特) 这个定律说明了对一个系统的改进会导致其他部分的恶化；或者它会将其他的恶化隐藏起来，并导致系统整体状态的退化。 例如，某个端点的响应延迟减少，就可能导致请求流中的吞吐量和容量问题进一步增加，并影响到另一个完全不同的子系统。 技术成熟度曲线 (The Hype Cycle &amp; Amara’s Law) 英文维基百科 中文维基百科 我们倾向于过高估计技术在短期内的影响，并低估长期效应。 (罗伊·阿马拉) 技术成熟度曲线是高德纳咨询公司对技术最初兴起和发展的视觉展现。一图顶千言： (图片来源: By Jeremykemp at English Wikipedia, CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=10547051) 简而言之，这个周期表明，新技术及其潜在影响通常会引发一阵浪潮。团队快速使用这些新技术，有时会对结果感到失望。这可能是因为该技术还不够成熟，或者现实应用还没有完全实现。经过一段时间后，技术的能力提高了，使用它的实际机会会增加，最终团队也可以提高工作效率。罗伊·阿马拉简洁地总结了这一点：我们倾向于高估技术短期内的影响，并低估长期效应。 隐式接口定律 (Hyrum’s Law) 英文在线地址 当 API 有足够多的用户时，你在合同中的承诺已不重要：你系统的所有可观察行为都将被某些人所依赖。 海伦·赖特（Hyrum Wright） 隐式接口定律表明，当你的 API 有足够多的用户时，API 的所有行为（包括那些未囊括在公共说明中的一部分）最终都会被其他人所依赖。 一个简单的例子是 API 的响应时间这种非功能性因素，还有一个更微妙的例子是：用户使用正则表达式判断错误信息的类型时，即使 API 的公共说明没有说明消息的内容，来指示用户错误的类型，一些用户也可能会使用并更改该消息，而这实际上会破坏 API 的使用。 参见： 抽象泄漏定律 摩尔定律 (Moore’s Law) 英文维基百科 中文维基百科 集成电路中的晶体管数量大约每两年翻一番。 这条定律通常用于说明半导体和芯片技术提高的绝对速度。从 20 世纪 70 年代到 21 世纪后期，摩尔的预测被证明是高度准确的。 近年来，这种趋势略有变化，部分原因受到量子隧穿效应影响。然而，并行化计算的进步以及半导体技术和量子计算潜在的革命性变化，可能意味着摩尔定律在未来几十年内继续保持正确。 墨菲定律 (Murphy’s Law / Sod’s Law) 英文维基百科 中文维基百科 凡是可能出错的事就一定会出错。 出自 爱德华·A·墨菲 ， 墨菲定律 说明了如果一件事有可能出错，那么就一定会出错。 这是一句开发人员间的俗语，在开发、测试甚至在生产中都有可能会发生一些令人意想不到的事情。而这一定律也可以参考在英式英语中更为常见的 索德定理 ： 如果某件事可能出错，那么它一定会在最糟糕的时候发生。 这些定律常常用于幽默嘲弄。但是，类似于 Confirmation Bias 和 Selection Bias 的现象很容易导致人们过分强调这些定律（即在大部分情况下，一件事的成功会显得司空见惯；而失败才会引起更多的注意和讨论）。 参见: Confirmation Bias Selection Bias 帕金森定理 (Parkinson’s Law) 英文维基百科 中文维基百科 在工作能够完成的时限内，工作量会一直增加，直到所有可用时间都被填满为止。 基于官僚机构的研究背景，该定律被应用于软件开发中。该理论认为，团队在截止日期之前效率低下，然后在截止日期前赶紧完成工作，从而使实际截止日期变得随意。 将这个定理与侯世达定律相结合，则会获得更加悲观的观点：为了在规定时间内完成工作，工作将增多，花费比预期更长的时间。 参见： 侯世达定律 过早优化效应 (Premature Optimization Effect)英文在线网站 过早优化是万恶之源。 高纳德 (唐纳德克努特的中文名) 在高纳德的《goto 语句的结构化编程》论文中，他写到：“程序员们浪费了大量的时间去思考或者担心他们的程序中的非关键部分的速度。而在考虑调试和维护的时候，这些所谓提高效率的做法实际上十分不妥。我们应该放弃小的效率点，并且要在 97% 的时间提醒自己，过早优化是万恶之源。而且连那关键的 3% 也不能够放过。” 然而，过早优化 （简而言之）可以定义为在我们知道需要做什么之前进行优化。 普特定律 (Putt’s Law) 英文维基百科 技术由两类人主导，一类是纯粹的管理人员， 一类是纯粹的技术人员。 普特定律常常遵循普特推论： 每一个技术层次，假以时日，能力将逆转。 这些结论表明，由于各种选择标准和群体组织的趋势，技术组织的工作层面将有一些技术人员，以及一些不了解复杂性和挑战的管理人员。这种现象可能是由于 The Peter Principe 或 Dilbert’s Law 造成的。 但是，应该强调的是，诸如此类的定律是一种广泛的概括，可能适用于某些类型的组织，而不适用于其他组织。 参见： The Peter Principe Dilbert’s Law. 复杂性守恒定律 (The Law of Conservation of Complexity) 英文维基百科 该定律表明系统中存在着一定程度的复杂性，并且不能减少。 系统中的某些复杂性是无意的。这是由于结构不良，错误或者糟糕的建模造成的。这种无意的复杂性可以减少或者消除。然而，由于待解决问题固有的复杂性，某些复杂性是内在的。这种复杂性可以转移，但不能消除。 该定律有趣的一点是，即使简化整个系统，内在的复杂性也不会降低。它会转移到用户，并且用户必须以更复杂的方式行事。 抽象泄漏定律 (The Law of Leaky Abstractions) 英文在线地址 在某种程度上，所有非平凡的抽象都是有泄漏的。 (乔尔斯·波尔斯基) 该定律指出，通常用于简化复杂系统的抽象，在某些情况下将底层系统泄漏出来，使得抽象表现出意外的行为。 例如加载文件并读取其内容。文件系统 API 是较低级别内核系统的抽象，它们本身是与磁盘（或 SSD 的闪存）上的数据更改相关的物理过程的抽象。在大多数情况下，处理文件（如二进制数据流）的抽象将起作用。但是，对于磁盘驱动器，顺序读取数据将比随机访问快得多（由于页面错误的开销增加）。但对于 SSD 驱动器，此开销不会出现。需要理解基础细节来处理这种情况（例如，数据库索引文件的良好结构可以减少随机访问的开销），开发人员需要合理的抽象，来处理不同的细节。 当引入更多的抽象时，上面的例子会变得更复杂。Linux 操作系统允许通过网络访问文件，但在本地表示为普通文件。如果存在网络故障，这种抽象将会泄漏。如果开发人员将这些文件视为普通文件，而不考虑它们可能会受到网络延迟和故障的影响，那么解决方案就会出错。 描述该定律的文章表明，过度依赖抽象，加上对底层过程的理解不足，实际上使得问题在某些情况下更加复杂。 参见： 隐式接口定律 真实的例子： Photoshop 启动缓慢：我过去遇到过一个问题，就是 Photoshop 启动缓慢，有时需要几分钟。问题好像是 Photoshop 启动时，会读取当前默认打印机的一些信息。但是，如果该打印机实际上是一台网络打印机，则可能需要很长的时间。将网络打印机与本地打印机当作同样的抽象，导致连接不良的情况下出现问题。 帕金森琐碎定理 (The Law of Triviality) 英文维基百科 中文维基百科 该定理显示，群体将给予更多的时间和注意力来处理琐碎的问题，而不是用来处理严肃而实质性的问题。 常见的虚构例子是委员会批准核电站的计划，他们大部分时间都在讨论自行车棚的结构，而不是电厂本身等更为重要的设计。如果没有大量的专业知识或者准备，很难给非常大的复杂主题讨论提供宝贵的意见。但是，人们希望看到更多意见。因此，他们倾向于将大量时间集中在很容易推敲，但不一定被看重的小细节上。 由上面的虚构例子产生了 Bike Shedding 的说法，以形容在琐碎细节上浪费时间这一行为。 Unix 哲学 (The Unix Philosophy) 英文维基百科 中文维基百科 Unix 哲学指软件组件应该很小，并专注于做一件特定的事情。将小而简单以及定义良好的单元组合在一起，而不是使用大而复杂的多用途程序，可以更轻松地构建系统。 像微服务架构这种现代实践可以认为是这种哲学的应用，其中服务很小，集中于做一件特定的事情，由简单的构建块组成复杂的行为。 Spotify 模型 (The Spotify Model) 英文在线地址 Spotify 模型是团队和组织结构的一种方法，已被 Spotify 实验室推广开来。在此模型中，团队围绕功能而非技术进行组织。 Spotify 模型还普及了部落、行会以及章节的概念，这些是组织结构的其他组成部分。 沃德勒定律 (Wadler’s Law) 英文在线地址 任何语言设计中，讨论下面列表中某个要素所花费的总时间与其位置成正比。 语义 (Semantics) 语法 (Syntax) 词法 (Lexical syntax) 注释语法 (Lexical syntax of comments) （简而言之，在语义上花费一个小时，就要在注释语法上花费八个小时）。 与 帕金森琐碎定理 类似, 沃德勒定律指出，在设计语言时，与这些特征的重要性相比，花在语言结构上的时间过多。 参见： 帕金森琐碎定理 原则原则通常是与设计相关的准则。 帕累托法则 (The Pareto Principle or The 80/20 Rule) 英文维基百科 中文维基百科 生活中大多数事情不是均匀分布的。 帕累托法则可以帮你认识到大多数结果来自少数投入： 某个软件的 80％ 代码只占了总分配时间的 20％（相反，最难的 20％ 代码部分占用了 80％ 的时间） 20％ 的努力产生了 80％ 的结果 20％ 的工作创造了 80％ 的收入 20％ 的错误导致了 80％ 的崩溃 20％ 的功能导致了 80％ 的使用量 在 20 世纪 40 年代，公认为质量控制之父的美国罗马尼亚工程师约瑟夫·朱兰博士，开始将帕累托法则应用于质量问题。 这个原则也被称为二八法则，重要的少数法则和因素稀疏原则。 现实的例子： 微软 2002 年的报告表明，修复最常出现的 20％ 错误，将消除 Windows 和 Office 中 80％ 的 错误和崩溃。报告地址 鲁棒性原则 (The Robustness Principle or Postel’s Law) 英文维基百科 在自己所做的事情上要保守, 在接受别人的事情上要自由。 通常应用于服务器应用程序开发中，该原则指出，你发送给其他人的内容应尽可能最小且符合要求，并且处理不符合要求的输入。 该原则的目标是构建稳健的系统。如果可以理解意图，它们可以处理不良的输入。但是，接受错误格式的输入可能存在安全隐患，特别是此类的输入未经过充分测试。 SOLID这是一个缩写，指的是： S：单一功能原则 (The Single Responsibility Principle) O：开闭原则 (The Open/Closed Principle) L：里氏替换原则 (The Liskov Substitution Principle) I：接口隔离原则 (The Interface Segregation Principle) D：依赖反转原则 (The Dependency Inversion Principle) 这些是 Object-Oriented Programming 的关键原则。诸如此类的设计原则能够帮助开发人员构建更易于维护的系统。 单一功能原则 (The Single Responsibility Principle) 英文维基百科 中文维基百科 每个模块或者类只应该有一项功能。 SOLID 的第一个原则。这个原则表明模块或者类只应该做一件事。实际上，这意味着对程序功能的单个小更改，应该只需要更改一个组件。例如，更改密码验证复杂性的方式应该只需要更改程序的一部分。 理论上讲，这使代码更健壮，更容易更改。知道正在更改的组件只有一个功能，这意味着测试更改更容易。使用前面的例子，更改密码复杂性组件应该只影响与密码复杂性相关的功能。变更具有许多功能的组件可能要困难得多。 参见： Object-Orientated Programming SOLID 开闭原则 (The Open/Closed Principle) 英文维基百科 中文维基百科 实体应开放扩展并关闭修改。 SOLID 的第二个原则。这个原则指出实体（可以是类、模块、函数等）应该能够使它们的行为易于扩展，但是它们的扩展行为不应该被修改。 举一个假设的例子，想象一个能够将 Markdown 转换为 HTML 的模块。如果可以扩展模块，而不修改内部模块来处理新的 markdown 特征，而无需修改内部模块，则可以认为是开放扩展。如果用户不能修改处理现有 Markdown 特征的模块，那么它被认为是关闭修改。 这个原则与面向对象编程紧密相关，让我们可以设计对象以便于扩展，但是可以避免以意想不到的方式改变其现有对象的行为。 参见： Object-Orientated Programming SOLID 里氏替换原则 (The Liskov Substitution Principle) 英文维基百科 中文维基百科 可以在不破坏系统的情况下，用子类型替换类型。 SOLID 的第三个原则。该原则指出，如果组件依赖于类型，那么它应该能够使用该类型的子类型，而不会导致系统失败或者必须知道该子类型的详细信息。 举个例子，假设我们有一个方法，读取 XML 文档。如果该方法使用基类型 file，则从 file 派生的任何内容，都能用在该方法中。 如果 file 支持反向查找，并且 xml 解析器使用该函数，但是派生类型 network file 尝试反向查找时失败，则 network file将违反该原则。 该原则与面向对象编程紧密相关，必须仔细建模、层次结构，以避免让系统用户混淆。 参见： Object-Orientated Programming SOLID 接口隔离原则 (The Interface Segregation Principle) 英文维基百科 中文维基百科 不应强制任何客户端依赖于它不使用的方法。 SOLID 的第四个原则。该原则指出组件的消费者不应该依赖于它实际上不使用的组件函数。 举一个例子，假设我们有一个方法，读取 XML 文档。它只需要读取文件中的字节，向前移动或向后移动。如果由于一个与文件结构不相关的功能发生更改（例如更新文件安全性的权限模型），需要更新此方法，则该原则已失效。文件最好实现 可查询流 接口，并让 XML 读取器使用该接口。 该原则与面向对象编程紧密相关，其中接口，层次结构和抽象类型用于不同组件的 minimise the coupling。 Duck typing 是一种通过消除显式接口来强制执行该原则的方法。 参见： Object-Orientated Programming SOLID Duck Typing Decoupling 依赖反转原则 (The Dependency Inversion Principle) 英文维基百科 中文维基百科 高级模块不应该依赖于低级实现。 SOLID 的第五个原则。该原则指出，更高级别的协调组件不应该知道其依赖项的详细信息。 举个例子，假设我们有一个从网站读取元数据的程序。我们假设主要组件必须知道下载网页内容的组件，以及可以读取元数据的组件。如果我们考虑依赖反转，主要组件将仅依赖于可以获取字节数据的抽象组件，然后是一个能够从字节流中读取元数据的抽象组件，主要组件不需要了解 TCP、IP、HTTP、HTML 等。 这个原则很复杂，因为它似乎可以反转系统的预期依赖性（因此得名）。实践中，这也意味着，单独的编排组件必须确保抽象类型的正确实现被使用（例如在前面的例子中，必须提供元数据读取器组件、HTTP 文件下载功能和 HTML 元标签读取器）。然后，这涉及诸如 Inversion of Control 和 Dependency Injection 之类的模式。 参见： Object-Orientated Programming SOLID Inversion of Control Dependency Injection 不要重复你自己原则 (The DRY Principle) 英文维基百科 中文维基百科 系统中，每一块知识都必须是单一、明确而权威的。 DRY 是 Do not Repeat Yourself 的缩写。这个原则旨在帮助开发人员减少代码的重复性，并将公共代码保存在一个地方。最初由安德鲁·亨特和戴夫·托马斯在 1999 年出版的《程序员修炼之道》中引用。 与 DRY 相反的是 WET（功能实现两次或者喜欢打字 Write Everything Twice or We Enjoy Typing）。 实际上，如果你在两个或更多的地方有相同的功能，你可以使用 DRY 原则将它们合并为一个，并在任何你需要的地方重复使用。 参见： 《程序员修炼之道》英文维基百科 《程序员修炼之道》豆瓣 你不需要它原则 (YAGNI) 英文维基百科 这是 *You Aren’t Gonna Need It* 的缩写。 只有当你需要某些东西的时候，才去实现它们，而不是在你预见的时候。 Ron Jeffries 是极限编程的创始人之一以及书籍《Extreme Programming Installed》的作者。 极限编程原则告诫开发人员，他们应该只实现当前所需的功能，并避免实现未来需要的功能，仅在必要时才实现。 遵守这一原则可以减小代码库大小，同时避免时间和生产力浪费在没有价值的功能上。 参见： 阅读清单《极限编程安装》 转载自hacker-laws-zh]]></content>
      <categories>
        <category>dailylog</category>
      </categories>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-17]]></title>
    <url>%2F2019%2F08%2F20%2Fshare-17%2F</url>
    <content type="text"><![CDATA[Fun wechatbot 一个微信聊天机器人，定时给女朋友发送每日天气，以及每日一句，还能帮女朋友解决垃圾分类难题 自由钢琴 作者用Vue + Tone.js做的一款钢琴类web应用，名字定为自由钢琴（AutoPiano），人生如音乐，欢快且自由。 盘点近年来的数据泄露、供应链污染事件 一个静态博客写作客户端 2019年最新总结，从程序员到CTO，从专业走向卓越，分享大牛企业内部pdf与PPT 边玩游戏边学编程，怎么做到的？！ 你有没有想过，可以通过打游戏来学编程？ Tool YouGlish 可根据单词在YouTube上查找单词的发音。 ludwig.guru Nextcloud NextCloud 是一款开源网络硬盘系统。 有了 NextCloud 你可以在自己的计算机上共享任何文件或文件夹，并将它们与 NextCloud 服务器同步。当你把文件放入共享目录，这些文件就会立即同步到 NextCloud 服务器以及所有相关联的 NextCloud / ownCloud 桌面客户端、Android 客户端或 iOS 客户端。 有了 NextCloud，你可随意在家里、数据中心或专门的提供商哪里搭建一个 NextCloud 服务器。你的文件将被存储在那里。Nextcloud 保护你的数据，并使你能够通过台式计算机或手机客户端访问你的数据。有了 Nextcloud，你还可以访问、同步和共享公司 FTP、Dropbox 或家庭 NAS 上的数据。 Resource 前端入门和进阶学习笔记，超详细的Web前端学习图文教程。从零开始学前端，做一个Web全栈工程师。 这是一份能让你更好准备下一次前端面试的图谱 你没有见过的终极实战(前端圈) 前端技术日报 前端面试每日 3+1，以面试题来驱动学习，提倡每日学习与思考，每天进步一点！每天早上5点纯手工发布面试题 Essay 如何打造一份优雅的简历？ 科学上网 VPN - ss/r代理服务商 信息论入门教程 English Health 烫伤之后什么都不要抹。 烫伤后只要记住：大量流动的凉水冲洗！直到伤处无明显疼痛感！如果情况严重，冲洗后尽快去医院。不要抹牙膏，更不要抹酱油、香油、辣椒面，又不是在烤肉。 牙刷，推荐选软毛的。 硬毛的牙刷虽然刷起来特别给力，但容易伤到牙齿和牙龈，如果刷牙时感觉有点疼，还是换个软毛牙刷吧。但也不用特意选那些“极软”“超软”的，太软了清洁效果不够好。 泡脚水不能太烫。 泡脚能让人舒服，但用过热的水有烫伤风险，还会加重皮肤干燥。生姜、枸杞、盐就别放了，又不是腌猪蹄，起不了任何作用。 笔迹 复利的力量与神奇之处在于，尽管本利的增长在最初一段时间里相当缓慢，可一旦经过长时间的积累（也必须经过长时间积累），就能产生令人惊诧的结果，最终呈指数级增长。 所谓的个人财富自由，指的是某个人再也不用为了满足生活必需而出售自己的时间了。 所谓的时间自由，不是你想干什么就干什么，而是你不想干什么就可以理直气壮地不干什么。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[computer_note]]></title>
    <url>%2F2019%2F08%2F17%2Fcomputer_note%2F</url>
    <content type="text"><![CDATA[所谓的位指的是CPU一次数据读取的最大量！ 64位CPU代表CPU一次可以读写64bits这么多的数据，32 位 CPU 则是 CPU 一次只能读取 32 位的意思。 因为 CPU 读取数据量有限制，因此能够从内存中读写的数据也就有所限制。所以，一般 32 位的 CPU 所能读写的最大数据量，大概就是 4GB 左右 一般来说，文件容量使用的是二进制的方式，所以 1 GBytes 的文件大小实际上为：1024x1024x1024 Bytes 这么大！ 速度单位则常使用十进制，例如 1GHz 就是 1000x1000x1000 Hz 的意思。 假设你今天购买了 500GB 的硬盘一颗，但是格式化完毕后却只剩下 460GB 左右的容量，这是什么原因？ 答： 因为一般硬盘制造商会使用十进制的单位，所以 500GByte 代表为 50010001000*1000Byte 之意。 转成文件的容 量单位时使用二进制(1024 为底)，所以就成为 466GB 左右的容量了。 硬盘厂商并非要骗人，只是因为硬盘的最小物理量为 512Bytes，最小的组成单位为扇区(sector)， 通常硬盘容量的 计算采用『多少个 sector』，所以才会使用十进制来处理的。 不同的 CPU 型号大多具有不同的脚位(CPU 上面的插脚)，能够搭配的主板芯片组也不同， 所以当你想要将你的主机升级时，不能只考虑CPU，你还得要留意你的主板上面所支援的 CPU 型号喔！ 不然买了最新的 CPU 也不能够安插在你的旧主板上头的！ BIOS(Basic Input Output System)是一套程序，这套程序是写死到主板上面的一个内存芯片中， 这个内存芯片在没有通电时也能够将数据记录下来，那就是只读存储器(Read Only Memory, ROM) 韧体就是绑在硬件上面的控制软件 显示适配器又称为 VGA(Video Graphics Array)，他对于图形影像的显示扮演相当关键的角色。 一般对于图形影像的显示重点在于分辨率与颜色深度，因为每个图像显示的颜色会占用掉内存， 因此显示适配器上面会有一个内存的容量，这个显示适配器内存容量将会影响到你的屏幕分辨率与颜色深度的喔！ I/O 地址有点类似每个装置的门牌号码，每个装置都有他自己的地址，一般来说，不能有两个装置使用同一个 I/O 地址， 否则系统就会不晓得该如何运作这两个装置了。而除了 I/O 地址之外，还有个IRQ 中断(Interrupt)这个咚咚。 如果 I/O 地址想成是各装置的门牌号码的话，那么 IRQ 就可以想成是各个门牌连接到邮件中心(CPU) 的专门路径啰！ 各装置可以透过 IRQ 中断信道来告知 CPU 该装置的工作情况，以方便 CPU 进行工 作分配的任务。 CMOS 主要的功能为记录主板上面的重要参数， 包括系统时间、CPU 电压与频率、各项设备的 I/O 地址与 IRQ 等，由于这些数据的记录要花费电力，因此主板上面才有电池。 BIOS 为写入到主板上某一块 flash 或 EEPROM 的程序，他可以在开机的时候执行，以加载 CMOS 当中的参数， 并尝试呼叫储存装置中的开机程序，进一步进入操作系统当中 操作系统必须要能够驱动硬件，如此应用程序才能够使用该硬件功能； 一般来说，操作系统会提供开发接口，让开发商制作他们的驱动程序； 要使用新硬件功能，必须要安装厂商提供的驱动程序才行；驱动程序是由厂商提供的，与操作系统开发者无关。 计算器的定义为：接受用户输入指令与数据，经由中央处理器的数学与逻辑单元运算处理后，以产生或储存成有用的信息； 计算机的五大单元包括：输入单元、输出单元、控制单元、算数逻辑单元、记忆单元五大部分。其中 CPU 占有控制、算术逻辑单元，记忆单元又包含主存储器与辅助内存；数据会流进/流出内存是 CPU 所发布的控制命令，而 CPU 实际要处理的数据则完全来自于主存储器； CPU 依设计理念主要分为：精简指令集(RISC)与复杂指令集(CISC)系统； 关于 CPU 的频率部分：外频指的是 CPU 与外部组件进行数据传输时的速度，倍频则是 CPU 内部用来加速工作效能的一个倍数， 两者相乘才是 CPU 的频率速度； 新的 CPU 设计中，已经将北桥的内存控制芯片整合到 CPU 内，而 CPU 与主存储器、显示适配器沟通的总线通常称为系统总线。 南桥就是所谓的输入输出(I/O)总线，主要在联系硬盘、USB、网络卡等接口设备； CPU 每次能够处理的数据量称为字组大小(word size)，字组大小依据 CPU 的设计而有 32 位与 64 位。 我们现在所称的计算机是 32 或 64 位主要是依据这个 CPU 解析的字组大小而来的！ 个人计算机的主存储器主要组件为动态随机存取内存(Dynamic Random Access Memory, DRAM)， 至于 CPU 内部的第二层快取则使用静态随机存取内存(Static Random Access Memory, SRAM)；BIOS(Basic Input Output System)是一套程序，这套程序是写死到主板上面的一个内存芯片中， 这个内存芯片在没有通电时也能够将数据记录下来，那就是只读存储器(Read Only Memory, ROM)； 目前主流的外接卡界面大多为 PCIe 界面，且最新为 PCIe 3.0，单信道速度高达 1GBytes/s 常见的显示适配器连接到屏幕的界面有 HDMI/DVI/D-Sub/Display port 等等。HDMI 可同时传送影像与声音。 传统硬盘的组成为：圆形磁盘盘、机械手臂、 磁盘读取头与主轴马达所组成的，其中磁盘盘的组成为扇区、 磁道与磁柱； 磁盘连接到主板的界面大多为 SATA 或 SAS，目前桌机主流为 SATA 3.0，理论极速可达 600Mbytes/s。 常见的文字编码为 ASCII，繁体中文编码主要有 Big5 及 UTF8 两种，目前主流为 UTF8 操作系统(Operating System, OS)其实也是一组程序， 这组程序的重点在于管理计算机的所有活动以及驱动系统中的所有硬件。 计算机主要以二进制作为单位，常用的磁盘容量单位为 bytes，其单位换算为 1 Byte = 8bits。操作系统仅在驱动与管理硬件，而要使用硬件时，就得需要透过应用软件或者是壳程序(shell)的功能， 来呼叫操作系统操纵硬件工作。目前称为操作系统的，除了上述功能外，通常已经包含了日常工作所需要的应用软件在内了]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>computer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hololens_note]]></title>
    <url>%2F2019%2F08%2F17%2Fhololens_note%2F</url>
    <content type="text"><![CDATA[使用unity开发Hololens中的空间追踪功能默认处理方式 Default Handling默认情况下，发生tracking loss期间应用所有的更新动作、事件和消息都会被暂停。同时会应用会显示一张图片给用户。可以用通过项目设置Player settings-&gt; Splash Image-&gt;Holographic Tracking Loss image选项来设置tracking loss要显示的图片。 手动处理 Manual Handling为了手动处理tracking loss， 你需要在上面提到的设置选项上取消勾选“Display tracking loss image”选项。之后就需要使用下面特定的API来处理追踪状态变化。 命名空间: UnityEngine.VR.WSA 类型: WorldManager World Manager提供了一个事件(WorldManager.OnPositionalLocatorStateChanged)来让我们识别追踪状态（追踪丢失/追踪可获取到），同时还提供了一个属性来查询当前追踪状态(WorldManager.state) 当追踪状态丢失时，场景中相机将立刻静止，不会再移动，即使用户在运动。这意味全息图形将不再响应用户的物理位置的变化，所有内容都会相对用户身体静止 在手动处理追踪状态变化时，你需要每一帧都查询当前追踪状态，或者处理OnPositionalLocatorStateChanged事件。 轮询 Polling追踪状态最重要的一个状态是PositionalLocatorState.Active，这意味着当前HoloLens的状态追踪正常工作。任何其他的状态都会导致摄像机只剩下旋转增量，而忽略位置变化。 例如： 12345678910111213void Update()&#123; switch(UnityEngine.VR.WSA.WorldManager.state) &#123; case PositionalLocatorState.Active: break; //处理激活状态内容 case PositionalLocatorState.Inhibited: case PositionalLocatorState.OrientationOnly: case PositionalLocatorState.Unavailable: default: //摄像机当前只有旋转增变化 break; &#125;&#125; 处理追踪状态变化事件 Handling the OnPositionalLocatorStateChanged event 此外更便利的方法是订阅状态追踪的OnPositionalLocatorStateChanged事件来处理： 12345678910111213141516void Start()&#123; UnityEngine.VR.WSA.WorldManager.OnPositionalLocatorStateChanged += worldManager_OnPositionalLocatorStateChanged; &#125;private void WorldManager_OnPositionalLocatorStateChanged(PositionalLocatorState odState,PositionalLocatorState newState)&#123; if(newState == PositionalLocatorState.Active) &#123; //处理即将进入追踪恢复时场景内容 &#125; else &#123; //处理即将进入状态丢失时场景内容 &#125;&#125; 我们都知道AR是虚拟物体叠加（superimpose over）在现实物体上，现实空间的光子已经打在了你视网膜上，再显示虚拟物体则是在这些光子之上增加光子。 而这个superimpose 表现在『显示』上，就是AR（Additive Display）。 你隔着玻璃看这个世界，看到的是这个世界吗？ 但如果想在这上面显示不存在的东西，所谓『holographic』，它上面的光来自于现实世界中外界环境的光和显示器的光，两个光混合。 它就是将四块分离的色彩区域，按先后顺序显示出来。所以，要把240帧每秒的刷新率分给着四个色彩区域，所以最终重叠后只有60帧每秒。 这也就是为什么Hololens 这种现实被称为全息投影的原因，它和投影仪一样，都是投射『光』。 使用Cortana语音助手和Start Menu工具录制的混合现实视频及图片格式如下： 类型 格式 扩展名 分辨率 音频 Photo JPEG .jpg 1408x792px N/A Video MPEG-4 .mp4 1408x792px 48kHz Stereo]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>hololens</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-16]]></title>
    <url>%2F2019%2F08%2F16%2Fshare-16%2F</url>
    <content type="text"><![CDATA[Fun 华为开发者大会 2019.08.09日华为开发者大会在东莞松山湖召开，会上，华为正式发布其自主研发的全新的基于微内核的面向全场景的分布式操作系统—鸿蒙OS，其具有四大技术特性: 分布式架构首次用于终端OS，实现跨终端无缝协同体验 确定时延引擎和高性能IPC技术实现系统天生流畅 基于微内核架构重塑终端设备可信安全 通过统一IDE支撑一次开发，多端部署，实现跨终端生态共享 Fortnite 世界杯 热门游戏 Fortnite 最近举行自己的世界杯比赛，共耗资3000万美元。美国16岁少年 Kyle 夺得冠军，奖金300万美元。 这个奖金已经超过了温布尔登网球赛的冠军，只比美国公开赛的冠军少80万美元。这就是说，电子竞技的奖金已经跟顶级的职业体育运动不相上下了。Fortnite 世界杯最后一天的决赛在 YouTube 直播，有近900万人观看。 Megapack 特斯拉虽然是汽车公司，但是核心技术是电池。它在推出家庭电池包 Powerpack 以后，又推出了企业级电池包 Megapack，类似集装箱大小，一次可以储存3000度电。 300多个 Megapack 就可以组成一个电能储存厂，保存100万度电，能够满足旧金山6个小时的用电需求。这种电能储存厂的安装速度也很快，只要用卡车把 Megapower 拉到现场以后，可以快速建厂。 在不考虑安全的前提下，如何设计一个方案，实现 4 个 G 的文件的快速异地传输？比如从北京到上海 youtube 上有什么优秀频道推荐 世界上居然存在一个地方，可以看视频，没什么广告，还可以评论，太神奇了。不过问题是，youtube 这种推荐算法， 是你看了什么就给你推类似的，好像一道菜好吃，就让你使劲吃，吃到吐为止， 相当智障。所以请问下有没有什么优秀的频道推荐， 各种类型都行，因为罗素说过： 参差多态乃是幸福之源。 如何用 Github 免费在线播放你的幻灯？ 这样一个工具，能让你从此摆脱优盘和连接线，潇洒从容走向讲台。在课堂展示或者学术报告中，直接在浏览器输入网址，就开始精彩的讲解汇报。 Tool 下载YouTube的视频/音频/字幕 在线图片去水印 Zen Flowchart 简单好用的在线流程图工具。 面包多 创造者出售数字作品的平台。你上传作品，设定价格，在这个平台出售。 Resouce 开源的中性风格的图标系统 论文阅读笔记（分布式，虚拟化，容器，机器学习） OI Wiki OI Wiki 致力于成为一个免费开放且持续更新的知识整合站点，为大家准备了编程竞赛中的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速深入地学习编程竞赛。 Essay 简单的NAS不简单 近 20 位中国摄影师横扫手机摄影届奥斯卡——IPPA 3 分钟找书指南 English Health 推荐每天1杯奶。 牛奶，是性价比特别高的天然钙剂和优质蛋白质来源，推荐大家每天喝1杯（300克）。300克牛奶中的蛋白质含量，大约和1两（50克）瘦猪肉差不多。某种程度上说，喝奶，赚啦！ 成年人每天最佳睡眠时间是7~9小时。 研究发现，18~64岁的成年人，每天最佳睡眠时间是7~9小时。每天超过10小时的睡眠，可能反而让有些人觉得更累，对健康没有特别好处。 吃姜可以缓解恶心。 一些研究发现，吃姜能缓解恶心的症状，尤其是孕吐。虽然机制暂时不清楚，但如果你晕车和晕船，或准妈妈孕吐很严重，不妨试一试。 笔迹 我上那么多年学，熬那么多夜，做那么多习题，顶着各种各样的压力，然后实习，谈恋爱，分手，工作，加班，我这么辛苦，竟然是为了成为一个普通人。 一个人有目标、会做事、善待人、有趣味，这才是修养的最高境界。 靠谱的三要素： 负责 ，清晰，自驱 负责：有责任心有担当，凡是有交代，件件有着落，事事有回音。 清晰明确：讲证据讲逻辑，遵守约定 自驱：敢于在没条件时创造条件，没思路时创造思路。遇到问题和困难要想办法解决，而不是去逃避。面对未知领域，抱着成事的决心，不断调研学习。 没有结果，工作等于白做。 Learning 新能源的极限 目前，石油、天然气、煤等碳氢化合物，提供了全世界84％的能源。风能和太阳能提供了全世界2%的能源。 尽管如此，许多人还是主张尽快把所有碳氢化合物都替代掉，并称其为”新能源经济”。 但是，风能，太阳能和电池存储技术有其极限，全世界近期几乎不可能向”新能源经济”过渡。原因如下： （1）碳氢化合物有低成本、高能量密度、稳定性、安全性和便携性等卓越的优点，科学家尚未发现跟它们一样优秀的替代物。 目前，在风力涡轮发电机或太阳能电池板上投入100万美元，每年产生约5000万度电，但是在页岩钻井平台上花费100万美元，生产的天然气可以产生2亿度电。 （2）硅光伏电池有物理极限，称为 Shockley-Queisser Limit，即最多只有 34％的光子可以转换为电子。今天最好的商业光伏技术，转化率已经超过26％。 （3）风力发电机的物理极限是 Betz Limit，即最多只能从移动的空气中捕获 60％ 的动能。今天的商用风力涡轮机，转化率已经超过 40％。 （4）世界最大的电池工厂特斯拉的 Gigafactory，一年生产的电池只能支撑全美国的用电需求三分钟。连续生产1000年的电池，可以支撑美国两天的电力需求。与此同时，每生产一磅电池，需要开采、移动和加工50-100磅的各种材料。 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[wechat applet]]></title>
    <url>%2F2019%2F08%2F11%2Fmini%20program%2F</url>
    <content type="text"><![CDATA[微信小程序的视图与渲染 组件的基本使用 数据绑定 渲染标签: 判断标签，循环标签 模板的使用：include，import 微信小程序的事件——课程概要 什么是事件 一种用户行为，一种通讯方式 事件类别 点击事件tap 长按事件 longtan 触摸事件 touchstart touchend touchmove touchcancel 其他 submit input… 事件冒泡 冒泡事件 非冒泡事件 事件绑定 bind catch : 不会触发父view 事件对象详解 类型type 时间戳 timeStamp 事件源组件 target 当前组件 currentTarget 触摸点数 touches 综合案例一快递查询 产品需求 准备 编码实战 微信小程序的配置详解 app的页面配置 app的窗口配置 app的 tabBar配置 网络超时配置及 debug开启配置 页面配置 微信小程序的生命周期与app对象的使用 APP的生命周期 APP对象的使用 微信小程序页面的生命周期和参数传递 页面的生命周期 页面跳转的数据传递 wx: navigateTo / wx: redirectTo 综合案例——用户登录 项目需求 编码实战 微信小程序的UI精讲 布局和样式基础 组件使用 项目实战 微信小程序UI精讲之布局基础 flex布局基础 flex的容器和元素 flex容器属性详解 flex- direction决定元素的排列方向 flex-wrap决定元素如何换行(排列不下时) flex-flow flex- direction和fex-wrap的简写 justify- content元素在主轴上的对齐方式 align-items元素在交叉轴的对齐方式 flex元素属性详解 flex-grow当有多余空间时,元素的放大比例 flex-shrink当空间不足时,元素的缩小比例 flex- basis元素在主轴上占据的空间 flex是grow、 shrink、 basis的简写 order定义元素的排列顺序 align-self定义元素自身的对齐方式 flex布局实战 相对定位和绝对定位 理解相对定位和绝对定位 相对定位、绝对定位的编码实战 相对定位的元素是相对自身进行定位,参照物是自己。绝对定位的元素是相对离它最近的一个已定位的父级元素进行定位。 微信小程序UI精讲之组件的使用 组件的使用 组件的配置 微信小程序精讲之视图容器组件 view scroll-view swiper 微信小程序UI精讲之基础内容组件 Icon text progress 微信小程序UI精讲之表单组件 button 按钮 checkbox 多选框 Input 输入框 label 标签 picker 选择器 radio 单选框 slide 滑块 switch 开关 form 表单 微信小程序UI精讲之操作反馈小工具 action-sheet modal toast loading 微信小程序UI精讲之导航 navigator 微信小程序UI精讲之多媒体 image audio video 微信小程序UI精讲之地图与LBS 地图map的基本使用 地图标记 地图覆盖物 微信小程序UI精讲之画布与游戏 canvas的使用 绘图API的使用 综合案例-评测小程序首页的实现 项目需求 编码实战 微信小程序API之请求服务器数据 wx.request的使用 了解http协议 微信小程序API之图片选择与调用微信拍照 wx. chooselmage选择图片 照相机拍照 微信小程序API之文件上传与下载 文件上传 文件下载 微信小程序API之 WebSocket精讲 什么是 WebSocket 使用 WebSocket 监听 WebSocket 微信小程序API之音乐的播放和控制 音乐的播放 音乐的控制 微信小程序API之缓存数据 保存数据 读取数据 删除数据 数据异步操作 微信小程序API之获取当前位置 获取位置 查看位置 微信小程序API之设备信息 网络状态 获取系统信息 获取重力感应 罗盘 拔打电话 微信小程序API之交互反馈 showToast showModal showActionSheet 微信小程序API之导航和导航条 导航条标题设置 导航条加载动画设置 导航 微信小程序API之动画 动画的基本使用 旋转动画 缩放动画 偏移动画 倾斜动画 矩阵变形 微信小程序API之绘图 cavans及context详解 绘图API的使用 游戏的制作 课程介绍课程安排 产品设计-进行产品分析(xmind)和原型设计(墨刀) 框架搭建-微信小程序MINA框架讲解和配置 产品层级、组件模块化设计 为什么要对小程序进行组件模块化设计?微信小程序有代码大小限制提高代码的复用率 如何进行组件模块化设计?通过WXML的import和 include来使用文件模板使用WXSS的@import来引用WXSS文件使用JS的 require来引用JS文件 .json 后缀的 JSON 配置文件 .wxml 后缀的 WXML 模板文件 .wxss 后缀的 WXSS 样式文件 .js 后缀的 JS 脚本逻辑文件 pages字段 —— 用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前你的小程序页面定义在哪个目录。 window字段 —— 定义小程序所有页面的顶部背景颜色，文字颜色定义等。 从事过网页编程的人知道，网页编程采用的是 HTML + CSS + JS 这样的组合，其中 HTML 是用来描述当前这个页面的结构，CSS 用来描述页面的样子，JS 通常是用来处理这个页面和用户的交互。 同样道理，在小程序中也有同样的角色，其中 WXML 充当的就是类似 HTML 的角色。WXSS 具有 CSS 大部分的特性，小程序在 WXSS 也做了一些扩充和修改。 1rpx = 0.5px = 1物理像素。 小程序编译后，rpx会做一次px换算。换算是以375个物理像素为基准，也就是在一个宽度为375物理像素的屏幕下，1rpx = 1px。 举个例子：iPhone6屏幕宽度为375px，共750个物理像素，那么1rpx = 375 / 750 px = 0.5px。 还需要注意的是 JSON 文件中无法使用注释，试图添加注释将会引发报错。 “比如我在面试的时候问到一个关于小程序的问题，问小程序有window对象吗？他说有吧”，但其实是没有的。]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>wechat applet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-15]]></title>
    <url>%2F2019%2F08%2F10%2Fshare-15%2F</url>
    <content type="text"><![CDATA[Fun 太阳能甲醇岛 瑞士科学家提出一个设想，海洋上铺设直径100米的太阳能浮岛，利用太阳能发电。电力输送到旁边的轮船。轮船使用这些电力，从海水中提取氢气，与二氧化碳合成甲醇，然后定期将甲醇送回陆地，作为燃料。 相比汽油，甲醇的安全性更好，更有利于环境保护。根据计算，只要有17万个这样的太阳能浮岛，就能弥补这个系统的成本。 世界最大的太阳能电厂 阿联酋在沙漠之中，建设了一个世界最大的太阳能电厂，一共安装了320万块太阳能板，可以为9万人供电。峰值发电量是1180兆瓦，相比之下，美国最大的太阳能厂是569兆瓦。 零网（ZeroNet）初探 ZeroNet 是一个去中心化的类似于 Internet 的网络，由匈牙利的开发者使用 Python 制作，完全开源。ZeroNet 是一个利用比特币加密和 BT 技术提供不受审查的网络与通信的 BT 平台，ZeroNet 网络功能已经得到完整的种子的支持和加密连接，保证用户通信和文件共享的安全。使用 ZeroNet，你可以匿名上网，你可以在自己电脑搭建网站，但即使你关机，你的网站依然在全球存在，别人无法关闭你的网站。 AI 绘制地图 人工绘制地图，通常很慢，标识道路、高速公路、桥梁等，需要大量的投入。Facebook 开发了一个人工智能系统，可以从卫星照片自动生成地图。上图中，白色线条是现有道路，粉红色线条是人工智能识别出来的道路。 炸弹无人机的实物被贴到了推特，可以编程指定飞行轨迹，具有12分钟飞行时间，或20分钟滞空时间。难以想象，这种武器普及的后果。 北极大火 根据卫星照片，北极圈内多个地点，从阿拉斯加、西伯利亚到格陵兰，目前都是烟雾缭绕，表明那些地方都正在发生森林大火。 今年6月，北极圈的气温是有史以来最高的，很多地方超过30度，异常闷热，干燥高温导致了这些森林火灾。更糟糕的是，火灾会释放大量二氧化碳，进而引起气温进一步升高，而更高的气温又引发了更多的火灾。那些地点都是人迹罕至，不太可能去扑救，只能听任大火燃烧。 Tool 小木屋是一款优秀的网站导航。收录国外和国内各类实用网站,提供简单便捷的网上导航服务。 Toolfx.com 该网站收集专供程序员使用的一些在线工具。 shadowPlayer 高清无损音乐免费下载 Resource Freely available programming books 经典编程书籍大全 windows计算器的源码 Essay HTTP Referer 教程 确认过眼神，看清 HTTP 协议 2019年度大学新生笔记本选购简单指南 Health 隔夜的凉白开水可以喝 耳朵进水之后不把水清干，细菌，真菌容易在温暖湿润的耳朵里繁殖，导致炎症 红药水中含有汞，有引起汞中毒的风险，所有皮肤擦伤，不要涂红药水，用碘附（碘伏）消毒就好 笔迹 你现在的气质里，藏着你走过的路，读过的书，爱过的人。 ——电影《卡萨布兰卡》 世界上显示力量的方式其实有三种：庞大，胜利，精确 一个好职业的特点：反馈及时，终身学习，受人尊重 Learning“互联网+”的核心新技术：移动互联网，云计算，大数据，物联网 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[漫画算法——小灰的算法之旅]]></title>
    <url>%2F2019%2F07%2F25%2F%E6%BC%AB%E7%94%BB%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[算法概述 什么是算法在计算机领域里,算法是一系列程序指令,用于处理特定的运算和逻辑问题。衡量算法优劣的主要标准是时间复杂度和空间复杂度。 什么是数据结构数据结构是数据的组织、管理和存储格式,其使用目的是为了高效地访问和修改数据。数据结构包含数组、链表这样的线性数据结构,也包含树、图这样的复杂数据结构 什么是时间复杂度时间复杂度是对一个算法运行时间长短的量度,用大O表示,记作T(n)=O(f(n))常见的时间复杂度按照从低到高的顺序,包括O(1)、O(logn)、O(n)、O(nlogn)、O(n2)等。 什么是空间复杂度空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度,用大O表示,记作S(n)=O(f(n))常见的空间复杂度按照从低到高的顺序,包括O(1)、O(n)、O(n2)等。其中递归算法的空间复杂度和递归深度成正比。 数据结构基础 什么是数组数组是由有限个相同类型的变量所组成的有序集合,它的物理存储方式是顺序存储,访问方式是随机访问。利用下标查找数组元素的时间复杂度是O(1),中间插入、删除数组元素的时间复杂度是O(n) 什么是链表链表是一种链式数据结构,由若干节点组成,每个节点包含指向下一节点的指针。链表的物理存储方式是随机存储,访问方式是顺序访问。查找链表节点的时间复杂度是O(n),中间插入、删除节点的时间复杂度是O(1)。 什么是栈栈是一种线性逻辑结构,可以用数组实现,也可以用链表实现。栈包含入栈和出栈操作,遵循先入后出的原则(FILO) 什么是队列队列也是一种线性逻辑结构,可以用数组实现,也可以用链表实现。队列包含入队和出队操作,遵循先入先出的原则(FIFO)。 什么是散列表散列表也叫哈希表,是存储 Key-Value映射的集合。对于某一个Key,散列表可以在接近O(1)的时间内进行读写操作。散列表通过哈希函数实现Key和数组下标的转换,通过开放寻址法和链表法来解决哈希冲突。 树 什么是树树是n个节点的有限集,有且仅有一个特定的称为根的节点。当n&gt;1时,其余节点可分为m个互不相交的有限集,每一个集合本身又是一个树,并称为根的子树。 什么是二叉树二叉树是树的一种特殊形式,每一个节点最多有两个孩子节点。二叉树包含完全又树和满二叉树两种特殊形式。 二叉树的遍历方式有几种根据遍历节点之间的关系,可以分为前序遍历、中序遍历、后序遍历、层序遍历这4种方式从更宏观的角度划分,可以划分为深度优先遍历和广度优先遍历两大类。 什么是二叉堆二叉堆是一种特殊的满二叉树,分为最大堆和最小堆。在最大堆中,任何一个父节点的值,都大于或等于它左、右孩子节点的值。在最小堆中,任何一个父节点的值,都小于或等于它左、右孩子节点的值。 什么是优先队列优先队列分为最大优先队列和最小优先队列。在最大优先队列中,无论入队顺序如何,当前最大的元素都会优先出队,这是基于最大堆实现的。在最小优先队列中,无论入队顺序如何,当前最小的元素都会优先出队,这是基于最小堆实现的。 排序算法 面试中的算法 如何判断链表是否为有环链表？ 创建两个指针，类似跑道的追及问题。 实现一个栈，该栈带有出栈（pop），入栈（push），取最小元素（getMin）3个方法。要保证这3个方法的时间复杂度都是O(1) 设置备胎栈，用于辅助栈A 如何求出最大公约数？ 把辗转相除法和更相减损术的优势结合起来，在更相减损术的基础上使用移位运算(/2)。 判断一个正整数是否是2的整数次幂 用原数值（2的整数次幂）和它减1的结果进行 求无序数组排序后的任意两个相邻元素的最大差值 利用计数排序/桶排序的空缺 用栈实现队列 设置备胎栈，用于辅助栈A 寻找全排列的下一个数 运用字典序算法 从后向前查看逆序区域，找到逆序区域的前一位，也就是数字置换的边界 让逆序区域的前一位和逆序区域中大于它的最小的数字交换位置 把原来的逆序区域转为顺序状态 删去k个数字后的最小值 贪心算法：求得局部最优解，最终得到全局最优解的思想 把原整数的所有数字从左到右进行比较，如果发现某一位数字大于它右面的数字，那么在删除该数字后，必然会使该数位的值降低 如何实现大整数相加 为大整数建立两个临时数组 如何求解金矿问题 运用动态规划的核心思想（自底向上求解） 在一个无序数组里有99个不重复的正整数，范围是1 ~ 100，唯独缺少1个1 ~ 100 中的整数。如何找出这个缺失的整数？ 先算出1 ~ 100 的累加和，然后再依次减去数组里的所有元素，最后的差值就是所缺少的整数。 在一个无序数组里有若干个不重复的正整数，范围是1 ~ 100，其中99个整数都出现了偶数次，只有1个整数出现了奇数次，如何找到这个出现奇数次的整数？ 把数组里的所有元素进行异或运算，最后得到的就是那个缺失的整数 在一个无序数组里有若干个不重复的正整数，范围是1 ~ 100，其中98个整数都出现了偶数次，只有2个整数出现了奇数次，如何找到这2个出现奇数次的整数？ 把数组元素依次进行异或运算，得到的结果是2个出现了奇数次的整数的异或运算结果，在这个结果中至少有1个二进制位是1 算法的实际应用 关于用户标签的需求：Bitmap算法（位图算法） 关于用户信息的需求：LRU算法（Least Recently Used）：哈希链表 关于迷宫寻路的需求：A星寻路算法 关于红包的需求： 二倍均值法 每次抢到的金额 = 随机区间[0.01，m/n * 2 - 0.01]元]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-14]]></title>
    <url>%2F2019%2F07%2F19%2Fshare-14%2F</url>
    <content type="text"><![CDATA[Fun 四大会计师事务所指世界上著名的四个会计师事务所：普华永道（PwC）、德勤（DTT）、毕马威（KPMG）、安永（EY）。 宇宙模拟器 SpaceEngine 是 Steam 上面的一个软件，提供 3D 虚拟宇宙的模拟器。用户可以探索行星和星系，并观察你喜欢的任何天体现象。最新版本收费，老版本免费。 人体风格的纽约地铁图 纽约一位五官科医生，将纽约地铁图画成人体解剖图的形式。 ECMO ECMO是”体外膜氧合”的缩写（台湾译成”叶克膜”），是一套医疗系统，用于心脏或肺部失去功能的危重病人，在体外完成血液的氧合。 通俗地说，就是将血液引出体外，通过机器将血液里面的废物除去，把氧气加进去，然后再输入体内，充当体外临时的心脏和肺。 ECMO 不是永久性措施，而是一个过渡措施，为病人争取时间，等待心脏或肺的移植。病人必须住在 ICU（重症护理病房），时刻监控，离开 ICU 就会死。 家庭称谓计算器 中国家庭关系称谓很麻烦，所以这个作者就开发了一个家庭关系称呼查讯工具 喵星人教你 HTTP 状态码 Tool 多功能图像识别 一款在线 PS 软件，支持 PSD、Skecth 等格式 Hat.sh 是一款简单易用的文件加密解密工具，打开浏览器就能用，本地加密解密。 Resource 影视飓风音乐资源大公开 搜韵——诗词门户网站 想做前端开发？推荐几个必备珍品组件库 Essay 所见即所触，教AI实现触觉和视觉的信息交互 Kubernetes 儿童插图指南 —— 献给所有试图向孩子们解释软件工程的家长 阿里前端委员会主席圆心：前端路上的思考 如何租到一套满意的房子？这些是我们的经验 Learning 机器学习可以分成三大类：监督学习、无监督学习（unsupervisedlearning）以及强化学习。 机器学习是人工智能的重要分支，这一领域通常会利用概率论、统计学、计算机科学等知识，从训练数据中识别特征模式、学习规律，以此对未来数据进行分类、预测。强化学习便属于机器学习的范畴。机器学习可以分成三大类：监督学习、无监督学习（unsupervisedlearning）以及强化学习。监督学习，是目前研究及应用最多的学习方式。顾名思义，这种方法是需要通过“监督者”预先填好标签（label）的训练数据进行学习的方式。监督学习的任务，根据目的的不同又可分为回归分析（regression）和分类（classifcation）。简单来说，回归分析任务的输出是连续的，而分类任务的输出则是离散的。各大高校的机器学习课程中，大多采用两个简单的例子来区分这两类任务：“回归分析”的典型代表是房价预测——在这个问题中，输入数据是房子的属性值（如房子的大小、卧室数量、洗手间个数），输出数据则是房价（连续的）；“分类”的代表是癌症诊断，这时输入的数据是肿瘤属性（如大小、位置），输出的数据则是良性或恶性（离散的）。无监督学习，则无须事先为数据贴好标签。这种方式更像是聚类（clustering）的过程，即根据数据的特征，发现实例之间的相似性[10]。前任百度首席科学家、人工智能专家吴恩达（Andrew Ng），曾在斯坦福大学的机器学习课程中用“鸡尾酒会问题”对无监督学习的应用场景作出了解释。“鸡尾酒会问题”的实质，是从音频数据中分离出不同声音源发出的声响。假设在酒会会场中的两个不同位置各放一个麦克风，输入数据就是这些设备采集到的音频数据，这一声音分离任务之所以为“无监督”，是因为我们事先无法给每个声音打上标签。这一方法最成功的案例，可能要算谷歌脑（Google Brain）在无监督的情况下通过观看You Tube视频截图形成“猫”的概念。强化学习也属于机器学习，不过它与其他两种方式有着显著的区别。强化学习需要通过与“环境”的交互，逐步进行学习。然而在与环境交互的学习过程中，很难从整体上去判断过程中的每一步究竟谁对谁错。这就好比在与李世石棋赛的第二盘，Alpha Go第37手肩冲的一招棋，是让棋圣聂卫平也不禁“脱帽致敬”的好棋。然而纵观整场比赛，带领黑棋走向最终胜利的，究竟是这个神来之笔，还是之前的伏笔，抑或是之后看似不经意的某一步，几乎让人无法做出评断。也就是说，在这种情况下，我们这些“监督者”无法真正地对每一步、每一个情形都贴上对或错的标签。强化学习的方式，则是在每次对弈后，根据胜平负的情况给予机器代理（agent）不同程度的奖励，而机器代理要做的就是努力让自己每盘棋累积的奖励最大化。 Picture 笔迹 语言就像种子，会在时光里的流逝里慢慢长大。 规模算法：认知半径要尽可能地宽，能力半径要尽可能地明确，行动半径要尽可能地小 学校的新使命：创造出更多的尺子，让每一个学生在不断的试错中，都能找到那把量出自己优势的尺子]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-13]]></title>
    <url>%2F2019%2F06%2F29%2Fshare-13%2F</url>
    <content type="text"><![CDATA[Fun 无气轮胎 米其林轮胎公司推出了一种无气轮胎。这种轮胎不用充气，内部填充的是玻璃纤维，这样就不会产生刺穿漏气或者爆胎问题了。这种轮胎的最高时速为210公里，负重500公斤，有比充气轮胎更长的使用寿命。它将在雪佛兰的电动车上试用，如果顺利将在2024年投入市场。 Raspberry Pi 4 树莓派第四代发布了，性能比第三代强了好几倍，已经赶上 PC 了，四个 USB 口，千兆网口，蓝牙5.0，双 4K 显示器支持，4Kp60 视频硬解码，价格从35美元到55美元。它的性能已经可以支持一个中型网站了。以后可能只要随身带一个树莓派就行了，干完活就跟云端同步一下。 日本虎杖 日本虎杖是一种草本植物，原产于日本。它通常可以长到一根手杖的高度，因此得名，最高能长到3米～4米。它具有极高的繁殖速度，很难去除，因此已经在欧美成为一种威胁极大的入侵物种，对当地生态造成了严重问题。 虎杖的生命力很强，可以顶破柏油路面。 哥本哈根目录 该网站提供150条创业原则，每条原则都有自己的一张海报，一共150张创业海报，都可以下载。上图的标语是”增长不是一个目标，而是副产品。” Aminated Knots 收集各种绳子打结的方法，并且有动画教学。 臆病な魔女 一个具有非常酷炫动画的日本动漫网站，代码开源。 Tool 免费的在线文档翻译器——保留原文档的排版（Word、PDF、Excel、Powerpoint、OpenOffice、文本） belly.io 该网站收集各种程序员的编码直播。 新趣集 中文的新产品发现社区。 Resource 工业工程，魅力无穷 | 工业工程类专业招生宣传片 premiere教学视频 今日热榜——聚合世界焦点，提供各站热点聚合 Essay 靠谱的人千篇一律，不靠谱的人各掉各的链子 树莓派 4 无法兼容所有 USB-C 线缆 腾讯九年，我毕业了 Picture 笔迹 我们是地球上有过迷路经验的最后一代人 变色龙是大自然的取色器 总体的多或少，最终都会演变为局部的有或无]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[hacker]]></title>
    <url>%2F2019%2F06%2F17%2Fhacker%2F</url>
    <content type="text"><![CDATA[通过手机发动黑客攻击有两种思路，每种展开都可以写很长，一句话总结：电脑能发动的攻击，手机都能发动。不方便用电脑的场景下，手机有时甚至能收到奇效。 思路一：控制服务器发动攻击一般来讲大部分黑客手里都握有不少服务器资源，在手机上可以通过SSH的方式连接到远程服务器，然后敲命令指挥远程服务器发动攻击。比如下图所示的，我用Juice SSH登录到自己的远程服务器上，对一个随手翻到的页面发动了一次SQL注入扫描。 采用这个思路的话，电脑能够发动的攻击手机都能发动，完全不受具体系统或硬件设备的限制，甚至可以做到路边借来一台手机也能在五分钟内发动一次网络攻击。 思路二：通过手机本身发动攻击这种思路的话局限比较大，iPhone手机基本就别想了，Android设备还能考虑一下。 走这个思路的话，我就介绍一下大名鼎鼎的Kali NetHunter吧。它是Kali团队深度定制开发的一款Android系统，主要支持Nexus系的设备，支持以下几个非常有嚼头的攻击方式： 伪造WiFi热点，比如建一个假的机场WiFi/星巴克WiFi给其他人连接，监听他们的网络流量。看看坐在你周围的这些人到底在上些什么网站，有没有在刷奇怪的小黄文之类的。 支持BadUSB劫持，你吸引住受害者的注意力，把这台设备往他电脑上一插，就会刷刷刷打开一个PowerShell窗口执行一串命令，这电脑就算沦陷了。 搭载了Kali Linux的全套工具包，比如常用的NMAP、SQLMap、Metasploit，哪怕没有远程服务器，能发动的攻击也一样不少。 0day漏洞 0day漏洞就是指在系统商不知晓或是尚未发布相关补丁前就被掌握或者公开的漏洞信息。 Keysweeper可以无线窃取附近微软无线键盘的信号，并记录每一次的输入，然后通过内置的GSM网络发送出去，一旦发现重要资料，比如银行账户和密码，它还会自动提醒黑客。 BYOD(Bring Your Own Device)指携带自己的设备办公，这些设备包括个人电脑、手机、平板等（而更多的情况指手机或平板这样的移动智能终端设备。）安全内网中计算机中的数据仍有通过移动智能终端等BYOD设备被传出的威胁 CNVD国家信息安全漏洞共享平台]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>dev</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-12]]></title>
    <url>%2F2019%2F06%2F17%2Fshare-12%2F</url>
    <content type="text"><![CDATA[Fun WordArt这是一个文字云生成的网站，我给好多人推荐过，大家都非常喜欢，它可以将一些文字自动排版成图形。 Pixel Map GeneratorPixel Map Generator，这是一款可视化地理图表生成器。在PPT中，插入一张网上的中国地图和世界地图，很难看，问我怎么办？使用 Pixel Map Generator就可以了。这个神器，还能够给地图进行上色、添加图例和线段等功能，操作上也非常简单，是一款可视化地图的神器。 MoshMOSH，这是一个故障效果的生成网站。什么是故障效果呢，你在一些悬疑电影或者电视剧里应该会经常看到，比如，电视监控画面突然出现了故障，屏幕模糊，一闪一闪的。 上传之后，右侧我们可以看到许多的故障效果，有像素化，摇晃，点矩阵、坏电视等等效果。点击mosh可以随机生成，在页面左上角，还可以切换为录像形式，点下record可以进行录制，录制完为GIF的动图。 ShapeFactory这是一个非常酷的图片滤镜网站，非常非常酷。你只要上传一张图片，它就可以将图片生成炫酷的色调风格。 深度唤醒装置 日本铁路公司 JR 以准时著称，为了保证员工不睡过头，该公司发明了一种深度唤醒装置，效果远超闹钟，即使睡得最死的人也能被叫醒。该装置原来只供内部员工使用，现在推向了市场，所有人都可以购买。 它的原理很简单，就是床垫下面的一个充气垫子，时间一到就会自动充气，从而鼓起，使得上面的人无法再躺着（下图）。这个过程重复多次，直到手动关闭为止。 照片的吸引力判断 美国一家创业公司，研发了一种人工智能算法，可以判断照片在他人眼里的感觉。上图有三种颜色的指标，蓝色表示聪明，绿色表示信赖，红色表示吸引力。可以看到，算法认为左起第二张照片最有吸引力。这种算法的一大应用，就是自动从一堆照片里面，挑出最佳的那一张 Tool 图形计算器 该网站左侧输入公式，右侧自动输出图像，非常直观。 CSSfx 该网站收集各种 CSS 特效，可以复制粘贴到自己的项目。 Colorize 黑白照片自动上色的服务。 Resource Arduino，做项目，学习电子控制必备 极客工坊 3D打印模型网站 国外有趣DIY网站 Essay 写论文、搞科研、读大学必备的28款软件。 如何「读」懂一杯咖啡？ 纳达尔用33年，教会我的20件事 Picture 笔迹 每天有86400秒，活到80岁有29220天 修昔底德陷阱，指一个新崛起的大国必然要挑战现存大国，而现存大国也必然来回应这种威胁，这样战争变得不可避免。 画面感要有温度，色彩，感受]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[调线方法]]></title>
    <url>%2F2019%2F06%2F16%2Fnetwork-2%2F</url>
    <content type="text"><![CDATA[首先介绍线序： ​ 1 2 3 4 5 6 7 8 T568A标准：绿白 绿 橙白 蓝 蓝白 橙 棕白 棕（网线两头分别A、B标准，同类设备相连的交叉线） T568B标准：橙白 橙 绿白 蓝 蓝白 绿 棕白 棕（常用） 双绞线（B标准）： 1橙白——2橙 （发送） 3绿白——6绿 （接收） 4蓝 ——5蓝白 (一般备用,千兆除外) 7棕白——8棕 （一般备用,千兆除外） 一般情况下，只要1（橙白）2（橙）3（绿白）6（绿）通，就能正常上网。需要调线的情况就是墙内线原因导致4线中有若干线不通。需要调整的地方为出现问题的墙内线两端，一端是宿舍端模块（有可能新旧，一定要是出问题墙内线一端），另一端是水晶头（宿舍接旧模块的水晶头，配线架端口水晶头，有些是直接连交换机的就交换机端口水晶头），此处配线架后模块线序也可对应调整，但是比较困难，不推荐。 所以，可以分为两种情况： 调用一组备用线（1236单线不通，12或36一组双绞线不通）： 假设1（橙白）不通，因为本身是双绞线的抗干扰能力强，最好的换法是1（橙白）2（橙）与4（蓝）5（蓝白）或7（棕白）8（棕）调换，前提是有一组备用线是完好的，先小后大，大小对应，就是1对4或7, 2对5或8，其他同理。（注意：墙内线出问题的两端都是这样调整） 调用两组备用线（接收和发送各一不通，接收不通发送一不通，发送不通接收一不通，接收发送都不通）： 假设1（橙白）3（绿白）不通，最好的换法是1（橙白）2（橙）与4（蓝）5（蓝白）调换，3（绿白）6（绿）与7（棕白）8（棕）调换，前提是两组备用线完好。 当然，这是一般情况下情况下的做法，特殊情况特殊处理（噗），视具体情况而定。]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>dev</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[检查网络状况技巧]]></title>
    <url>%2F2019%2F06%2F16%2Fnetwork-1%2F</url>
    <content type="text"><![CDATA[ping命令，就是用来检查本机是否能连上一个目标机器 如果ping通了路由器的网关后，说明你的电脑和路由器之间的链接是正常的，反之，则说明这段链路出现问题。如果ping路由器网关正常后，再ping运营商的dns，发现ping不同，一般是路由器到运营商之间的问题 ping 127.0.0.1 : 查看是否丢包，检测本地TCP／IP协议是否安装正常 ping www.baidu.com -t :检测电脑与网络是否联通，检测网络是否正常 如何用命令符ping网关？ 解：ping 网关 检查计算机是否连通代理服务器或者internet 主要有ping ip(自己的) 检查网卡 和ping ip (别人的) 检查是否连通内网或者外网 Ping网关IP 若ping通则表明局域网中的网关路由器正在正常运行。反之，则说明网关设置有问题，请检查IP，网关等信息是否设置正确。 ping命令获取计算机的IP地址 利用ping这个工具我们可以获取对方计算机的IP地址，特别是在局域网中，DHCP动态IP地址服务自动为各工作站分配动态IP地址，这时当然我们要知道所要测试的计算机的NETBIOS名。如果网络连接正常，则会显示所ping的这台机的动态IP地址。 ipconfig 当你的电脑插上网线或者连接到Wi-Fi之后，电脑做的第一件事情就是向网关申请一个IP，如果你的电脑连不上网了，首先就看下，自己是否拿到了一个有效IP。如果你没有看到IP地址，或者是看到了一个169.开头的IP地址，那么就得看下网关或者路由器是否出问题了。 ipconfig -all 物理地址代表的就是你的这台电脑。你电脑的物理地址和别人的物理地址是不一样的。某网管登录路由器之后，发现好多人连上了这个Wi-Fi，我擦，难怪网速这么慢呢，于是一气之下决定，只有在路由器上绑定过mac地址的设备才能上网。这就为什么有些Wi-Fi只有指定设备才能连上网的原理。 nslookup 如果你能用QQ聊天，但是打不开网页，此时很有可能是DNS服务器出问题了，使用nslookup命令，可以检查是否是这个原因。 nslookup可以对一个域名进行DNS查询，找出它对应的IP地址。如果验证出nslookup不能返回查询结果，那么换一个DNS服务器地址可以解决问题，DNS服务器有哪些？可以网上找一找 输入“nslookup”之后，效果如下： 另外，再举个例子，如果你想查询电子科技大学网站的域名和ip，可以这样： tracert windows上叫tracert，OS X上叫traceroute，这个命令的作用是跟踪路由节点，也就是说你发送的网络数据，经历了哪些网络设备，最终到达目标地址，它都可以给你列举出来。 http://ip.cn网址：查ip地址 上面这个网址可以查到一个IP地址的归属地，然后查询最后一跳的IP地址，你就知道你的请求数据被谁给吃了]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[电脑内存条]]></title>
    <url>%2F2019%2F06%2F16%2F%E7%94%B5%E8%84%91%E5%86%85%E5%AD%98%E6%9D%A1%2F</url>
    <content type="text"><![CDATA[可以下载CPU-Z来查看相关信息 使用命令提示符了解内存的详细情况。如果你想要知道更多关于内存的信息，如运行速度或每个组件的容量等，你可以使用命令提示符来获取更多细节信息。 从开始菜单中打开命令提示符。你也可以按下Win+R打开运行框，然后输入cmd来启动它。 输入wmic MEMORYCHIP get BankLabel,DeviceLocator,Capacity,Speed命令，按下回车键。接着会显示出几栏信息。 BankLabel一栏会告诉你内存条安装在哪个插槽内。 Capacity（容量）一栏会显示每个内存条的容量大小，以字节数来计量。 DeviceLocator（设备定位器）一栏是另一种内存安装位置的显示方式。 Speed（速度）一栏会告知你每个内存条的运行速度。 正确的内存类型 内存分为DDR2和DDR3、DDR4三种不同代内存，由于三种类型的DDR内存之间，从内存控制器到内存插槽都互不兼容。而且即使是一些在同时支持两种类型内存的主板上，两种规格的内存也不能同时工作，只能使用其中一种内存，所以大家在购买内存之前，一定仔细确定好自己的主板支持的内存类型。 然后就是内存频率，同样是DDR4内存，有几种频率的，常见的是2133MHZ和2400MHZ，工作频率越高性能越好。虽然有些主板只能工作在2133频率，但价格差不多的话还是频率高的性价比高，而且以后可以利用到更高的主板上。]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>computer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-10]]></title>
    <url>%2F2019%2F06%2F15%2FShare-10%2F</url>
    <content type="text"><![CDATA[Fun 蘑菇尸衣去世以后，主要有两种处理人体的方式：土葬和火葬。前者不环保，后者消耗能源。一家创业公司提出了一个更绿色的处理方式。他们发明了一种里面种植了蘑菇孢子的衣服，死者穿上以后，蘑菇孢子会不断分解人体的组织，转换成肥料。 Oddly Satisfying 一个视频项目，收集各种无限循环的短视频。 ABZ理论A计划，是一个当下你觉得值得你去持续投入，并获得部分产出和安全感的计划，好比一份你现在正在投入和从事的工作。B计划是那些当下看起来还不足以成为你职业，但你对其存有兴趣或长远看好，值得去长期投入和关注的事情。Z计划的意义就是用来应对你的职业生涯中的各种不确定性和风险。好比对我而言，假如我当前的A计划和B计划都失效，我也失业了，那么靠着银行账户上之前储备过的少量积蓄在家先捱上个半年就是我的Z计划。 摩尔斯电码 记住26个字母后，就可以进行简单的书面翻译练习。可以找泰戈尔的《飞鸟集》，随便找一条英文译成摩尔斯码，再对着摩尔斯码译成英文。这样英译码，码译英，译个十来条，26个字母基本上就不会忘了。 SAFE 这个项目在印度尼西亚婆罗州的热带雨林里面，放置了十几个录音设备，然后将每个小时录到的声音放到网上，让访问者听到每天不同时辰的大自然的声音。 路灯植物 麻省理工学院的科学家创造出一种发光植物，希望以后用植物替代路灯。科学家将一种含有荧光素的酶，包装成纳米粒子，然后将这种纳米粒子注入植物的叶子，一旦荧光素氧化，就有一部分能量以光的形式释放出来，从而达到发光的效果。 这种粒子的照明效果，可以用来阅读书籍，大约持续4个小时。下一步，研究人员会设法提高光亮，不仅让它可以用作街道照明，还可以用作室内照明，甚至是台灯。 Tool Darwin Mail 一个第三方的 GMail 的 Web 客户端。 Screen Record 一个浏览器里面的录屏工具，非常简单好用。 龙猫学术导航 一个外文期刊检索与下载的网站，里面有很多资源链接。类似网站还有”大木虫学术导航“。 Resource openbiox.org一个开源的生物信息学的中文社区，源码托管在 GitHub。 MOOC 课程搜索引擎该引擎可以搜索全世界的开放课程，目前包含1.2万门课程，里面也有中文课程。 量子算法课程微软与 Google 共同开设了一门量子算法课程，可以通过浏览器模拟的量子计算环境，学习量子算法 Essay 什么是暗网 针对新人的暗网基本知识，不涉及技术细节。 5G网速那么快，基站辐射会很大吗？ 5G 通信使用比 4G 更高的频率，需要的能量更大，这对基站和手机的辐射有何影响。这篇文章给出了很好的分析。 Picture 笔迹 技术有边界，魔鬼在细节。 友谊是一个静态累积的过程，但是我们的生活正变得越来越动态。 信和照片是最能留下时光痕迹的物品，电脑里虚拟的图像和文字最终会变成消失在宇宙洪荒的数据碎片]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-11]]></title>
    <url>%2F2019%2F06%2F15%2Fshare-11%2F</url>
    <content type="text"><![CDATA[Fun 华氏度的合理性 温度有两种表示方法：摄氏度和华氏度。 只要学过化学，就会知道摄氏度更好。因为它的定义很简单明确：0℃是水的冰点，100℃是沸点。华氏度的定义就显得复杂：特定的冷冻盐水溶液的温度为0℉，水的冰点为32℉，体温为96℉（未校正前）。显然，这个温度体系不那么直观。 但是，摄氏度是针对水的状态，对于表示日常天气，效果很不理想。我发现，使用负数表示不那么冷的温度，令人很烦，然后只要35℃，就是一个高温天了，这也不那么直觉。事实上，在化学实验室之外，我并不关心水的冰点和沸点，我更关心本周会有多热或多冷。摄氏度不是为了这个目的设计的，而华氏度恰恰是针对人的感觉设计的。 下面是华氏度的一些优点。 直观：0度就是极冷的天气，100度就是极热的天，这对人们来说很自然。 避免小数：预报气温的时候，摄氏度需要带上小数，华氏度都是整数。 避免负数：华氏度的0度足够冷，温度很少低于0度。 避免3位数字：华氏度很少出现高于100度的高温天气。 下面是波士顿和加利福尼亚州红木城一年的天气变化，可以看到，就在0度～100度之间变动。 熊猫血 人的血型分类，比较常见的包括ABO血型分类和Rh血型分类。Rh血型分为Rh阳性和Rh阴性。在我国，只有约1％的人为Rh阴性血，又被称为“熊猫血”。 速率换算 1Kb = 1024bit 1KB = 1024Byte 1Mb = 1024Kb 1MB = 1024KB 1Byte = 8 bit 1MB = 8 Mb 1Mb = 0.125MB 【本质：都是1Byte = 8 bit的换算】 所以换算的时候只需要知道： 1MB/s = 8Mb/s = 8Mbps = 1024KB/s 《4分33秒》 作曲家约翰·凯奇请钢琴家上台在钢琴前坐下。观众们坐在灯光下安静地等着。1分钟，没有动静，2分钟没有动静，3分钟，人们开始骚动，左顾右盼，想知道到底怎么了，到了4分33秒，钢琴家站起来谢幕：“谢谢各位，刚才我已成功演奏了《4分33秒》。” 最大的质数 17世纪时，法国修道士梅森（Marin Mersenne）提出了一个质数计算公式：2^n - 1，称为梅森公式。符合该公式的质数，就称为梅森质数。比如，2的3次方等于8，8减1等于7，7就是梅森质数。 1996年，有人发起了 GIMPS 项目，世界各地的人们下载软件，在自己的计算机上通过梅森公式，寻找新的质数。2018年12月7日，佛罗里达州的一台计算机，发现了世界最大的质数。这个质数有24,862,048位，对应的梅森公式里面的 n 是 82,589,933。之前的世界记录是一年前该项目在田纳西州发现的，比现在的世界记录小了150多亿。你可以在官网下载这个质数，它太长了必须打包成 zip 文件下载。 、jabcode JAB 码是彩色二维码方案，可以比黑白二维码写入多得多的信息。 Tool 、koken 一个搭建个人图片库网站的软件。 PaperGod = 免费论文查重 + 在线修改 + 实时查重 Resource VS Code 能做到 该网站收集 VS Code 能够实现的各种高级功能教程，目前已经有36个。 良许Linux资源网站 大数据导航网站 在 SegmentFault，学习技能、解决问题 Essay 进制转换 2009年初中国的互联网世界里发生了一段费尽周折的爱情猜谜传奇。 Cicada 3301:一只潜伏于互联网深处的“蝉” 什么是哈希洪水攻击（Hash-Flooding Attack）？ Picture 笔迹 我思故我在 －法国哲学家笛卡尔 我所考虑的应该不是成为什么样的人，而是应该考虑我要过什么样的生活 - 苏牧云 算术和几何，辩证这几门学科才是最重要的，最接近永恒的真理 -理想国]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-9]]></title>
    <url>%2F2019%2F05%2F18%2FShare-9%2F</url>
    <content type="text"><![CDATA[Fun 停车场办公 创业者往往想要使用共享的办公空间，但是大城市的办公空间很贵。旧金山的一个创业者灵机一动，注册了 WePark 公司。他在旧金山的热门区域，选择若干个停车位，付出一整天的停车费，然后摆上桌椅，按小时卖给创业者。创业者就在停车位办公。 WePark 的优势在于价格，每小时收费 2.25美元。相比之下，WeWork 的办公空间，每天收费50美元加上每月会员费。 电路图符号解释 本文介绍基本的电路图符号的含义。 MuseNet 人工智能公司 OpenAI 开发的自动作曲系统，可以指定你想听的音乐家（比如肖邦、莫扎特），然后该系统就会使用10种乐器生成一段4分钟的音乐。现在，OpenAI 每天在网上直播音乐会，旋律都是人工智能生成的。 WebGL Fluid Simulation在浏览器中，实现流体流动效果。（有点像是抽烟时，吐烟的效果） Tool I love IMG 该网站提供各种在线的图像编辑工具，比如图像缩放、压缩、裁剪、水印等。 Motrix 一款桌面端下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。 RemixIcon 一套免费高质量的开源图标库，目前有1500多枚图标，提供矢量图和字体图标文件，可用于商业用途。 Resource 开源世界旅行手册 命令行的艺术 计算机科学速成课 Microsoft MakeCode 可以给儿童使用的拖拽式编程体验 Essay 全程快捷键！硬核小哥超快配图1700页数学笔记，教你上手LaTeX+Inkscape 在浏览器地址栏输入一个URL后回车，背后会进行哪些技术步骤？ OAuth 2.0 的一个简单解释 Picture 笔迹 谎言分两种。关于过去的事实上的谎言以及关于未来的权利上的谎言。 然而，人们泛称为命运的事情却通常都是自己做出来的蠢事。 谁都无法制裁一件没有发生过的事。]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-8]]></title>
    <url>%2F2019%2F05%2F17%2FShare-8%2F</url>
    <content type="text"><![CDATA[Fun 辨色能力测试建议电脑打开，目的是将所有颜色排列成一个由红到紫的过渡，0分为满分。 切尔诺贝利实境游戏 两个乌克兰青年按照实景，建造了切尔诺贝利核电站废墟模型，包括住宅楼，酒店，音乐厅，游乐园和体育场等场景，然后开发了一个游戏《Isotopium：Chernobyl》。玩家可以通过互联网，控制一辆遥控小车，上面带有摄像头，在这个模型城市里面漫游，感觉跟在真实场景完全一样。 游戏的费用是每小时9美元，同时最多只能20人在线，玩家寻找隐藏在各个地点的能量球，来淘汰其他对手，获取游戏胜利。全球目前有62,615人注册参与游戏。 世界最大灵骨塔 台湾新北市，一座白色巨塔矗立在三芝区，外形呈六角形，顶层为宫殿式的望楼塔造型。楼高达二十层的巨塔在翠绿的山峦中尤其突出！这座建筑其实是一个多层式的骨灰盒大楼──龙岩真龙殿生命纪念馆。 发条短信就能拦截骚扰电话，这些实用的运营商指令值得收藏 本文将为你介绍一些实用的短信指令，希望可以帮助你在日常生活中少一点麻烦，多一点便利。 windows系统休眠 介绍windows系统中休眠HIBERNATE和睡眠SLEEP的区别我们常用的是睡眠SLEEP功能，就是电脑经过一定时间后，进入低功耗状态，工作态度保存在内存里，恢复时1-2秒就可以恢复原状态。休眠是把工作状态即所有内存信息写入硬盘，如有2-4G内存，即要写入2-4G的文件到硬盘，然后才能关机，开机恢复要读取2-4G的文件到内存，才能恢复原界面。从这里可以看出睡眠功能比休眠好很多，同样保存电脑当前状态，而且开机启动速度很快，所以在一般情况下完全可以删除休眠文件。 删除休眠文件: 以管理员运行CMD, POWERCFG -H OFF 恢复休眠功能: 以管理员运行CMD, POWERCFG -H on 傅立叶变换 Tool MikuTools - 工具集合 北京市公安局推出的姓名查重网站，可以查询某个姓名在北京市有没有重名 kindle电子书分享网 Resource 猴子都能懂的git入门 物联网开发工程师视频教程 Medium 一个海外的写作阅读平台 47 个无版权素材网站收好，以后不怕视觉中国的律师函 Essay 控制梦境，做梦机原理和电路图解 我常用的4个备份工具 手把手教你安装Linux虚拟机 游戏开发的专业术语整理 Picture 笔迹 大都好物不坚牢，彩云易散琉璃脆。 知识点，时间线，逻辑面，维度体。 STEM:”Science, Technology, Engineering and Mathematics”]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-7]]></title>
    <url>%2F2019%2F05%2F11%2FShare-7%2F</url>
    <content type="text"><![CDATA[Fun 今日掘金 色域 购买显示设备或拍摄视频的时候，经常会遇到分辨率的术语，它们是什么意思呢？ 720p: 1280 x 720, 称为 HD（中文译为”高清”） 1080p: 1920 x 1080, 称为 FULL HD（中文称为全高清） 1440p: 2560 x 1440, 称为 QHD 或 Quad HD，即4倍的HD 2160p: 3840 x 2160, 称为 4K 4320p: 7680 x 4320, 称为 8K 算法 忘记行李箱密码的时候，只记得前两位是33，后两位忘记，于是3300,3301, 3302一直试：穷举 大姨妈有时候迟到或早来一两天：容错 分不清方向不知道路，先朝一个方向走，边走边看，后来发现这个方向是错的，返回原来的地方，朝另外一个方向走：回溯 我先把我今天的工作做好，别人的我先不管：贪心算法 给小朋友排队的时候：冒泡排序（许多人也会选择用快速排序，插入排序，再次申明：这个不适合人数多的情况，不然会乱掉） 各种心里推断题，1.你最近开心吗？A.开心，去第2题。2.不开心，去第三题，以此类推。这种类型的题目：有向图 看知乎评论的时候不是从上到下，而是从下到上，先看最新评论的：逆向排序 从A地到B地有N多条路可以走，查地图看那条路的距离最近：最短路径法 钥匙在书包的某个口袋里，首先和妈妈在不同的地方A和B找书包，找到书包了再和妈妈在书包里不同的口袋C和D找钥匙：并行（经指正，这条不属于二分法） 图像噪点噪点（noise）主要是指CCD（CMOS）将光线作为接收信号并输出的过程中所产生的图像中的粗糙部分，也指图像中不该出现的外来像素，通常由电子干扰产生。看起来就像图像被弄脏了，布满一些细小的糙点。平时拍摄的数码照片如果用个人电脑将拍摄到的高画质图像缩小以后再看的话，也许就注意不到。不过，如果将原图像放大，那么就会出现本来没有的颜色（假色），这种假色就是图像噪音。如图： VARVAR的全称为Video Assistant Referee，即视频助理裁判。其实，VAR包含了鹰眼（门线技术），所以VAR应该是视频助理裁判和VAR技术的总称。它的核心在于两个字：回放。只不过这种回放技术更专业，拥有更多角度和数据分析，捕捉到更精确的画面。 “鹰眼”系统最早出现在网球场，通过8-10个高速摄像机从不同角度同时捕捉网球飞行轨迹，得到基本数据。再通过电脑计算，将这些数据生成三维图像。最后利用即时成像技术，由大屏幕清晰地呈现出网球的运动路线及落点，从而判断球是否出界。 前几年，足球比赛也逐渐开始将鹰眼技术应用在门线上：利用14台高速摄像机向架设在球场顶部的数据间传送数码照片，经过对数据的分析再把结果传送到裁判所戴的特殊手表上，如果确定球过了门线，手表上就会显示“goal(进球)”。整个过程用时不足一秒。 Tool Markdown to PDF 学术搜索 北京地铁 Resource Programming Notes for Professionals books Git教程 一个简单的Windows下的socket程序 Essay 马同学高等数学 Windows内核主要是C写的, 有500多G 从阅读到复习，MarginNote 3 想要重塑你的学习方式 Picture 笔迹 时间可以伸缩和折叠，唯独不能倒退。你的鹤发或许是我的童颜，而我一次呼吸能抵过你此生的岁月 生命既哀亦美，知此足矣。 给时光以生命，而不是给生命以时光。]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[computer-basic]]></title>
    <url>%2F2019%2F04%2F30%2Fcomputer-basic%2F</url>
    <content type="text"><![CDATA[电脑硬件 电脑硬件主要包含：机箱，主板，总线，电源，硬盘，存储控制器，界面卡，可携储存装置，内置存储器，输入设备，输出设备, CPU风扇，蜂鸣器等 选购电脑最重要的参数包括：CPU、内存、硬盘、显卡配置。 CPU: 这个主要取决于频率和二级缓存，频率越高、二级缓存越大，速度越快，现在的CPU有三级缓存、四级缓存等，都影响相应速度。目前主流的CPU是Intel和AMD,买电脑时大多数人更倾向选择Intel Core系列的i3，i5，i7，可以根据自身电脑的使用场景选择。 内存: 内存的存取速度取决于接口、颗粒数量多少与储存大小（包括内存的接口，如：SDRAM133，DDR333，DDR2-533，DDR2-800,DDR3-1333），一般来说，内存越大，处理数据能力越强，速度就越快。 主板: 主要还是处理芯片，如：笔记本i965比i945芯片处理能力更强，i945比i910芯片在处理数据的能力又更强些，依此类推。 硬盘: 硬盘的转速（分：高速硬盘和低速硬盘，高速硬盘一般用在大型服务器中，如：10000转，15000转；低速硬盘用在一般电脑中，包括笔记本电脑），台式机电脑一般用7200转，笔记本电脑一般用5400转，这主要是考虑功耗和散热原因。 硬盘速度又因接口不同，速率不同，一般而言，分IDE和SATA（也就是常说的串口）接口，早前的硬盘多是IDE接口，相比之下，存取速度比SATA接口的要慢些。另一方面，目前趋势更倾向于读写很快的SSD固态硬盘，价格和容量将来也会分别降低和提高。 显卡：这项与运行超大程序软件的响应速度有着直接联系，如运行CAD2007，3DStudio、3DMAX等图形软件，一般来说显存越大越好。显卡除了硬件级别上的区分外，也有共享显存技术的存在，和一般自带显存芯片的不同，就是该“共享显存”技术，需要从内存读取显存，以处理相应程序的需要。或有人称之为：动态显存。这种技术更多用在笔记本电脑中。 电源 : 这个只要功率足够和稳定性好，稳定的电源是很重要的。 电脑快捷键技巧 win/Ctrl+Esc 打开开始菜单 win + M 最小化所有被打开的窗口 win + d 桌面 win + r 打开运行 win + e “我的电脑” win + u 工具管理 win + 左右 分屏 win + L 把电脑锁屏 win + i 打开设置 win + k 打开连接 win + 1和 Win + 2 按顺序打开相应程序 win + P 在显示器与投影间相互切换 win + shift + 左 移动当前窗口到左边的显示器上 win + shift + 右 移动当前窗口到右边的显示器上 win + shift + s 截屏 F1 请求帮助 F5 刷新 F2 重新命名所选项目 F10 激活当前程序菜单条 ctrl + o 打开 ctrl + w 关闭程序 ctrl + b 粗体 ctrl + u 下划线 ctrl + i 斜体 ctrl + y 恢复键 ctrl + ] 放大字体 ctrl + [ 缩小字体 ctrl + tab 在页面上的各框架中切换(加shift反向) ctrl + shift + Esc 打开任务管理器 ctrl + shift + N 新建文件夹 alt + F4 关闭项目退出程序 alt + 空格 打开快捷菜单 alt + enter 所选项目属性 alt + Esc 按照顺序切换 cmd calc 打开计算器 cmd systeminfo 用于显示关于计算机及其操作系统的详细配置信息 Win + Ctrl + D 创建虚拟桌面 Win + Ctrl + F4 关闭当前虚拟桌面 Win + Ctrl + ← 向左切换虚拟桌面 Win + Ctrl + → 向右切换虚拟桌面 计算机正常的工作湿度是40％与60％之间 机房温度控制在18到25度]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>computer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-6]]></title>
    <url>%2F2019%2F04%2F27%2FShare-6%2F</url>
    <content type="text"><![CDATA[Fun 这张人像照片是伪造的吗？ 现在的人像照片，已经无法确定真人还是假人。有人就收集了几十万张假人的照片，都是算法生成的，然后提供服务。你上传照片，系统返回长相相似的假人照片。 世界上最厚的流体和最久的实验 加拿大昆士兰大学的 Pitch Drop实验，是世界历时最久的实验，从1927年开始，到现在还没有结束。该实验由包含在玻璃漏斗中的黑色沥青组成，用来表明沥青实际上不是固体，而是一种非常粘稠的液体，是世界上最厚的流体，粘度约为水的1000亿倍。 沥青从玻璃漏斗里面，慢慢往下滴落。从1930年至今，一共滴下了9滴。最新的一滴是在2014年4月，预计第10滴将在2020年代的某个时候发生。 接听推销电话也能赚钱 英国一男子对于推销电话忍无可忍，注册了一个服务收费号码。这种号码要向拨入者收取服务费，常用于心理咨询之类的热线。该男子将这个号码，当作自己的联系电话，留作各种外部服务的联系电话。这个号码的成本是10英镑，如果有人拨打这个号码，会被收取每分钟10便士。据该男子说，两年里面获利了300英镑。 树莓派搭建空气质量监视器本文是树莓派教程，附有示例代码，演示如何搭建一个空气质量监视器（需要自购传感器）。 从海平面开始计算，地球最高点是珠穆朗玛峰。但是，地球是一个椭圆，赤道比南北极多出了几十公里。这导致从地心开始计算，最高点是厄瓜多尔的钦博拉索山（ Chimborazo，海拔6268米），这座山在赤道附近，比珠穆朗玛峰高出了2公里。钦博拉索山顶是地球上距离地心最远的地方。 Lambda School是美国的一家创业公司，主要业务是编程培训。它的收费模式很独特，学生可以缴纳2万美元学费，也可以不缴纳，直到培训后找到年薪5万美元以上的工作，用工资的17%抵扣学费，抵抗满3万美元为止。如果培训后5年内，都没有找到年薪5万美元以上的工作，可以不缴纳学费。 Tool 当鼠标移动到 VSCode 某一行中，就可以看到当前行的执行结果，类似于 debugger 当前行执行结果页。可以避免重复的敲 console.log 调试：https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode 基于浏览器的在线代理软件，可以直接访问 Google、YouTube 等网站，在线测试 ：https://github.com/EtherDream/jsproxy I love PDF 该网站提供各种免费的 PDF 在线工具，比如合并、拆分、压缩、Office 文件转 PDF、PDF 转图片等。 Resource 制作一个8位的电脑 FPS Sample This is a fully functional, first person multiplayer shooter game made inUnity and with full source and assets. Essay 加强 Linux 服务器安全的七个步骤自己架设 Linux 服务器的时候，按照本文的步骤，可以防止90%以上的攻击。 OpenCV-Python，计算机视觉开发利器 VR中如何设计虚拟商品和购物车的大小？ 笔迹 月色与雪色之间，你是第三种绝色。 – 余光中 选择平庸虽然稳妥，但绝无色彩。 – 余光中 下次你路过，人间已无我。 – 余光中 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-5]]></title>
    <url>%2F2019%2F04%2F21%2FShare-5%2F</url>
    <content type="text"><![CDATA[Fun 地球的年龄是45亿年 996.icu 事件的可视化（视频） 这段90秒的视频，帮你回顾 996.icu 事件的全过程。 什么是 Wayback Machine？ Wayback Machine 是一个庞大的网页数字档案库，为全世界的网页存档。该项目于1996年启动，目前保存了100亿个快照，数据量达到 30PB，另外还有 30PB 备份。 AutoPiano 自由钢琴，HTML5 技术开发的网页钢琴应用。可以自动演奏曲谱，同步显示琴键的位置。 BMI 指数 BMI 指数是体重除以身高，用来衡量一个人的肥胖程度。过高的 BMI，几乎必然导致心血管疾病，以及糖尿病等。下图纵轴是身高，横轴是体重，可以用来速查你的 BMI，以及肥胖程度。 为什么隔着玻璃晒太阳没有用？ 人体需要晒太阳，一个主要原因是，阳光里面的紫外线，可以让我们的身体产生维生素 D。这种维生素很难从食物中摄取，必须依靠阳光来合成。维生素 D 可以促进钙元素的吸收，保证骨骼健康。 所以，长期不见阳光会导致缺乏维生素 D，就会产生骨质疏松，以及其他一些问题。 虽然晒太阳是必要的，但是多晒却不行，多晒太阳会导致皮肤损伤。因为紫外线包含两种，一种是紫外线 A（又称UVA），它们渗透到皮肤深层，可能导致过早老化；另一种是紫外线 B（又称 UVB），导致晒伤发红。研究表明，主要是紫外线里面的 UVB，触发了维生素 D 的合成，而 UVA 并不会产生维生素 D。 一般来说，每天晒十分钟太阳，就能产生足够的维生素 D。但是，在室内或车内晒太阳是没用的，因为玻璃会阻挡 UVB 射线。你无法通过坐在阳光明媚的窗前增加维生素 D 水平，而且玻璃会让大部分 UVA 辐射通过，可能会对你的皮肤造成有害影响。 工具 VSCode 注释翻译插件, 在不干扰正常代码的情况下，方便快速阅读英文源码，安装地址： https://github.com/intellism/vscode-comment-translate The Fucking Github 是一个 Chrome 浏览器的扩展插件，可以用来很方便地查看、整理、搜索你已经 Star 过的项目和搜索 Github 上的项目：https://github.com/lvxianchao/the-fucking-github 油猴脚本 -直接下载百度网盘和“百度网盘分享”的文件，直链下载，超级加速；最后更新日期是 3 月 15 号：https://github.com/syhyz1990/baiduyun Linux 命令大全搜索工具，内容包含 Linux 命令手册、详解、学习、搜集，在线地址： https://github.com/jaywcjlove/linux-command Mathpix Snip 这是一个帮你快速把数学公式图片转成LaTeX代码的工具，你也可以直接在任务栏中修改代码，然后复制、粘贴，写出自己的公式，而且word是可以插入latex的。 资源 以下是我的应用场景，我不是专业的 UI 设计师，但避免不了经常要做公开性的演讲，在准备演讲材料时一般都会有几个基本的素材；我们需要根据素材的颜色来搭配整体的风格。https://colorhunt.co/ 深度学习 500 问，以“问答”的形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述：https://github.com/scutan90/DeepLearning-500-questions 文章 程序员绘画指北 军用版 HoloLens 曝光，戴上它有种打《使命召唤》的感觉 墨片 暗时间 新设备能够监测植物电信号：让你听到植物的“声音” 笔迹 不要想着学完某种熟练了以后再去做项目，也不要把一本书从头看到尾，这样过于浪费时间。 不要总是想着因人成事，也不要过于特立独行，该磨炼的时候不要躲避。 天道酬勤，不要总是为自己的懒惰而找借口。 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[OptiTrack与VR]]></title>
    <url>%2F2019%2F04%2F13%2FOptiTrack%E4%B8%8EVR%2F</url>
    <content type="text"><![CDATA[OptiTrack: 全身动作捕捉系统轻松创建台式应用动作捕捉工作室。 动捕在虚拟现实的应用 为实现人与虚拟环境及系统的交互，必须确定参与者的头部、手、身体等的位置与方向，准确地跟踪测量参与者的动作，将这些动作实时检测出来，以便将这些数据反馈给显示和控制系统。这些工作对虚拟现实系统是必不可少的，这也正是运动捕捉技术的研究内容。 VR动作捕捉的两种主流技术路径：光学方案与惯性方案动作捕捉技术的本质其就是把现实中人物的动作复制到虚拟人物身上。目前，存在着两种主流动作捕捉方案： 通过摄像机进行的动作捕捉技术，因为摄像机运用的是光学技术，所以摄像机动作捕捉方案也被称为光学动捕方案。 IMU（Inertial measurement unit）惯性传感器单元进行的动作捕捉，通常被称为惯性动捕方案。 HTCVive对OptiTrack，哪个方向是VR大空间多人定位技术的未来？目前在空间定位方向做的比较好的产品有哪些？其中之一便是所谓「VR三大头显」之一的HTC Vive，采用Lighthouse激光定位系统；另一家是以国内利亚德旗下子公司OptiTrack为代表的红外光学定位系统。 OptiTrack-虚拟现实空间定位解决方案 虚拟现实解决方案是利用高精度的OptiTrack三维运动捕捉系统，以每秒数百帧的拍摄速率捕捉人体、头盔显示器、交互设备上固定的特制的标记点，能够实时精确地构建出人体的骨骼信息或标记点三维位置信息，为虚拟现实应用领域的用户提供一套实时精确地获取人体动作数据和道具位置数据的先进工具。 为什么选择OptiTrack系统？ 清晰识别远在30米开外的标记点，最大捕捉空间可达900㎡ 850nm红外照明，即使在杂质光源干扰下，数据依然稳定精确 开源的实时数据流SDK，支持MotionBuilder\Unity\Unreal等 领先的三维重建和刚体解算精度，定位精度高达0.1mm 作为VR定位的主要解决方案，OptiTrack在应用中还存在哪些问题？]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>vr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-4]]></title>
    <url>%2F2019%2F04%2F13%2FShare-4%2F</url>
    <content type="text"><![CDATA[Fun whoiswhois 是用来查询域名的IP以及所有者等信息的传输协议。简单说，whois就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商）。通过whois来实现对域名信息的查询。 10241024是程序员自发认定的节日，表明10月24日，是程序员节，这是由于信息量的单位1GB=1024MB，1MB=1024KB，1kb=1024Byte，程序员们就把1024作为了一种表示自己身份的符号1024。另外，1024在计算机数学中，1024M=1GB，谐音可以理解为“一级棒” 除颤器 除颤器不是让心脏恢复跳动用的，如同字面之意，他只是让处于颤抖或是不正常跳动的心脏经由电流刺激而归零停止，再透过CPR（心脏复苏）使不正常心跳的情况恢复正常。 皮质醇贴片 斯坦福大学的科学家发明了一种皮肤贴片，可以实时测量汗液里面的皮质醇含量。一般来说，我们觉得压力很大的时候，皮质醇分泌就会增加。以前的测量方法都无法实时得到结果。现在我们可以实时知道人体的感受了，甚至可以找出人群里面最紧张的人，这种传感器为以后更有趣的发明奠定了基础。 长笛 众所周知，声波是靠空气振动产生也是靠空气来传播的，长笛发声所产生的音频是一种正弦波。声波振动越强传播得越远，听起来音量也越大。声波效应就好比将一个石块扔进平静的河中，人们能看见扩散荡漾的水波一样。这个原理可以与无线电波的传播途径非常类似（无线电波实际是一种频率高得我们听不见的高频振荡波），发报机上的天线要足够长电波才能远距离发射。而且：我们都能注意到，天线必须是导体，导电性能越好的金属发射效果越好。 手机号码的乾坤 移动：134、135、136、137、138、139、150、151、157(TD)、158、159、187、188 联通：130、131、132、152、155、156、185、186 电信：133、153、180、189、（1349卫通） Luca Lampariello他对语言的理解真的很棒，可以用另一种思维来看语言，有兴趣可以看看。 工具 Google搜索技巧 xx site:jianshu.com 含义：在指定网址中搜索内容xx。 xx filetype:pdf 含义：搜索与xx相关的pdf文件。 yy inurl:xx 含义：在包含xx的url中搜索内容yy。其中，xx可以是中文。 yy intitle:xx 含义：在包含xx的标题中搜索内容yy。 ColouriseSGColourise your black and white photos 一个为黑白照片着色的在线服务 dust3d开源的3D建模软件，适用于游戏开发，3D打印等。 资料 计算机科学自学指南 Visu Algo 各种算法的动态演示网站。 Introduction to Unity Scripting学习Unity中脚本编写的基础知识。 文章 写技术博客那点事 Linux Desktop Setup一个高级程序员介绍他的Linux桌面开发环境，以及他的各种软件选择。 什么是业余无线电如何在国内拥有一个个人的无线电台 SQL: One of the Most Valuable Skills 笔迹 我的方法是烂熟于心之后才写代码，完整，正确地编写一次 良心是我心里一个三角形的东西，我没有做坏事，它便静静不动，如果我干了坏事，它便转动起来，每个角都把我刺痛，如果我一直干坏事，每一个角都磨平了，也就不觉得痛了。 这个世界上除了我，其它人和事物都是来锻炼我的。这是现实的bug吗？ 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[HTC VIVE - 3]]></title>
    <url>%2F2019%2F04%2F01%2Fvive3%2F</url>
    <content type="text"><![CDATA[预制体 [status] _Stats：这个是显示统计信息的一个组件（目前仅显示帧率和丢帧数）。它上面还有一个Camera，通过它将GUIText渲染到overlay的纹理上，通过overlay将文字信息显示出来。它的显示效果如下图 Overlay：这个控件的作用是是一个2D的UI界面叠加到场景上面显示出来 VIVE的交互实现方式Extras文件夹里面的SteamVR_GazeTracker是凝视的工具类，SteamVR_LaserPointer是射线的工具类 SteamVR_GazeTracker（凝视）凝视是一种在没有手柄等输入设备的情况下，可以通过眼睛盯着某个物体看来与物体进行交互的体验。我们只需要将个辅组类添加到我们想要凝视的物体上，比如菜单等，就可以实现凝视的功能。 凝视的原理实际上是从头盔的位置发出一条射线判断是否与物体相交来做选中或者交互的。而且因为凝视的精确度不高，所以没有做直接与物体相交，而是在物体的位置创建了一个平面，通过射线与平面相交的交点的位置与物体的距离来大概判断的。这个距离值是可以调的，缺省是0.15到0.4米之间就算选中了。 SteamVR_LaserPointer（激光束）SteamVR_LaserPointer的作用是从指定位置（通常是手柄）发出一条射线，它会将这条射线显示出来，然后也是判断这条视线与场景中的物体是否相交。与凝视不一样的是，它可以精确操作，所以不需要一个辅助平面。用法和凝视也不太一样，需要将这个组件添加发出射线的物体上，比如手柄。]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>vr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux日志系统]]></title>
    <url>%2F2019%2F03%2F29%2Flinux%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[常见的日志常见的日志一般存放在 /var/log 中，我们可以根据服务对象粗略的将日志分为两类 系统日志 应用日志 日志名称 记录信息 alternatives.log 系统的一些更新替代信息记录 apport.log 应用程序崩溃信息记录 apt/history.log 使用 apt-get 安装卸载软件的信息记录 apt/term.log 使用 apt-get 时的具体操作，如 package 的下载、打开等 auth.log 登录认证的信息记录 boot.log 系统启动时的程序服务的日志信息 btmp 错误的信息记录 Consolekit/history 控制台的信息记录 dist-upgrade dist-upgrade 这种更新方式的信息记录 dmesg 启动时，显示屏幕上内核缓冲信息,与硬件有关的信息 dpkg.log dpkg 命令管理包的日志。 faillog 用户登录失败详细信息记录 fontconfig.log 与字体配置有关的信息记录 kern.log 内核产生的信息记录，在自己修改内核时有很大帮助 lastlog 用户的最近信息记录 wtmp 登录信息的记录。wtmp可以找出谁正在进入系统，谁使用命令显示这个文件或信息等 syslog 系统信息记录 因为这两个日志并不是 ASCII 文件而是被编码成了二进制文件，所以我们并不能直接使用 less、cat、more 这样的工具来查看，这两个日志文件是 wtmp，lastlog，我们查看的方法是使用 last 与 lastlog 工具来提取其中的信息。 配置的日志syslog 是一个系统日志记录程序，在早期的大部分 Linux 发行版都是内置 syslog，让其作为系统的默认日志收集工具，虽然随着时代的进步与发展，syslog 已经年老体衰跟不上时代的需求，所以他被 rsyslog 所代替了，较新的 Ubuntu、Fedora 等等都是默认使用 rsyslog 作为系统的日志收集工具 rsyslog的全称是 rocket-fast system for log，它提供了高性能，高安全功能和模块化设计。rsyslog 能够接受各种各样的来源，将其输入，输出的结果到不同的目的地。rsyslog 可以提供超过每秒一百万条消息给目标文件。 这样能实时收集日志信息的程序是有其守护进程的，如 rsyslog 的守护进程便是 rsyslogd 首先我们来看 rsyslog 的配置文件是什么样子的，而 rsyslog 的配置文件有两个， 一个是 /etc/rsyslog.conf 一个是 /etc/rsyslog.d/50-default.conf。 第一个主要是配置的环境，也就是 rsyslog 加载什么模块，文件的所属者等；而第二个主要是配置的 Filter Conditions 123vim /etc/rsyslog.conf vim /etc/rsyslog.d/50-default.conf 转储的日志logrotate 程序是一个日志文件管理工具。用来把旧的日志文件删除，并创建新的日志文件。我们可以根据日志文件的大小，也可以根据其天数来切割日志、管理日志，这个过程又叫做“转储”。 大多数 Linux 发行版使用 logrotate 或 newsyslog 对日志进行管理。logrotate 程序不但可以压缩日志文件，减少存储空间，还可以将日志发送到指定 E-mail，方便管理员及时查看日志。 显而易见，logrotate 是基于 CRON 来运行的，其脚本是 /etc/cron.daily/logrotate；同时我们可以在 /etc/logrotate 中找到其配置文件 1cat /etc/logrotate.conf 1234567891011121314151617# see &quot;man logrotate&quot; for details //可以查看帮助文档# rotate log files weeklyweekly //设置每周转储一次(daily、weekly、monthly当然可以使用这些参数每天、星期，月 )# keep 4 weeks worth of backlogsrotate 4 //最多转储4次# create new (empty) log files after rotating old onescreate //当转储后文件不存在时创建它# uncomment this if you want your log files compressedcompress //通过gzip压缩方式转储（nocompress可以不压缩）# RPM packages drop log rotation information into this directoryinclude /etc/logrotate.d //其他日志文件的转储方式配置文件，包含在该目录下# no packages own wtmp -- we&apos;ll rotate them here/var/log/wtmp &#123; //设置/var/log/wtmp日志文件的转储参数 monthly //每月转储 create 0664 root utmp //转储后文件不存在时创建它，文件所有者为root，所属组为utmp，对应的权限为0664 rotate 1 //最多转储一次&#125;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux进程管理]]></title>
    <url>%2F2019%2F03%2F29%2Flinux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[toptop 是一个在前台执行的程序，所以执行后便进入到这样的一个交互界面，正是因为交互界面我们才可以实时的获取到系统与进程的信息。 load假设我们的系统是单 CPU、单内核的，把它比喻成是一条单向的桥，把CPU任务比作汽车。 load = 0 的时候意味着这个桥上并没有车，cpu 没有任何任务； load &lt; 1 的时候意味着桥上的车并不多，一切都还是很流畅的，cpu 的任务并不多，资源还很充足； load = 1 的时候就意味着桥已经被车给占满了，没有一点空隙，cpu 的已经在全力工作了，所有的资源都被用完了，当然还好，这还在能力范围之内，只是有点慢而已； load &gt; 1 的时候就意味着不仅仅是桥上已经被车占满了，就连桥外都被占满了，cpu 已经在全力工作，系统资源的用完了，但是还是有大量的进程在请求，在等待。若是这个值大于２、大于３，表示进程请求超过 CPU 工作能力的 2 到 ３ 倍。而若是这个值 &gt; 5 说明系统已经在超负荷运作了。 这是单个 CPU 单核的情况，而实际生活中我们需要将得到的这个值除以我们的核数来看。我们可以通过以下的命令来查看 CPU 的个数与核心数 12345#查看物理CPU的个数#cat /proc/cpuinfo |grep &quot;physical id&quot;|sort |uniq|wc -l#每个cpu的核心数cat /proc/cpuinfo |grep &quot;physical id&quot;|grep &quot;0&quot;|wc -l 通过上面的指数我们可以得知 load 的临界值为 1 ，但是在实际生活中，比较有经验的运维或者系统管理员会将临界值定为0.7。 psps 也是我们最常用的查看进程的工具之一 1ps aux pstree通过 pstree 可以很直接的看到相同的进程数量，最主要的还是我们可以看到所有进程之间的相关性。 1pstree kill命令的掌握12345678#首先我们使用图形界面打开了 gedit、gvim，用 ps 可以查看到ps aux#使用9这个信号强制结束 gedit 进程kill -9 1608#我们再查找这个进程的时候就找不到了ps aux | grep gedit 进程的执行顺序而 nice 的值我们是可以通过 nice 命令来修改的，而需要注意的是 nice 值可以调整的范围是 -20 ~ 19，其中 root有着至高无上的权力，既可以调整自己的进程也可以调整其他用户的程序，并且是所有的值都可以用，而普通用户只可以调制属于自己的进程，并且其使用的范围只能是0 ~ 19，因为系统为了避免一般用户抢占系统资源而设置的一个限制 还可以用 renice 来修改已经存在的进程的优先级 1renice -5 pid]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-3]]></title>
    <url>%2F2019%2F03%2F23%2Fshare-3%2F</url>
    <content type="text"><![CDATA[Fun GeoFS GeoFS是一个免费的在线飞行模拟器，包含全球的真实景色。你只需要一个网页浏览器就能运行它。 卡巴斯基 装逼可用 TensorFlow 的廉价硬件 TensorFlow 是谷歌的机器学习库，通常需要运行在昂贵的硬件上面。为了降低对硬件的要求，谷歌推出了 TensorFlow Lite 1.0，可以运行在嵌入式硬件上面。上图是一个 Cortex-M4 主板，可以运行简单的语音识别任务。这块主板具有 384KB RAM 和 1MB闪存存储，售价只有15美元，功耗极低，使用一颗纽扣电池就可以运行数天。人工智能的硬件要求越来越低，以后越来越多的设备将具备”智能”。 工具 vscode-leetcode：这是一个可以让用户在 VS Code 编辑器中，练习 LeetCode 习题的插件。支持：查看高票解答、提交答案、测试答案等。提高了刷题效率，助你在校招、社招中杀出重围。上班摸鱼刷题利器 资料 如何高效入门Github？ 麻省理工学院的入门课程，介绍 Linux 系统使用者需要掌握的各种基本工具，适合刚入门的初级用户。 WebGL 理论基础 藏经阁 如果有人不相信数学是简单的，那是因为他们没有意识到人生有多复杂。——冯・诺伊曼 藏起一棵树最好的方法是什么？答案是把它藏在一片森林里。 视频可以倒放，时光无法倒流。欢乐可叹短暂，孤独却是常伴。 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux进程概念]]></title>
    <url>%2F2019%2F03%2F22%2Flinux%E8%BF%9B%E7%A8%8B%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[进程与程序程序（procedure）：不太精确地说，程序就是执行一系列有逻辑、有顺序结构的指令，帮我们达成某个结果。就如我们去餐馆，给服务员说我要牛肉盖浇饭，她执行了做牛肉盖浇饭这么一个程序，最后我们得到了这么一盘牛肉盖浇饭。它需要去执行，不然它就像一本武功秘籍，放在那里等人翻看。 进程（process）：进程是程序在一个数据集合上的一次执行过程。就如我们去了餐馆，给服务员说我要牛肉盖浇饭，她执行了做牛肉盖浇饭这么一个程序，而里面做饭的是一个进程，做牛肉汤汁的是一个进程，把牛肉汤汁与饭混合在一起的是一个进程，把饭端上桌的是一个进程。它就像是我们在看武功秘籍这么一个过程，然后一个篇章一个篇章地去练。 并发：在一个时间段内，宏观来看有多个程序都在活动，有条不紊的执行（每一瞬间只有一个在执行，只是在一段时间有多个程序都执行过） 并行：在每一个瞬间，都有多个程序都在同时执行，这个必须有多个 CPU 才行 引入进程是因为传统意义上的程序已经不足以描述 OS 中各种活动之间的动态性、并发性、独立性还有相互制约性。程序就像一个公司，只是一些证书，文件的堆积（静态实体）。而当公司运作起来就有各个部门的区分，财务部，技术部，销售部等等，就像各个进程，各个部门之间可以独立运做，也可以有交互（独立性、并发性）。 而随着程序的发展越做越大，又会继续细分，从而引入了线程的概念，当代多数操作系统、Linux 2.6及更新的版本中，进程本身不是基本运行单位，而是线程的容器。就像上述所说的，每个部门又会细分为各个工作小组（线程），而工作小组需要的资源需要向上级（进程）申请。 线程（thread）是操作系统能够进行运算调度的最小单位。它被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。因为线程中几乎不包含系统资源，所以执行更快、更有效率。 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。 进程分类 以进程的功能与服务的对象来分； 以应用程序的服务类型来分； 第一个角度来看，我们可以分为用户进程与系统进程： 用户进程：通过执行用户程序、应用程序或称之为内核之外的系统程序而产生的进程，此类进程可以在用户的控制下运行或关闭。 系统进程：通过执行系统内核程序而产生的进程，比如可以执行内存资源分配和进程切换等相对底层的工作；而且该进程的运行不受用户的干预，即使是 root 用户也不能干预系统进程的运行。 第二角度来看，我们可以将进程分为交互进程、批处理进程、守护进程 交互进程：由一个 shell 终端启动的进程，在执行过程中，需要与用户进行交互操作，可以运行于前台，也可以运行在后台。 批处理进程：该进程是一个进程集合，负责按顺序启动其他的进程。 守护进程：守护进程是一直运行的一种进程，在 Linux 系统启动时启动，在系统关闭时终止。它们独立于控制终端并且周期性的执行某种任务或等待处理某些发生的事件。例如 httpd 进程，一直处于运行状态，等待用户的访问。还有经常用的 cron（在 centOS 系列为 crond）进程，这个进程为 crontab 的守护进程，可以周期性的执行用户设定的某些任务。 进程的衍生 fork-exec是由 Dennis M. Ritchie 创造的 fork() 是一个系统调用（system call），它的主要作用就是为当前的进程创建一个新的进程，这个新的进程就是它的子进程，这个子进程除了父进程的返回值和 PID 以外其他的都一模一样，如进程的执行代码段，内存信息，文件描述，寄存器状态等等 exec() 也是系统调用，作用是切换子进程中的执行程序也就是替换其从父进程复制过来的代码段与数据段 在将要结束时的子进程代码执行部分已经结束执行了，系统的资源也基本归还给系统了，但若是其进程的进程控制块（PCB）仍驻留在内存中，而它的 PCB 还在，代表这个进程还存在（因为 PCB 就是进程存在的唯一标志，里面有 PID 等消息），并没有消亡，这样的进程称之为僵尸进程（Zombie）。 虽然僵尸进程是已经放弃了几乎所有内存空间，没有任何可执行代码，也不能被调度，在进程列表中保留一个位置，记载该进程的退出状态等信息供其父进程收集，从而释放它。但是 Linux 系统中能使用的 PID 是有限的，如果系统中存在有大量的僵尸进程，系统将会因为没有可用的 PID 从而导致不能产生新的进程。 另外如果父进程结束（非正常的结束），未能及时收回子进程，子进程仍在运行，这样的子进程称之为孤儿进程。在 Linux 系统中，孤儿进程一般会被 init 进程所“收养”，成为 init 的子进程。由 init 来做善后处理，所以它并不至于像僵尸进程那样无人问津，不管不顾，大量存在会有危害。 进程 0 是系统引导时创建的一个特殊进程，也称之为内核初始化，其最后一个动作就是调用 fork() 创建出一个子进程运行 /sbin/init 可执行文件,而该进程就是 PID=1 的进程 1，而进程 0 就转为交换进程（也被称为空闲进程），进程 1 （init 进程）是第一个用户态的进程，再由它不断调用 fork() 来创建系统里其他的进程，所以它是所有进程的父进程或者祖先进程。同时它是一个守护程序，直到计算机关机才会停止。 我们还可以使用这样一个命令来看，其中 pid 就是该进程的一个唯一编号，ppid 就是该进程的父进程的 pid，command 表示的是该进程通过执行什么样的命令或者脚本而产生的 1ps －fxo user,ppid,pid,pgid,command 进程组与Sessions每一个进程都会是一个进程组的成员，而且这个进程组是唯一存在的，他们是依靠 PGID（process group ID）来区别的，而每当一个进程被创建的时候，它便会成为其父进程所在组中的一员。 一般情况，进程组的 PGID 等同于进程组的第一个成员的 PID，并且这样的进程称为该进程组的领导者,也就是领导进程，进程一般通过使用 getpgrp() 系统调用来寻找其所在组的 PGID，领导进程可以先终结，此时进程组依然存在，并持有相同的PGID，直到进程组中最后一个进程终结。 与进程组类似，每当一个进程被创建的时候，它便会成为其父进程所在 Session 中的一员，每一个进程组都会在一个 Session 中，并且这个 Session 是唯一存在的， Session 主要是针对一个 tty 建立，Session 中的每个进程都称为一个工作(job)。每个会话可以连接一个终端(control terminal)。当控制终端有输入输出时，都传递给该会话的前台进程组。Session 意义在于将多个 jobs 囊括在一个终端，并取其中的一个 job 作为前台，来直接接收该终端的输入输出以及终端信号。 其他 jobs 在后台运行。 前台（foreground）就是在终端中运行，能与你有交互的 后台（background）就是在终端中运行，但是你并不能与其任何的交互，也不会显示其执行的过程 详细版：Linux session和进程组概述 工作管理 我们可以通过 &amp; 这个符号，让我们的命令在后台中运行 1ls &amp; 被停止并放置在后台的工作我们可以使用这个命令来查看 1jobs 我们可以通过这样的一个命令将后台的工作拿到前台来 123#后面不加参数提取预设工作，加参数提取指定工作的编号#ubuntu 在 zsh 中需要 %，在 bash 中不需要 %fg [%jobnumber] 之前我们通过 ctrl + z 使得工作停止放置在后台，若是我们想让其在后台运作我们就使用这样一个命令 12#与fg类似，加参则指定，不加参则取预设bg [%jobnumber] 既然有方法将被放置在后台的工作提至前台或者让它从停止变成继续运行在后台，当然也有方法删除一个工作，或者重启等等 12345#kill的使用格式如下kill -signal %jobnumber#signal从1-64个信号值可以选择，可以这样查看kill －l]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux软件安装]]></title>
    <url>%2F2019%2F03%2F22%2Flinux%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[通常 Linux 上的软件安装主要有四种方式： 在线安装 从磁盘安装deb软件包 从二进制软件包安装 从源代码编译安装 如果你在安装一个软件之后，无法立即使用Tab键补全这个命令，你可以尝试先执行source ~/.zshrc，然后你就可以使用补全操作。 apt-getapt-get 是用于处理 apt包的公用程序集，我们可以用它来在线安装、卸载和升级软件包等，下面列出一些apt-get包含的常用的一些工具： 工具 说明 install 其后加上软件包名，用于安装一个软件包 update 从软件源镜像服务器上下载/更新用于更新本地软件源的软件包列表 upgrade 升级本地可更新的全部软件包，但存在依赖问题时将不会升级，通常会在更新之前执行一次update dist-upgrade 解决依赖关系并升级(存在一定危险性) remove 移除已安装的软件包，包括与被移除软件包有依赖关系的软件包，但不包含软件包的配置文件 autoremove 移除之前被其他软件包依赖，但现在不再被使用的软件包 purge 与remove相同，但会完全移除软件包，包含其配置文件 clean 移除下载到本地的已经安装的软件包，默认保存在/var/cache/apt/archives/ autoclean 移除已安装的软件的旧版本软件包 下面是一些apt-get常用的参数： 参数 说明 -y 自动回应是否安装软件包的选项，在一些自动化安装脚本中使用这个参数将十分有用 -s 模拟安装 -q 静默安装方式，指定多个q或者-q=#,#表示数字，用于设定静默级别，这在你不想要在安装软件包时屏幕输出过多时很有用 -f 修复损坏的依赖关系 -d 只下载不安装 --reinstall 重新安装已经安装但可能存在问题的软件包 --install-suggests 同时安装APT给出的建议安装的软件包 12345678# 更新软件源$ sudo apt-get update# 升级没有依赖问题的软件包$ sudo apt-get upgrade# 升级并解决依赖关系$ sudo apt-get dist-upgrade#搜索软件仓库里面有没有该软件sudo apt-cache search softname1 softname2 softname3…… 使用dpkg从本地磁盘安装deb软件包我们经常可以在网络上见到以deb形式打包的软件包，就需要使用dpkg命令来安装。 dpkg常用参数介绍： 参数 说明 -i 安装指定deb包 -R 后面加上目录名，用于安装该目录下的所有deb安装包 -r remove，移除某个已安装的软件包 -I 显示deb包文件的信息 -s 显示已安装软件的信息 -S 搜索已安装的软件包 -L 显示已安装软件包的目录信息 使用dpkg -L查看deb包目录信息 1$ sudo dpkg -L emacs24]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式基础]]></title>
    <url>%2F2019%2F03%2F15%2Flinux%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[grep模式匹配命令grep命令用于打印输出文本中匹配的模式串，它使用正则表达式作为模式匹配的条件。grep支持三种正则表达式引擎，分别用三个参数指定： 参数 说明 -E POSIX扩展正则表达式，ERE -G POSIX基本正则表达式，BRE -P Perl正则表达式，PCRE grep命令的常用参数： 参数 说明 -b 将二进制文件作为文本来进行匹配 -c 统计以模式匹配的数目 -i 忽略大小写 -n 显示匹配文本所在行的行号 -v 反选，输出不匹配行的内容 -r 递归匹配查找 -A n n为正整数，表示after的意思，除了列出匹配行之外，还列出后面的n行 -B n n为正整数，表示before的意思，除了列出匹配行之外，还列出后面的n行 –color = auto 将输出中的匹配项设置为自动颜色显示 数量 123456# 将匹配以&apos;z&apos;开头以&apos;o&apos;结尾的所有字符串$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;z.*o&apos;# 将匹配以&apos;z&apos;开头以&apos;o&apos;结尾，中间包含一个任意字符的字符串$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;z.o&apos;# 将匹配以&apos;z&apos;开头,以任意多个&apos;o&apos;结尾的字符串$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;zo*&apos; 选择 1234567891011121314# grep默认是区分大小写的，这里将匹配所有的小写字母$ echo &apos;1234\nabcd&apos; | grep &apos;[a-z]&apos;# 将匹配所有的数字$ echo &apos;1234\nabcd&apos; | grep &apos;[0-9]&apos;# 将匹配所有的数字$ echo &apos;1234\nabcd&apos; | grep &apos;[[:digit:]]&apos;# 将匹配所有的小写字母$ echo &apos;1234\nabcd&apos; | grep &apos;[[:lower:]]&apos;# 将匹配所有的大写字母$ echo &apos;1234\nabcd&apos; | grep &apos;[[:upper:]]&apos;# 将匹配所有的字母和数字，包括0-9,a-z,A-Z$ echo &apos;1234\nabcd&apos; | grep &apos;[[:alnum:]]&apos;# 将匹配所有的字母$ echo &apos;1234\nabcd&apos; | grep &apos;[[:alpha:]]&apos; sed流编辑器sed : 用于过滤和转换文本的流编辑器 sed 命令基本格式： 123sed [参数]... [执行命令] [输入文件]...# 形如：$ sed -i &apos;s/sad/happy/&apos; test # 表示将test文件中的&quot;sad&quot;替换为&quot;happy&quot; 参数 说明 -n 安静模式，只打印受影响的行，默认打印输入数据的全部内容 -e 用于在脚本中添加多个执行命令一次执行，在命令行中执行多个命令通常不需要加该参数 -f filename 指定执行filename文件中的命令 -r 使用扩展正则表达式，默认为标准正则表达式 -i 将直接修改输入文件内容，而不是打印到标准输出设备 sed执行命令格式： 12345[n1][,n2]command[n1][~step]command# 其中一些命令可以在后面加上作用范围，形如：$ sed -i &apos;s/sad/happy/g&apos; test # g表示全局范围$ sed -i &apos;s/sad/happy/4&apos; test # 4表示指定行中的第四个匹配字符串 其中n1,n2表示输入内容的行号，它们之间为,逗号则表示从n1到n2行，如果为～波浪号则表示从n1开始以step为步进的所有行；command为执行动作，下面为一些常用动作指令： 命令 说明 s 行内替换 c 整行替换 a 插入到指定行的后面 i 插入到指定行的前面 p 打印指定行，通常与-n参数配合使用 d 删除指定行 AWK文本处理语言awk所有的操作都是基于pattern(模式)—action(动作)对来完成的，如下面的形式： 1$ pattern &#123;action&#125; 变量名 说明 FILENAME 当前输入文件名，若有多个文件，则只表示第一个。如果输入是来自标准输入，则为空字符串 $0 当前记录的内容 $N N表示字段号，最大值为NF变量的值 FS 字段分隔符，由正则表达式表示，默认为” “空格 RS 输入记录分隔符，默认为”\n”，即一行为一个记录 NF 当前记录字段数 NR 已经读入的记录数 FNR 当前输入文件的记录数，请注意它与NR的区别 OFS 输出字段分隔符，默认为” “空格 ORS 输出记录分隔符，默认为”\n”]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[unity-basic]]></title>
    <url>%2F2019%2F03%2F14%2FunityAPI%2F</url>
    <content type="text"><![CDATA[事件函数 如何执行的是一个普通方法，那么会等这个普通方法执行完，然后继续向下执行 如果调用的是一个协程方法（coroutine)，那么调用完协程方法后，不会等这个方法执行完，就继续向下执行了 Mathf.Rad2Deg 弧度转度数 Mathf.Deg2Rad 度数转弧度 Mathf.Epsilon 非常小的小数 Mathf.lnfinity 无限大的数字 Mathf.Negativelnfinity 无限小的数字 Mathf.PI Mathf.Lerp 插值运算 速度越来越慢 Mathf.MoveTowards 左右远离目标运动 匀速 Mathf.PingPong 乒乓球来回运动 UGUI 事件监听 拖拽 代码添加 通过实现接口 对应UI的接口 获取游戏物体的四种方式 Time.dateTime 每一帧的时间间隔/1s运行60帧/当前帧运行占用的时间 Time.realtimeSinceStartup 从游戏开始到现在的总时间/测性能 Time.frameCount 帧数 Time.fixedTime Time.time Time.timeSinceLevelLoad 游戏运行的时间 Time.timeScale 时间比例 构造方法 Instantiate 克隆原始对象并返回克隆。 CreatePrimitive 使用基本的网格渲染器和适当的碰撞器创建游戏对象。 GameObject 游戏物体 activeSelf 游戏对象的局部活动状态。 activeInHierarchy 定义游戏对象在场景中是否处于活动状态。 tag AddComponent 添加组件，通过组件获取到的名字为物体的名字，因为物体与组件同属于一个基类 游戏物体查找 Game.Find FindObjectsOfType FindWithTag transform.Find Input 输入事件 GetKey.. GetAxis OnMouse 静态方法由类名来调用 非静态方法由具体对象来调用 Vector2 Vector3 operators 数学运算 +-*/ = 使用random生成随机数 Random.lnitState 初始化，生成一个种子； Quaternion四元数 Inspector中的rotation 改变的为欧拉角eulerAngles Scipt中的rotation 得传递四元数 Camera mainCamera ScreenPointToRay ScreenToWorldPoint WorldToScreenPoint 要持续地移动的话，使用Rigidbody.MovePosition 把刚体从一个位置移动到另一个位置 使用Rigidbody.Position streaming Assets 资源文件 音频 视频 射线检测 Physics 中的Raycast , RaycastAll 123456Unity 5.3:ParticleSystem main = smokePuff.GetComponent&lt;ParticleSystem&gt;();main.startColorUnity 5.5+:ParticleSystem.MainModule main = smokePuff.GetComponent&lt;ParticleSystem&gt;().main;main.startColor SceneManagement 代替 Application spatial blend 0 2D声音 1 3D声音 2D声音不受距离的影响 物体由 形状（mesh) , 材质 ，贴图（Textures外观） Move To View： 移动游戏对象到视图的中心点。 Align With View： 移动游戏对象与视图对齐，将选择的对象自动移动到当前视图并以当前视图为中心进行对齐 Align View To Select：移动视图与游戏对象对齐，将当前视图对齐到选择的对象，并以游戏对象中心为准进行对齐 Pivot 原点(位置点) Center 中心点 Global 世界坐标系 Local 局部坐标系 alt + 鼠标左键 : 观察物体 鼠标左键 ：旋转观察视野 鼠标左键 ：方向移动观察物体 persp 透视视野，近大远小。 iso 正交视野 ctrl + d 复制之后，按住 ctrl 进行单位化移动 v 吸附定点 snap setting 进行步长修改 object 的select是用来选择它的 prefabs的 字体加粗就不会受到prefabs的影响 apply相当于把自身修改的属性应用到prefabs上 collider碰撞器 OnCollisionEnter 检测碰撞 OnCollisionExit 碰撞离开 OnCollisionStay 碰撞每一帧 collision 碰撞信息的获取 Is Trigger 触发器 OnTriggerEnter OnTriggerExit OnTriggerStay Unity 四种灯光 Directional Light 平行光相当于太阳 Point Light 点光源（小灯泡）（这个很有用） Spot Light 手电筒 Area Light 区域光 baked 烘培 realtime 实时运行 mixed 烘培+实时运行 particle system 粒子系统 Gizmos 辅助线 easytouch 插件 紫色 材质丢失 terrain 地形 Nav Mesh Agent 自动识路 rendertext 动态渲染纹理 插值器Interpolator是一个帮助类，它处理对象变换的各种变化。它被Tagalong用来调整对象的transform.position。 插值时，使用非缩放时间。这对于具有暂停机制或调整游戏时间尺度的游戏非常有用。 算法与游戏之AABB碰撞盒算法 [Serializefield]-序列化，只是用于在检查器上显示私有变量的值。您可以像公共变量一样轻松地更改值。但是没有人可以从其他脚本或位置访问这个值。 Time类包含了一个重要的类变量deltaTime，它表示距上一次调用Update或FixedUpdate所用的时间。 因此通过它可以让游戏对象按照一个常速进行旋转，而不是依赖于它的帧频：function Update(){ tranform.Rotate(0, 5 * Time.deltaTime, 0);} 同样地移动效果：function Update(){ transform.Translate(0, 0, 2 * Time.deltaTime);} 如果想要一个值根据每帧的变化而变化（增加或减少） ，你应该使用 Time.deltaTime来乘以这个值。这样才能使得变化的效果依赖于单位时间，而不是帧频。这不仅使得游戏的运行独立于帧频，也使得运动的效果符合现实。 rigidBody.velocity.magnitude返回速度方向向量的长度，也就是速度大小 rigidBody.AddForce 加入一个力给物体]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>unity</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单的文本处理]]></title>
    <url>%2F2019%2F03%2F08%2Flinux%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[tr命令tr 命令可以用来删除一段文本信息中的某些文字。或者将其进行转换。 1234567# 删除 &quot;hello shiyanlou&quot; 中所有的&apos;o&apos;,&apos;l&apos;,&apos;h&apos;$ echo &apos;hello shiyanlou&apos; | tr -d &apos;olh&apos;# 将&quot;hello&quot; 中的ll,去重为一个l$ echo &apos;hello&apos; | tr -s &apos;l&apos;# 将输入文本，全部转换为大写或小写输出$ echo &apos;input some text here&apos; | tr &apos;[:lower:]&apos; &apos;[:upper:]&apos;# 上面的&apos;[:lower:]&apos; &apos;[:upper:]&apos;你也可以简单的写作&apos;[a-z]&apos; &apos;[A-Z]&apos;,当然反过来将大写变小写也是可以的 col命令col 命令可以将Tab换成对等数量的空格键，或反转这个操作。 使用方式1col [option] 常用的选项有： 选项 说明 -x 将Tab转换为空格 -h 将空格转换为Tab(默认选项) join命令join命令可以将将两个文件中包含相同内容的那一行合并在一起。 常用的选项有： 选项 说明 -t 指定分隔符，默认为空格 -i 忽略大小写的差异 -1 指名第一个文件要用哪个字段来对比，默认对比第一个字段 -2 指名第二个文件要用哪个字段来对比，默认对比第一个字段 eg: 123456789$ cd /home/shiyanlou# 创建两个文件$ echo &apos;1 hello&apos; &gt; file1$ echo &apos;1 shiyanlou&apos; &gt; file2$ join file1 file2# 将/etc/passwd与/etc/shadow两个文件合并，指定以&apos;:&apos;作为分隔符$ sudo join -t&apos;:&apos; /etc/passwd /etc/shadow# 将/etc/passwd与/etc/group两个文件合并，指定以&apos;:&apos;作为分隔符, 分别比对第4和第3个字段$ sudo join -t&apos;:&apos; -1 4 /etc/passwd -2 3 /etc/group paste 命令paste这个命令与join 命令类似，它是在不对比数据的情况下，简单地将多个文件合并一起，以Tab隔开。 常用的选项有： 选项 说明 -d 指定合并的分隔符，默认为Tab -s 不合并到一行，每个文件为一行 操作举例：12345$ echo hello &gt; file1$ echo shiyanlou &gt; file2$ echo www.shiyanlou.com &gt; file3$ paste -d &apos;:&apos; file1 file2 file3$ paste -s file1 file2 file3]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTC VIVE - 2]]></title>
    <url>%2F2019%2F03%2F03%2Fvive2%2F</url>
    <content type="text"><![CDATA[SteamVR渲染机制 等待相机和GUI的渲染完成 设置跟踪空间 获取设备位置，通知更新 渲染外部相机 渲染左右眼 vive的基站工作原理vive的基站工作原理有点像超市买东西用来扫描的扫描器，不够那个用的是可见激光，vive用的是不可见激光（红外线)。结构：基站里面有两个马达，一个横着转一个竖着转。他们上面有一个激光发射器发出一道很细的不可见激光，随着马达的转动它们射出的激光线扫过整个房间。中间有一个红外列阵。 红色的是激光发射器（在马达上的）绿色的是红外列阵。原理： 基站会频繁的发出4个信号，第一是由红外列阵发出的红外线，代表开始扫描，可以覆盖整个追踪面积；第二竖向激光扫描，第三是横向激光扫描，第四又是由红外列阵发出的，代表扫描结束。 vive和vive控制器上有多个红外接收器，它们会接受第一个信号并且开始计时，当2个信号被接收到的时候结束竖向计时，第3个信号结束横向计时，第四个信号重置。 因为马达的转速是已知的，所以通过时间差可以计算出接收点相对接收器的位置，又因为基站是固定的，可以计算出接收点的位置。 接收器上有多个接收点，通过接收点之间的距离可以计算出vive头显和控制器的完全位置以及状态。 竖向扫描 横向扫描]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>vr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-2]]></title>
    <url>%2F2019%2F03%2F02%2Fshare-2%2F</url>
    <content type="text"><![CDATA[Fun DNS Servers That Offer Privacy and Filtering 作者介绍了几个常用的DNS服务器地址，简单谈了它们之间的差异。 This Person Does Not Exist 这个网站，每刷新一次就会出现一张人脸。所有的人脸都是AI生成的，现实中不存在。 猫屎咖啡 猫屎咖啡是世界上最贵的咖啡之一，是印尼麝香猫吃下咖啡浆果排泄出的咖啡豆制成的。过去，人们是在树林捡拾野生麝香猫排泄的天然咖啡豆，数量稀少且生产速度慢，于是咖啡商人开始人工养殖麝香猫，以求大量生产猫屎咖啡。 乐器博物馆 意大利克雷莫纳，历史上是一个著名的小提琴制作城市。著名的斯特拉迪瓦里小提琴，就是在那里制作的。下图是当地的小提琴博物馆。 《流浪地球》超详细设计图、理念分享 估计日落的时间 太阳将要落山的时候，你可以把手放在太阳和地平线之间，估计日落的大概时间。如果可以放四根手指，就是1个小时后落山，三根手指45分钟，两根手指30分钟，一根手指15分钟。 工具 LucidChart 一款流程图工具，与大家熟知的 ProcessOn 功能操作类似，但图形和模板更丰富些，如果你受不了 ProcessOn 的种种小毛病，或者觉得模板不漂亮，可以试试这款工具。 百度网盘下载神器 LeetCode LeetCode是一个美国的在线编程网站，上面主要收集了各大IT公司的笔试面试题，对于找工作是一个不可多得的好帮手。如果想要练习编程基础或者准备面试的话，非常适合。 资料 How does the Hololens 2 matter? This release is super exciting, I can’t wait to get my hands on one and see what it can do. 计算机科学的自学方案 本文对于计算机科学各门课程的自学，给出了一个完整的方案。 文章 施一公：如何成为一名优秀的博士生？ 什么是点云？ 使用Linux系统是一种怎样的体验 Controlling a Quadcopter with Hand Gestures 藏经阁 回顾其过去，能看清其千丝万缕的联系。 -苏牧云 要学会挖掘数据背后的潜在价值。 -苏牧云 越是复杂的问题，背后的原理越是简单。有时候，应该让生活过得简单一些。-苏牧云 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[linux命令执行顺序控制与管道]]></title>
    <url>%2F2019%2F03%2F01%2Flinux%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E6%8E%A7%E5%88%B6%E4%B8%8E%E7%AE%A1%E9%81%93%2F</url>
    <content type="text"><![CDATA[命令执行顺序的控制顺序执行多条命令eg:1234#更新软件源里的软件列表$ sudo apt-get update$ sudo apt-get install some-tool //这里some-tool是指具体的软件包，例如：banner$ some-tool 有选择的执行命令eg:1$ which cowsay&gt;/dev/null &amp;&amp; cowsay -f head-in ohch~ 你如果没有安装cowsay，你可以先执行一次上述命令，你会发现什么也没发生，你再安装好之后你再执行一次上述命令，你也会发现一些惊喜。 上面的&amp;&amp;就是用来实现选择性执行的，它表示如果前面的命令执行结果（不是表示终端输出的内容，而是表示命令执行状态的结果）返回0则执行后面的，否则不执行，你可以从$?环境变量获取上一次命令的返回结果： ||就是与&amp;&amp;相反的控制效果，当上一条命令执行结果为≠0($?≠0)时则执行它后面的命令：1$ which cowsay&gt;/dev/null || echo &quot;cowsay has not been install, please run &apos;sudo apt-get install cowsay&apos; to install&quot; 流程图： 管道管道是什么？管道是一种通信机制，通常用于进程间的通信（也可通过socket进行网络通信），它表现出来的形式就是将前面每一个进程的输出(stdout)直接作为下一个进程的输入(stdin)。 管道又分为匿名管道和具名管道，在使用一些过滤程序时经常会用到的就是匿名管道，在命令行中由|分隔符表示,具名管道简单的说就是有名字的管道，通常只会在源程序中用到具名管道。 先试用一下管道，比如查看/etc目录下有哪些文件和目录，使用ls命令来查看：1$ ls -al /etc 有太多内容，屏幕不能完全显示，这时候可以使用滚动条或快捷键滚动窗口来查看。不过这时候可以使用管道：1$ ls -al /etc | less 通过管道将前一个命令(ls)的输出作为下一个命令(less)的输入，然后就可以一行一行地看。 cut 命令，打印每一行的某一字段打印/etc/passwd文件中以:为分隔符的第1个字段和第6个字段分别表示用户名和其家目录：1$ cut /etc/passwd -d &apos;:&apos; -f 1,6 打印/etc/passwd文件中每一行的前N个字符：12345678# 前五个（包含第五个）$ cut /etc/passwd -c -5# 前五个之后的（包含第五个）$ cut /etc/passwd -c 5-# 第五个$ cut /etc/passwd -c 5# 2到5之间的（包含第五个）$ cut /etc/passwd -c 2-5 grep 命令，在文本中或 stdin 中查找匹配字符串grep命令的一般形式为：1grep [命令选项]... 用于匹配的表达式 [文件]... 搜索/home/shiyanlou目录下所有包含”shiyanlou”的文本文件，并显示出现在文本中的行号：1$ grep -rnI &quot;shiyanlou&quot; ~ -r 参数表示递归搜索子目录中的文件 -n表示打印匹配项行号 -I表示忽略二进制文件 当然也可以在匹配字段中使用正则表达式，下面简单的演示： 12# 查看环境变量中以&quot;yanlou&quot;结尾的字符串$ export | grep &quot;.*yanlou$&quot; $表示一行的末尾 wc 命令，简单小巧的计数工具wc 命令用于统计并输出一个文件中行、单词和字节的数目，比如输出/etc/passwd文件的统计信息：1$ wc /etc/passwd 分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数：12345678910# 行数$ wc -l /etc/passwd# 单词数$ wc -w /etc/passwd# 字节数$ wc -c /etc/passwd# 字符数$ wc -m /etc/passwd# 最长行字节数$ wc -L /etc/passwd sort 排序命令这个命令前面我们也是用过多次，功能很简单就是将输入按照一定方式排序，然后再输出,它支持的排序有按字典排序,数字排序，按月份排序，随机排序，反转排序，指定特定字段进行排序等等。 默认为字典排序：1$ cat /etc/passwd | sort 反转排序：1$ cat /etc/passwd | sort -r 按特定字段排序：1$ cat /etc/passwd | sort -t&apos;:&apos; -k 3 -t参数用于指定字段的分隔符，这里是以”:”作为分隔符； -k 字段号用于指定对哪一个字段进行排序。 这里/etc/passwd文件的第三个字段为数字，默认情况下是以字典序排序的，如果要按照数字排序就要加上-n参数：1$ cat /etc/passwd | sort -t&apos;:&apos; -k 3 -n uniq 去重命令uniq命令可以用于过滤或者输出重复行。 过滤重复行我们可以使用history命令查看最近执行过的命令（实际为读取${SHELL}_history文件,如我们环境中的~/.zsh_history文件），不过你可能只想查看使用了哪个命令而不需要知道具体干了什么，那么你可能就会要想去掉命令后面的参数然后去掉重复的命令：1$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | uniq 然后经过层层过滤，你会发现确是只输出了执行的命令那一列，不过去重效果好像不明显，仔细看你会发现它确实去重了，只是不那么明显，之所以不明显是因为uniq命令只能去连续重复的行，不是全文去重，所以要达到预期效果，我们先排序：12$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq# 或者$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort -u 这就是 Linux/UNIX 哲学吸引人的地方，大繁至简，一个命令只干一件事却能干到最好。 输出重复行1234# 输出重复过的行（重复的只输出一个）及重复次数$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq -dc# 输出所有重复的行$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq -D]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTC VIVE - 1]]></title>
    <url>%2F2019%2F02%2F28%2Fvive1%2F</url>
    <content type="text"><![CDATA[安装VIVE和SteamVR至少需要占用1020MB的磁盘空间。 技术规格“HTC Vive”具有90赫兹的刷新速率。该设备使用两个屏幕，每眼一个屏幕，每个屏幕具有1080×1200分辨率。 最低系统要求123456GPU: NVIDIA GeForce GTX 970 / AMD Radeon R9 290 同等或更高的版本CPU: Intel i5-4590 / AMD FX-8350 同等或更高的版本RAM: 4GB+Video Output: HDMI 1.4 或 DisplayPort 1.2 或更高版本USB Port: 1x USB 2.0 或更高版本操作系统: Windows 7 SP1 或更新版本[8] Viveport M简介Viveport M是HTC面向移动市场推出的虚拟现实应用商店，适用于Android平台并广泛兼容多种移动VR设备，其内容将以360°视频和体验类游戏为主，旨在为用户提供更多元化、更高品质的移动VR内容与体验。Viveport M将为全球数以万计的开发者提供一个展示内容的新平台，吸引更多开发者和合作伙伴加入到蓬勃发展的Vive生态系统中，接触到全球增长速度最快的用户群体。系统支持：安卓5.0及以上；屏幕尺寸：5-6寸 手柄1 开关、系统菜单按钮：只有这个按钮不可以编程（默认），用来打开手柄，其实没用关的功能。在游戏中按下该按钮是调出系统默认的菜单，用来关闭，切换游戏用的。 2 menu按钮：默认用来打开游戏菜单。 3 grip按钮：用的最少的按钮，每个手柄上虽然有两个，但是是相同的。 4 trigger按钮：扳机按钮，用的最多，可以有力度。 5 pad：触摸屏+鼠标的功能，可触摸，可点击。 vive开发需要两个插件： SteamVR Plugin Vive Input Utility123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105SteamVR 这个目录下的脚本都是用来定制SteamVR插件中某些脚本在Unity中的Inspector界面及功能的——Editor 定制SteamVR_Camera.cs这个脚本在Inspector中的显示效果 SteamVR_Editor.cs 定制SteamVR_RenderModel.cs脚本在Inspector中的功能 SteamVR_RenderModelEditor.cs 上面提到的弹出的SteamVR_Settings对话框里面的选项就在这儿定制 SteamVR_Settings.cs 定制SteamVR_SkyBox.cs在Inspector中显示的属性 SteamVR_SkyboxEditor.cs 用来检查插件的更新 SteamVR_Update.cs 这个文件夹下面放着一些工具脚本 ——Extras 这个脚本用来检测物体是否被用户所凝视 SteamVR_GazeTracker.cs 通过手柄指向来产生一条激光束 SteamVR_LeaserPointer.cs 用来瞬移的脚本 SteamVR_Teleporter.cs 示例场景中扔物体的脚本 SteamVR_TestThrow.cs 示例场景中跟踪相机的脚本 SteamVR_TestTrackedCamera.cs 控制器(手柄)集成脚本 SteamVR_trackedController.cs 存放示例demo的材质体 ——Materials 存放SteamVR预制体——Prefabs 相机预制体 [CameraRig] 状态相关的overlay显示预制体 [Status] /*SteamVR_Render预制体*/ [SteamVR] /*一些自带的shader*/ ——Scenes/*SteamVR核心脚本*/ ——Scripts /*SteamVR的封装类*/ SteamVR.cs /*SteamVR的核心相机类*/ SteamVR_Camera.cs /*SteamVR相机翻转*/ SteamVR_CameraFlip.cs /*SteamVR相机网格隐藏*/ SteamVR_CameraMask.cs /*控制器封装类*/ SteamVR_Controller.cs /*控制器管理类*/ SteamVR_ControllerManager.cs /*声音控制类*/ SteamVR_Ears.cs /*外部相机*/ SteamVR_ExternalCamera.cs /*场景进行渐显或者渐隐的类*/ SteamVR_Fade.cs /*跟踪设备的扫描范围*/ SteamVR_Frustum.cs /*绘制pc上的伴随窗口*/ SteamVR_GameView.cs /*关节反身运动*/ SteamVR_IK.cs /*场景切换类*/ SteamVR_LoadLevel.cs /*菜单类*/ SteamVR_Menu.cs /*overly封装类*/ SteamVR_Overlay.cs /*运动区域*/ SteamVR_PlayArea.cs /*Vive渲染流程控制的核心类*/ SteamVR_Render.cs /*设置天空盒*/ SteamVR_Skybox.cs /*做球形投影的类*/ SteamVR_SphericalProjection.cs /*通过overlay显示统计信息*/ SteamVR_Stats.cs /*根据不同状态渐变显示不同的信息*/ SteamVR_Status.cs /*根据不同状态渐变显示不同文本信息*/ SteamVR_StatusText.cs /*控制器测试脚本*/ SteamVR_TestController.cs /*头盔上的前置相机*/ SteamVR_TrackedCamera.cs /*跟踪设备管理类*/ SteamVR_TrackedObject.cs /*5.x版本以前更新设备位置的脚本*/ SteamVR_UpdatePoses.cs /*工具类，包括事件系统，Transform等等*/ SteamVR_Utils.cs /*常用的纹理*/ ——Textures]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>vr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hololens2]]></title>
    <url>%2F2019%2F02%2F25%2Fhololens2%2F</url>
    <content type="text"><![CDATA[Hololens2售价3500美元 具有强大的环境感知能力，和信息展示能力。强大的本地计算能力（HPU2），还可连接云端后台来增强。 Hololens 2本体的几个亮点： FOV * 2； Hololens 2的FOV大约从30°增加到了52°，同时达到每个视距47像素。 眼球追踪； 眼球追踪也是一个重头戏，Hololens 2 利用了一个小摄像头实现了这个功能。允许其精确追踪你的两只眼睛，并判断具体的注视点位置。与此同时，设备支持Windows Hello和虹膜识别登录，从而允许多人轻松，快速，安全地共享设备。 完全的手指跟踪； 基本上实现了Alex承诺的’instinctual control’。 显示系统: MEMS激光显示器，而且这是当前市场上最小和最高能效的2K显示器。 除了高通骁龙 850 处理器，HoloLens 2 还内置了 AI 处理单元。因此，它能够直接连接到微软的 Azure 云服务。「这意味着某些 AI 任务会被移交给云计算处理，最终的运算结果将会更加精确——类似一厘米空间映射（spatial mapping）和一毫米空间映射的区别。头显处理这些任务仍需几秒钟时间，Kipman 相信这是企业用户可以接受的延迟时长。」《连线》报道称。早在去年 10 月，微软就已推出 Dynamics 365 Remote Assist 和 Dynamics 365 Layout 两个 app。前者为 MR 头显的使用者提供远程帮助；后者将通过云记住用户创建的虚拟图像，并将它固定在特定的地方，以便多名协作用户查找。 在北京时间今天凌晨的 MWC 发布会上，微软推出了全新的员工培训应用 Dynamics 365 Guides。「就好像是为现实世界准备的，能一步步引导你的谷歌地图。」CNET 的记者这样形容。Dynamics 365 Guides 的 PC 端应用还能创建交互式内容，包括添加图片和视频，3D 模型等。 如果将设备连接至全新的Azure Remote Rendering混合现实云端服务，你将可以快速生成复杂的三维数字模型，而原本企业可能需要花费数天或数月的时间才能构建出与之媲美的模型细节。如果没有云端的图形处理能力，这是不可能实现的任务。Azure Remote Rendering可以帮助人们自由体验3D，从而实现更快，更优的决策。微软认为，今天如果要通过移动设备和混合现实头显与高质量3D模型进行交互，你通常需要“抽取”或简化3D模型。但对于设计评审和医疗规划等场景，每个细节都非常重要，而简化asset可能会导致关键决策所需的重要细节丢失。Azure Remote Rendering可以在云端渲染高质量的3D内容，并将其全部实时传输至边缘设备，而且能够确保“每个细节都完好无损”。 如果把未来的公司比作一个厨房，那么云服务大概是水电煤，数据就是基础原料，AI算法服务是不同的菜谱，操作系统则是一台功能齐备的厨师机，目前这厨房里的所有设备微软全都齐备，并且都在为未来布局。 技术规格:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748光学：透视全息透镜（波导）分辨率：2k 3：2光引擎全息密度：&gt; 2.5k辐射点（每弧度光点）注视点渲染：针对3D眼睛位置显示的优化深度传感器：Azure Kinect传感器IMU：加速度计，陀螺仪，磁力计摄像头：800万像素，1080P/30帧视频麦克风阵列：5组扬声器：内置空间音频手部追踪：双手全关节模型，直接操纵眼动追踪：实时追踪语音 ：板载命令与控制，具有互联网连接的自然语言六自由度追踪：世界规模的位置追踪空间映射：实时环境网格混合现实捕获：混合全息图和物理环境照片和视频SoC：高通骁龙850计算平台，不支持4G LTEHPU：第二代定制全息处理单元WiFi：802.11ac 2×2蓝牙：5.0USB：USB Type-C续航能力：2-3小时的有效使用时间充电：USB供电 – 快速充电热量：被动冷却佩戴：适合眼镜，可使用表盘调节 Azure Kinect微软同时发布了一款新的Azure Kinect设备，为开发者提供了创建人工智能体验的新方式。Azure Kinect将HoloLens 2中的深度感应摄像头技术与圆形麦克风阵列和彩色摄像头相结合，并搭配以Microsoft Azure中的人工智能服务。它可以帮助开发者建立新的感知功能，如根据锯子的声音识别其是否属于危险的运行情况，支持机器人在装箱时判断距离，或者是识别从商店货架中选择的物品。 第四代的Kinect，结合了在边缘运行的AI工具。这种深度和动作感知技术最初是在十年前开发，并旨在为Xbox创建手势识别附件。但对于可以准确感知深度并确定人体在空间中移动的能力，其潜力远远不局限于游戏。例如，Ocuvera正与Azure Kinect合作开发这样一种系统：旨在帮助防止每年在美国医院发生的大约100万次跌倒，甚至是全球范围内的更多跌倒。他们研发的系统可以感知需要帮助行走的患者是于何时无助地下床，并提前预警护士以提供帮助。利用深度感应摄像头和人工智能算法，系统可以在患者起床前识别出运动模式，如坐起或摆动腿部的动作。11个临床试点的初步研究结果发现，在实施上述技术后，无辅助和未留意的下床行走减少了90％以上。首席执行官史蒂夫·凯恩（Steve Kiene）表示，Ocuvera团队调查了世界每一台深度感应摄像头，甚至试图开发自家的深度感应摄像头。但对于区分病人是向前移动抑或只是翻身，没有任何一款设备能够接近于Azure Kinect的准确性和分辨率。他说道：“这就像玩扑克时的认牌一样。只有Azure Kinect能够为我们提供可以真正了解患者在病床上发生的情况，并以足够的准确度预测其意图的数据。当我们在医院进行试点测试时，他们经常告诉我们这是不可能的做到的事情，但随后他们发现它确实有效，而且他们感到非常惊讶。” 参考文章 售价3500美元，中国首发，微软HoloLens 2正式发布 - 映维网 十年一剑！微软HoloLens 2是如何沸腾下一代计算平台 - 映维网]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>hololens</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux帮助命令和crontab]]></title>
    <url>%2F2019%2F02%2F21%2Flinux%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[内建命令与外部命令可以用type来区分命令是内建的还是外部的1type + 命令 内建命令是写在bash源码的builtins里面的 外部命令通常放在/bin，/user/bin,/sbin,/usr/sbin等等 crontab语法用于设置周期性被执行的指令。通常，crontab 储存的指令被守护进程激活，crond 为其守护进程，crond 常常在后台运行，每一分钟会检查一次是否有预定的作业需要执行。 通过 crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell script 脚本。时间间隔的单位可以是分钟、小时、日、月、周的任意组合。 crontab 的格式:12345678# Example of job definition:# .---------------- minute (0 - 59)# | .------------- hour (0 - 23)# | | .---------- day of month (1 - 31)# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat# | | | | |# * * * * * user-name command to be executed 12$ crontab -e 表示为当前用户添加计划任务$ sudo crontab -e 表示为root用户添加计划任务]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C# 反射（Reflection）]]></title>
    <url>%2F2019%2F02%2F21%2Fc%20sharp%E5%8F%8D%E5%B0%84%2F</url>
    <content type="text"><![CDATA[反射（Reflection）的用途反射（Reflection）有下列用途： 它允许在运行时查看特性（attribute）信息。 它允许审查集合中的各种类型，以及实例化这些类型。 它允许延迟绑定的方法和属性（property）。 它允许在运行时创建新类型，然后使用这些类型执行一些任务。 查看元数据使用反射（Reflection）可以查看特性（attribute）信息。 System.Reflection 类的 MemberInfo 对象需要被初始化，用于发现与类相关的特性（attribute）。为了做到这点，您可以定义目标类的一个对象，如下：1System.Reflection.MemberInfo info = typeof(MyClass); 下面的程序演示了这点：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849using System;[AttributeUsage(AttributeTargets.All)]public class HelpAttribute : System.Attribute&#123; public readonly string Url; public string Topic // Topic 是一个命名（named）参数 &#123; get &#123; return topic; &#125; set &#123; topic = value; &#125; &#125; public HelpAttribute(string url) // url 是一个定位（positional）参数 &#123; this.Url = url; &#125; private string topic;&#125;[HelpAttribute(&quot;Information on the class MyClass&quot;)]class MyClass&#123;&#125;namespace AttributeAppl&#123; class Program &#123; static void Main(string[] args) &#123; System.Reflection.MemberInfo info = typeof(MyClass); object[] attributes = info.GetCustomAttributes(true); for (int i = 0; i &lt; attributes.Length; i++) &#123; System.Console.WriteLine(attributes[i]); &#125; Console.ReadKey(); &#125; &#125;&#125; 当上面的代码被编译和执行时，它会显示附加到类 MyClass 上的自定义特性：1HelpAttribute]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>c#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C# 特性（Attribute）]]></title>
    <url>%2F2019%2F02%2F21%2Fc%20sharp%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[特性（Attribute）是用于在运行时传递程序中各种元素（比如类、方法、结构、枚举、组件等）的行为信息的声明性标签。可以通过使用特性向程序添加声明性信息。一个声明性标签是通过放置在它所应用的元素前面的方括号（[ ]）来描述的。 .Net 框架提供了两种类型的特性：预定义特性和自定义特性。 预定义特性（Attribute）.Net 框架提供了三种预定义特性： AttributeUsage Conditional Obsolete 创建自定义特性（Attribute）创建并使用自定义特性包含四个步骤： 声明自定义特性 构建自定义特性 在目标程序元素上应用自定义特性 通过反射访问特性 声明自定义特性一个新的自定义特性应派生自 System.Attribute 类。例如： 123456789// 一个自定义特性 BugFix 被赋给类及其成员[AttributeUsage(AttributeTargets.Class |AttributeTargets.Constructor |AttributeTargets.Field |AttributeTargets.Method |AttributeTargets.Property,AllowMultiple = true)]public class DeBugInfo : System.Attribute 在上面的代码中，我们已经声明了一个名为 DeBugInfo 的自定义特性。 构建自定义特性让我们构建一个名为 DeBugInfo 的自定义特性，该特性将存储调试程序获得的信息。它存储下面的信息： bug 的代码编号 辨认该 bug 的开发人员名字 最后一次审查该代码的日期 一个存储了开发人员标记的字符串消息 我们的 DeBugInfo 类将带有三个用于存储前三个信息的私有属性（property）和一个用于存储消息的公有属性（property）。所以 bug 编号、开发人员名字和审查日期将是 DeBugInfo 类的必需的定位（ positional）参数，消息将是一个可选的命名（named）参数。 每个特性必须至少有一个构造函数。必需的定位（ positional）参数应通过构造函数传递。下面的代码演示了 DeBugInfo 类： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455// 一个自定义特性 BugFix 被赋给类及其成员[AttributeUsage(AttributeTargets.Class |AttributeTargets.Constructor |AttributeTargets.Field |AttributeTargets.Method |AttributeTargets.Property,AllowMultiple = true)]public class DeBugInfo : System.Attribute&#123; private int bugNo; private string developer; private string lastReview; public string message; public DeBugInfo(int bg, string dev, string d) &#123; this.bugNo = bg; this.developer = dev; this.lastReview = d; &#125; public int BugNo &#123; get &#123; return bugNo; &#125; &#125; public string Developer &#123; get &#123; return developer; &#125; &#125; public string LastReview &#123; get &#123; return lastReview; &#125; &#125; public string Message &#123; get &#123; return message; &#125; set &#123; message = value; &#125; &#125;&#125; 应用自定义特性通过把特性放置在紧接着它的目标之前，来应用该特性：1234567891011121314151617181920212223242526[DeBugInfo(45, &quot;Zara Ali&quot;, &quot;12/8/2012&quot;, Message = &quot;Return type mismatch&quot;)][DeBugInfo(49, &quot;Nuha Ali&quot;, &quot;10/10/2012&quot;, Message = &quot;Unused variable&quot;)]class Rectangle&#123; // 成员变量 protected double length; protected double width; public Rectangle(double l, double w) &#123; length = l; width = w; &#125; [DeBugInfo(55, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;, Message = &quot;Return type mismatch&quot;)] public double GetArea() &#123; return length * width; &#125; [DeBugInfo(56, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;)] public void Display() &#123; Console.WriteLine(&quot;Length: &#123;0&#125;&quot;, length); Console.WriteLine(&quot;Width: &#123;0&#125;&quot;, width); Console.WriteLine(&quot;Area: &#123;0&#125;&quot;, GetArea()); &#125;&#125;]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>c#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[story]]></title>
    <url>%2F2019%2F02%2F21%2Fstory%2F</url>
    <content type="text"><![CDATA[故事1 新郎，特地和司仪要了话筒，说了一段话，他说他父母婚姻不幸，心里那个自己，从来没有长大过。 从来我不是不爱你，不是一次次想要推开你。不是心有不忿意难平。这世间，离别太多。 太美好的你，怕握不住。 嗯，那个戒指，他配了项链挂在胸口。忽然明白，为什么十年，依旧是他们两个。 或许女孩子从来不卑微，她知道命中注定就是他。 嗯，我一直看见的婚礼都是新娘哭，新郎笑。 今天第一次看见新郎哭得双肩耸动，新娘笑着安慰，帮他抹泪。 很甜！ 故事二 高中时一个同学沉迷网络 时常半夜翻墙出校上网 一日他照例翻墙 翻到一半就拔足狂奔而归 面色古怪，问之不语 从此认真读书，不再上网 学校盛传他见鬼了 后来他考上名校，我们问起这事 他沉默良久，说 “那天父亲来送生活费 舍不得住旅馆，在墙下坐了一夜” 枭雄 念！为何不念？当年此文传至许都，我方患头风，卧病在床。此文读过，毛骨悚然，一身冷汗，不觉头风顿愈，才能自引大军二十万，进黎阳、拒袁绍，与其决一死战。真乃檄文如箭！……此箭一发，却又引得多少壮士尸陈沙场，魂归西天。我曹操不受此箭，壮士安能招魂入土，夜枕青山！星光殷殷，其灿如言，不念此文，操安能以血补天哉！]]></content>
      <categories>
        <category>dailylog</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[文件系统操作与磁盘管理]]></title>
    <url>%2F2019%2F02%2F16%2Flinux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C%E4%B8%8E%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[查看磁盘和目录的容量 使用df命令查看磁盘的容量12$ df$ df -h 使用du命令查看目录的容量 1234# 默认同样以 块 的大小展示$ du# 加上-h参数，以更易读的方式展示$ du -h -d 参数指定查看目录的深度1234# 只查看1级目录的信息$ du -h -d 0 ~# 查看2级$ du -h -d 1 ~ 常用参数123du -h #同--human-readable 以K，M，G为单位，提高信息的可读性。du -a #同--all 显示目录中所有文件的大小。du -s #同--summarize 仅显示总计，只列出最后加总的值。 创建虚拟磁盘 用dd命令从标准输入读入用户的输入到标准输出或者一个文件中： 12345# 输出到文件$ dd of=test bs=10 count=1# 输出到标准输出$ dd if=/dev/stdin of=/dev/stdout bs=10 count=1# 注:在打完了这个命令后，继续在终端打字，作为你的输入 bs（block size）用于指定块大小（缺省单位为 Byte，也可为其指定如’K’，’M’，’G’等单位），count用于指定块数量。 将输出的英文字符转换为大写再写入文件：1$ dd if=/dev/stdin of=test bs=10 count=1 conv=ucase 使用 dd 命令创建虚拟镜像文件 从/dev/zero设备创建一个容量为 256M 的空文件：12$ dd if=/dev/zero of=virtual.img bs=1M count=256$ du -h virtual.img 使用 mkfs 命令格式化磁盘（我们这里是自己创建的虚拟磁盘镜像） $ sudo mkfs.ext4 virtual.img 使用 mount 命令挂载磁盘到目录树 mount命令的一般格式如下： 1mount [options] [source] [directory] 一些常用操作： 1mount [-o [操作选项]] [-t 文件系统类型] [-w|--rw|--ro] [文件系统源] [挂载点]]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux-basics]]></title>
    <url>%2F2019%2F02%2F16%2Flinux%2F</url>
    <content type="text"><![CDATA[Linux的几个优点： 免费 很多软件原生是在Linux下运行的，庞大的社区支持，生态环境好。 开源，可被定制，开放，多用户的网络操作系统。 相对安全稳定 sh ss.sh vim /etc/zsh/zshrc / 78 , boot 2 , home 40 , swap 2 , ubuntu 120 Linux 基本目录结构 bin 存放二进制可执行文件(ls,cat,mkdir等) boot 存放用于系统引导时使用的各种文件 dev 用于存放设备文件 etc 存放系统配置文件 home 存放所有用户文件的根目录 lib 存放跟文件系统中的程序运行所需要的共享库及内核模块 mnt 系统管理员安装临时文件系统的安装点 opt 额外安装的可选应用程序包所放置的位置 proc 虚拟文件系统，存放当前内存的映射 root 超级用户目录 sbin 存放二进制可执行文件，只有root才能访问 tmp 用于存放各种临时文件 usr 用于存放系统应用程序，比较重要的目录/usr/local 本地管理员软件安装目录 var 用于存放运行时需要改变数据的文件 趣谈Linux初创期：这个老板基于开放的营商环境（x86 体系结构），创办一家外包公司（系统的启动）。因为一开始没有其他员工，老板需要亲自接项目（实模式）。发展期：公司慢慢做大，项目越接越多（保护模式、多进程），为了管理各个外包项目，建立 了项目管理体系（进程管理）、会议室管理体系（内存管理）、文档资料管理系统（文件系统）、售前售后体系（输入输出设备管理）。壮大期：公司越来越牛，开始促进内部项目的合作（进程间通信）和外部公司合作（网络通信）。 最新一手资源 更新通知 加微信 ixuexi66 资料整理不易 仅供个人学习 请勿倒卖集团化：公司的业务越来越多，会成立多家子公司（虚拟化），或者鼓励内部创业（容器化），这个时候公司就变成了集团。大管家的调度能力不再局限于一家公司，而是集团公司 （Linux 集群），从而成功上市（从单机操作系统到数据中心操作系统）。 关于linux的不错的文章 Linux指令学习笔记 目录文件权限的查看和修改 看完这篇Linux的基本操作就会了]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux压缩解压工具]]></title>
    <url>%2F2019%2F02%2F15%2Flinux%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B%2F</url>
    <content type="text"><![CDATA[压缩文件linux常见格式：.zip,.rar,.7z,.tar,.gz,.xz,.bz2,.tar.gz,.tar.xz,tar.bz2,.tar.7z zip压缩打包程序使用zip打包文件夹1234$ cd /home/shiyanlou$ zip -r -q -o shiyanlou.zip /home/shiyanlou/Desktop$ du -h shiyanlou.zip$ file shiyanlou.zip -r 参数表示递归打包包含子目录的全部内容， -q 参数表示为安静模式，即不向屏幕输出信息， -o，表示输出文件，需在其后紧跟打包输出文件名。 du ,命令查看打包后文件的大小 设置压缩级别为9和1（9最大，1最小），重新打包：12$ zip -r -9 -q -o shiyanlou_9.zip /home/shiyanlou/Desktop -x ~/*.zip$ zip -r -1 -q -o shiyanlou_1.zip /home/shiyanlou/Desktop -x ~/*.zip -[1-9] 表示压缩级别，1 表示最快压缩但体积大，9 表示体积最小但耗时最久。 -x 是为了排除我们上一次创建的 zip 文件，否则又会被打包进这一次的压缩文件中，注意：这里只能使用绝对路径，否则不起作用。 创建加密 zip 包使用 -e 参数可以创建加密压缩包：1$ zip -r -e -o shiyanlou_encryption.zip /home/shiyanlou/Desktop 如果你想让你在 Linux 创建的 zip 压缩文件在 Windows 上解压后没有任何问题,需要加上 -l参数将LF 转换为 CR+LF1$ zip -r -l -o shiyanlou.zip /home/shiyanlou/Desktop 使用 unzip 命令解压缩 zip 文件将 shiyanlou.zip 解压到当前目录：1$ unzip shiyanlou.zip 使用安静模式，将文件解压到指定目录：1$ unzip -q shiyanlou.zip -d ziptest 如果你不想解压只想查看压缩包的内容你可以使用 -l 参数：1$ unzip -l shiyanlou.zip 通常 Windows 系统上面创建的中文名压缩文件，默认会采用 GBK 编码，而 Linux 上面默认使用的是 UTF-8 编码，如果不加任何处理，直接解压的话可能会出现中文乱码的问题1unzip -O GBK 中文压缩文件.zip tar打包工具 创建一个 tar 包：12$ cd /home/shiyanlou$ tar -cf shiyanlou.tar /home/shiyanlou/Desktop -c 表示创建一个 tar 包文件 -f 用于指定创建的文件名 -v 以可视的的方式输出打包的文件 解包一个文件（-x 参数）到指定路径的已存在目录（-C 参数）： 12$ mkdir tardir$ tar -xf shiyanlou.tar -C tardir 只查看不解包文件 -t 参数：1$ tar -tf shiyanlou.tar 在创建 tar 文件的基础上添加 -z 参数，使用 gzip 来压缩文件： 1$ tar -czf shiyanlou.tar.gz /home/shiyanlou/Desktop 解压 *.tar.gz 文件：1$ tar -xzf shiyanlou.tar.gz 常用命令zip： 打包 ：zip something.zip something （目录请加 -r 参数） 解包：unzip something.zip 指定路径：-d 参数 tar： 打包：tar -cf something.tar something 解包：tar -xf something.tar 指定路径：-C 参数]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hololens-basics]]></title>
    <url>%2F2019%2F02%2F14%2Fhololens1%2F</url>
    <content type="text"><![CDATA[同时按住音量的加减键就可以拍照了，不管是不是有应用在运行。 录像是30fps的，并且最长录制5分钟 MRTK(Mixed Reality Toolkit) 是微软为我们提供的混合现实开发工具包，旨在帮助我们加速开发混合现实应用程序。 Hololens 的 Bloom 手势呼出主菜单的效果，主菜单是跟随你移动并且使终面朝你。这就是广告牌（Billboarding） + 平滑追踪（Tag-Along）的联合实现。 空间坐标系 所有的3D图形应用都采用笛卡尔积坐标系。 空间坐标系统以真实世界米为一个单位。 坐标系采用右手定则，X向右为正，Y向上为正，Z向内为正。 坐标参考框架在全息渲染中，有些影像需要跟随用户头部的移动而移动，有些影像在用户头部移动时需要始终保持在固定的位置上。 Hololens 为我们提供了两种参考框架，分别是静止参考框架（Stationary frame of reference） 和附加参考框架（Attached frame of reference）。 附加参考框架附加参照框架中，当用户移动或转动头部的时候，内容也会跟着走。当 Hololens 无法获取空间信息时，就只会渲染基于附加参照框架的全息图。例如程序在丢失空间映射时，弹出一个正在扫描空间信息的界面，来帮助用户。 静止参考框架在编写游戏、VR程序时，传统做法是建立一个，绝对世界坐标系（absolute world coordinate system）。在该坐标系中，可以可靠的获取任意两个物体之间的关系，只要不移动物体的位置，它们的相对位置是保持不变的。 然而在 Hololens 中，动态传感器会随着用户的移动而不断的调整对周围世界的扫描。如果仍然采用一个绝对世界坐标系，随着用户的移动，可能就会导致物体的漂移（drift）。例如假设 Hololens 采用绝对世界坐标系，定义房间左侧角落C1，右侧角落为C2，C1(0,0,0),C2(10,0,0)​C1(0,0,0),C2(10,0,0)​，在C1、C2上分别放置一个全息图，当用户在房间移动时，动态传感器重新扫描，发现 C1 到 C2 的距离只有9.9米，这时 C2(9.9,0,0)​ C2(9.9,0,0)​ ，C2的变化就会导致 C2上的全息图的位置变化，导致物体漂移。 空间锚Hololens 采用空间锚（spatial anchors）来解决这个问题。Hololens 在用户放置全息图的位置上放置空间锚，每一个锚都有一个坐标系统，当用户移动导致动态传感器重新扫描时，Hololens 根据需要调整每个锚的位置，来确保锚上的全息图停留在现实世界的固定位置。 Hololens 支持将空间锚持久化保存（Spatial anchor persistence），这样在相同的环境下再次启动程序时可以加载锚，实现全息图的位置记忆功能。 Hololens 还支持空间锚共享（Spatial anchor sharing），通过将空间锚和周围环境的传感器数据从一个HoloLens 传输到另一个HoloLens。两台设备使用共享的空间锚，使得用户可以在相同位置看到一样的东西。 SpectatorView当我们戴上 Hololens 时，一个没有戴上它的人是无法体验到我们所能体验到的奇迹。 SpectatorView（三方视角）允许其他人通过2D屏幕看到 Hololens 用户在他们的世界里看到的东西。SpectatorView（Preview版）提供一种快速和廉价的途径来录制高清的全息影像，而 SpectatorView Pro 版提供了专业质量记录的全景图。 问题关于textmeshpro的错误 请将刚刚创建的App文件夹整个删掉，在Unity中，点击菜单栏Window &gt; Package Manager，移除TextMesh Pro，如图所示，然后重新导出解决方案即可。]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>hololens</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux环境变量]]></title>
    <url>%2F2019%2F02%2F14%2Flinux%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[变量1$ declare tmp 使用 declare 命令创建一个变量名为 tmp 的变量 1$ echo $tmp 读取变量的值 1zsh 创建子shell 1export temp 导出变量temp为环境变量 1gedit hello_shell.sh 创建一个shell脚本文件，第一行 #!/bin/bash 不能省略 1$ PATH=$PATH:/home/shiyanlou/mybin 添加环境变量，可以在任意目录执行mybin里面的文件 1$ echo &quot;PATH=$PATH:/home/shiyanlou/mybin&quot; &gt;&gt; .zshrc 让添加的变量全局有效 &gt;&gt; 表示将标准输出以追加的方式重定向到一个文件中 &gt; 是以覆盖的方式重定向到一个文件中 1source .zshrc 让环境变量立即生效 1unset temp 删除一个环境变量 环境变量 变量类型： 用户自定义变量 Shell本身内建的变量 从自定义变量导出的环境变量 命 令 说 明 set 显示 Shell 所有变量，包括其内建环境变量，用户自定义变量及导出的环境变量。 env 显示与当前用户相关的环境变量，还可以让命令在指定环境中运行。 export 显示从 Shell 中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量。 按变量的生存周期来划分，Linux 变量可分为两类： 永久的：需要修改配置文件，变量永久生效； 临时的：使用 export 命令行声明即可，变量在关闭 shell 时失效。 1/etc/bashrc 存放shell变量 1/etc/profile 存放环境变量 搜索文件与搜索相关的命令常用的有 whereis，which，find和 locate。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-1]]></title>
    <url>%2F2019%2F02%2F09%2Fshare-1%2F</url>
    <content type="text"><![CDATA[Fun 字母雨 感受静谧 Comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，效果很棒。 earth a global map of wind, weather, and ocean conditions. Hololens Mixed Reality HoloLens Solution for Streamlined Shelf Management. 小printf的编程故事 作者仿照《小王子》中的情节，生动有趣的阐述了小printf从编程小白到专家的成长历程。 工具 FetchRSS 将任何网页转为 RSS 的工具。 RSSHub 直接提供各种 Web 应用的 RSS 供订阅。代码开源，可以自己部署。 love2.io 一个收集开源书籍的网站。 鸠摩搜书 一个搜索电子书的网站。 开发者知识库 搜索IT解决方案。 Diagram 手绘图，然后保存成 PPT 的在线服务。 资料 DeviantArt 是一个为艺术家展示各自作品、并交流讨论而设计的社交网路服务网站，里面的壁纸是真的不错。 Crazyflie 对Crazyflie有兴趣可以看看。 A Hololens Hololens的相关资讯。 藏经阁 谁是哪个引起蝴蝶效应的第一个IP包？ 非常在意用电情况，会用任何方式去省电。有一次问他是为什么，他的回答让我们都泪流满面：让这个宇宙的熵，增加的慢一些。 –极客 站在更高一个层次，俯瞰时，很多问题都可以轻易解决。 –思维 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[HexoHexo的命令极简单，安装后只需要记住四个常用的即可。执行命令需要Git当前处于blog文件夹根目录下。 常用命令Create a new post1$ hexo new &quot;My New Post&quot; Run server(启动服务器)1$ hexo server Generate static files(生成静态文件)1$ hexo generate Deploy to remote sites(部署网站。部署网站前，需要预先生成静态文件)1$ hexo deploy clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)1$ hexo clean]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>dev</tag>
      </tags>
  </entry>
</search>
