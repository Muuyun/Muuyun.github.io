<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F06%2F16%2Finterview%2F</url>
    <content type="text"><![CDATA[title: interview categories: Life事务所 tags: life 技术环节问完之后,HR继续问我。 “家里情况如何啊？”，hr问。 （其实这厮是想试探我家里经济状况，好衡量怎么压我的工资。当时我开的工资可能较高，无奈这个hr又想录取我又不想给我太高的工资。） 这句话一出，我立马如实相告。譬如“经常上顿不接下顿、等米下锅“之类。当然最主要原因是我7年前就做了房奴，在我脑海中扣去贷款，和青黄不接也没啥区别。当时大脑一发热就做了如此吭自己的回答。 HR皱眉。事后我才知道，这位HR认为家里实在太困难的技术人员不适合长期培养，因为肯定不稳定，容易吃着碗里瞧着锅里。 这里我们来举个例子：假设hr问到你的兴趣爱好。探测你技能以外的能力转换率。 很多人会这么回答：读书、踢球、游戏、写代码等等，反正这里的爱好任意搭配，只要没有违法的兴趣爱好都行。 1、因为喜欢读书，所以读过《XXX》或《XXX》等著作。并且对某作者有着独到的看法。写过读书笔记，在豆瓣上获得很多人的共鸣；写过博客，获得几十万的浏览量；假如出过书那就更好了。 2、因为喜欢健身，所以卧推达到200磅的成绩。对如何练习肱二头肌和三头肌有着自己独特的训练方法；知道如何做有氧运动和无氧运动的结合，使肌肉的生长达到最佳状态。 回答六个常见的面试问题 谈谈你自己 为什么我们会录取你 为什么你想来这儿工作？关于我们公司你了解多少？ 你的不足之处是什么？ 对于你的上一份工作，你有哪些不满意的？你为什么离开了你的前任工作？ 你五年内的打算是什么？ 你对公司有什么建议吗？ 了解公司的信息 私有制 赚钱 公有制 社会服务]]></content>
  </entry>
  <entry>
    <title><![CDATA[science-movie]]></title>
    <url>%2F2019%2F06%2F16%2Fmovie-1%2F</url>
    <content type="text"><![CDATA[《异次元骇客》 三重模拟 在电影设定中，虚拟现实技术高度发达，人类已经可以利用计算机仿真系统，创造出一个逼真的虚拟城市。 根据物理学中的“弦理论”，宇宙中的空间是多维的。 《超体》这部电影最核心的科幻理论基础，分析“目前人类大脑利用率只有10%，还有巨大开发潜力”的这种说法，有没有成立的可能性。 《蝴蝶效应》 《后天》 《天地大冲撞》 《这个男人来自地球》 《无姓之人》宇宙大爆炸, 宇宙大挤压, 投胎, 遗忘天使, 蝴蝶效应, 鸽子迷信理论 《星际穿越》 时空 虫洞 黑洞 视界 影响时间快慢的两个因素 1，引力，引力越大，时间越慢。 2，速度，运行速度越快，时间越慢。 暗物质 反德西塔弯曲 世界线 相对论和量子力学 推荐看问舰的科幻影评，讲解得非常到位]]></content>
      <categories>
        <category>Life事务所</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三体]]></title>
    <url>%2F2019%2F06%2F16%2Fbook-4%2F</url>
    <content type="text"><![CDATA[科学界四大天王: 王晋康，刘慈欣，何宏伟，韩松 在她那透明的心中，每一束阳光都能被晶莹地透过和折射 他感到这笑容仿佛是从画中的奥林匹斯山投向尘世的一束光芒 过去就像攥在手中的一把干沙，自以为攥得很紧，其实早就从指缝中流光了 一副空旷天空的照片所包含的信息量比画面庞杂精细的清明上河图大一至两个数量级 宇宙就是一座黑暗森林，每个文明都是带枪的猎人，像幽灵般潜行于林间，轻轻拨开挡路的树枝，竭力不让脚步发出一点儿声音，连呼吸都必须小心翼翼：他必须小心，因为林中到处都有与他一样潜行的猎人，如果他发现了别的生命，能做的只有一件事：开枪消灭之。在这片森林中，他人就是地狱，就是永恒的威胁，任何暴露自己存在的生命都将很快被消灭，这就是宇宙文明的图景，这就是对费米悖论的解释。 最简单的一种:拉单子，就是把与案子有关的问题列一个单子，单子上的问题越多越好，八竿子刚打着的全列上去，把关键要问的混在其中，然后一条一条地问，记下审讯对象的回答，然后再从头问一遍，也记下回答，必要时可以问很多遍，最后对照这几次的记录，如果对象说假话，那相应的问题每次的回答是有出入的。 这一招叫黑白脸。这种审讯需要多人配合，稍复杂一些。首先是黑脸出来，一般是两人以上，他们对你很凶，可能动文的也可能动武的，反正很凶。这也是有策略的，不仅仅是让你产生恐惧，更重要的是激发你的孤独感，让你感觉全世界除了想吃你的狼就再没别的了。这时白脸出来了，肯定只有一个人，而且肯定长得慈眉善目，他制止了黑脸们，说你也是一个人，有人的权利，你们怎么能这样对待他?黑脸们说你走开，不要影响工作。白脸坚持，说你们真的不能这样做!黑脸们说早就知道你干不了这个，干不了走人啊!白脸用身体护住你说:我要保护他的权利，保护法律的公正!黑脸儿们说你等着，明天你就滚蛋了!然后气哼哼地走了。就剩你们俩时，白脸会替你擦擦汗呀血呀的，说别怕，有我在，他们不敢把你怎么样，不管我落到什么下场，定会维护你的权利!你不想说就别说了，你有权沉默!接下来的事儿你就能想得出了，他这时成了你在这个世界上唯一的最亲的人，在他进一步的利透下，你是不会沉默的…这一招对付知识分子最管用，但与前面拉单子不同，你一且知道了，它就失效了。 注意一点:如果你的城府真够深，那就不能显示出任何城府来，和电影上看到的不同，真正老谋深算的人不是每天阴着脸装那副鸟样儿，他们压根儿就不显出用脑子的样儿来，看上去都挺随和挺单纯的，有人显得俗里俗气婆婆妈妈，有人则大大咧咧没个正经……关键的关键是让别人别把你当回事，让他们看不起你轻视你，觉得你碍不了事，像墙角的扫把一样可有可无，最高的境界是让他们根本注意不到你，就当你不存在，直到他们死在你手里前的一刹那才回过味来。” 考题:如何用大理石做一张床，使人躺上去感觉像席梦思一样柔软?答案是把大理石表面挖出一个与人的身体背部一模一样形状的坑，躺到坑里，压强均匀分布，感觉就十分柔软了。 此即关于外星文明的费米悖论: 从理论上讲，人类能用100万年时间飞往银河系的各个星球，那么，外星人只要比人类早进化100万年，现在就应该来到地球了。这个悖论之所以具有说服力，是因为它是基于银河系的两个事实: 一、银河系非常古老，己有约100亿年的年龄;二、银河系的直径只有大约10万光年。所以，即使外星人只以光速的千分之一在太空旅行，他们也只需1亿年左右时间就可横穿银河系一一这个时间远远短于银河系的年龄。如果真存在外星人的话，按这个道理他们早该到达太阳系了。 自由女神像基座上的埃玛・拉扎勒斯的诗原文为:把你们疲惫的人，你们贫穷的人/你们渴望呼吸自由空气的挤在一堆的人都给我/把那些无家可归、饱经风浪的人都送来/在这金色的大门旁，我要为他们把灯举起。 “射手”假说:有一名神枪手，在一个靶子上每隔十厘米打一个洞。设想这个靶子的平面上生活着一种二维智能生物，它们中的科学家在对自己的宇宙进行观察后，发现了一个伟大的定律:“宇宙每隔十厘米，必然会有一个洞。”它们把这个神枪手一时兴起的随意行为，看成了自己宇宙中的铁律。“农场主假说”则有一层令人不安的恐怖色彩:一个农场里有一群火鸡，农场主每天中午十一点来给它们喂食。火鸡中的一名科学家观察这个现象，一直观察了近一年都没有例外，于是它也发现了自己字宙中的伟大定律:“每天上午十ー点，就有食物降临。”它在感恩节早晨向火鸡们公布了这个定律，但这天上年十一点食物没有降临，农场主进来把它们都捉去杀了。]]></content>
      <categories>
        <category>Book事务所</category>
      </categories>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[thinking]]></title>
    <url>%2F2019%2F06%2F16%2Fthinking%2F</url>
    <content type="text"><![CDATA[三问刻意联系法 每学一个新知识的时候，都问自己三个问题： 这个知识可以放在知识结构的哪个地方？ 这个知识和哪些旧知识可以连接？（刚开始练习的时候想一个，后面随着知识量的增大，可以逼自己想三个，然后五个。。。） eg: 当我在心理学的书上看到“马太效应”这个知识点时，我发现它和经济学里的“复利增长”很像，也和系统动力学里的“增强回路”有关，还很像数学里的“指数型增长”，于是，我在我的知识系统里，把它们连接起来。 这个知识可以用在哪里？（刚开始练习的时候想三个，后面随着知识量的增大，可以逼自己想五个，然后十个。。。） 这个方法刚开始的时候很累，而且很慢，但是磨刀不误砍柴工，当你形成习惯以后，你每学一个新知识，都会发现知识系统里有好多知识，在向它招手。]]></content>
      <categories>
        <category>Think事务所</category>
      </categories>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Rule]]></title>
    <url>%2F2019%2F06%2F16%2Fthink%2F</url>
    <content type="text"><![CDATA[“遇到规矩别忙着执行，好好想想这个规定是谁定的。” 过去我听到有什么规矩，不管是明规则潜规则，第一反应都是服从，然后努力做到让自己符合规则，却很少去想规则本身的问题 而一位老司机这一句话点醒了我，以后我每次遇到那些所谓的“规则”，都会细致的拆解一下，搞清楚这个规则是谁定的，背后目的是什么，然后我发现自己就像开了挂一样 举个恋爱中的小规则：女孩子都偏向喜欢年龄比自己大的男生，经济条件比较好的男生，当然了，还有帅哥 有段时间我的小兄弟喜欢上了自己活动认识的一位小姐姐，小姐姐先他两年工作，现在已经是一位项目经理，而小兄弟还是一个初出茅庐的大学生 我的小兄弟绝望的对我说，果老哥，我怕是完犊子了，小姐姐不会看上我的，我说不着急，跟我好好想一想，这个择偶规则背后的目的和逻辑是什么？ 年龄大一点——阅历丰富， 成熟稳重——能够更加体贴，更少情绪化，照顾女孩子的情绪，进行有效关心 经济条件好——能够给女生提供更优质的生活——让女孩子更有安全感 帅哥——这个那无需多言了，你要是非要抓核心需求，那就归结成带出去有面子或者看着顺眼吧…… 那你虽然表面看起来都不符合，但是真的没救了嘛？no no no 你的思想程度比同龄人要深刻，而且一直跟着我从大学开始搞事情，接触过的人和事一点儿都不比小姐姐少，所以阅历你过关，你只需要在接触中展现出来你的思考见解，然后多关心小姐姐，留心她的生活点滴，那么成熟＋有效关心get√ 虽然你经济条件还没起步，但是你可以展示你的上进心，让人觉得你有潜力，未来一定很不错，虽然不是绩优股，但是咱当一个潜力股，那么安全感get√ 多拾掇拾掇自己，多接触一下小姐姐，增加见面频率，混脸熟，人是越脸熟越忽略相貌看内涵，而且你本身虽说不帅也不丑，那么看着舒服get√ 所以你怕什么？去吧！ 结果三个月之后，我的小兄弟抱得美人归，现在已经在订婚了 再举一个例子，过去的老板说以后上下班必须打卡，然后每次开会要有会议记录，原来能直接沟通的事情要改成和项目负责人交流汇报才能和具体人员沟通。 当时规定一出，员工们都嘀咕说有毒啊，一个小公司这么费劲干嘛，还是以前舒服 但是我想了想，老板这么做的目的，肯定是希望原来随意的办公模式改变，更加职业化专业化，说明我们公司已经度过了最开始那段野蛮生长自由发挥的阶段了。 做事需要更严格和规范 那以后和老板汇报工作，虽然他不说，但是我都会做成很规范的报告形式，按照专业的模板进行分析和总结，而且还专门学习了ppt的制作，力求汇报时体现出规范和严谨 果然，老板很快发现了我，开始让我接手一些项目。 然后遇到事情也开始主动找我讨论，没多长时间，我就干到了那家公司的销售总监 所以你看，遇到规矩时，别着急去遵守，也别着急去不满，任何规矩的制定，背后都体现了制定者的内心需求 而透过条条框框的规矩，直面制定者内心的想法，能够更加准确的满足制定者的需求，让制定者满意 所以我现在遇到什么规则，都习惯性的问自己几句： 这个规则是谁定的？为什么要这么定？制定者的身份是什么？ 制定规矩想要达到什么目的？这些目的反应了什么需求？ 这个规则会触碰哪些人的利益？又有哪些空子可钻？是不是这个规则我必须遵守？如果不遵守，我需要做些什么？ 在执行规则前，先好好的读读规则，你会突然发现有不少新的想法 规则背后隐藏的东西，是一个个人心]]></content>
      <categories>
        <category>Think事务所</category>
      </categories>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[barbecue]]></title>
    <url>%2F2019%2F06%2F16%2Fbarbecue%2F</url>
    <content type="text"><![CDATA[锡纸烧烤防止食物粘烤盘，第二是防止食物粘上脏东西，第三是方便刷烤盘，第四是有的食物烤制的时候有调料，馅料等怕散掉了用锡纸包上，第五是防止水分流失，保持鲜嫩。 烧烤的时候，不要忘记在食物串上涂抹少许油，并不时翻动食物。这样烤出来的食物味道更香，也不易烤糊。食物熟的时候，涂抹自己喜爱的酱类，加入调料。 烧烤的时候经常遇到的一个问题是烤的过快和过热，经常把表面烤糊，里面还不一定熟。很多情况下，低温慢烤会更好。但是最好的方式是开始的时候低温慢烤，等食物内部接近理想温度之后高温快烤，从而可以让表面发生 Maillard Reaction（美拉德反应）和Caramelization（焦糖化反应应）。这个非常重要的技巧有个专用名词 reverse sear 什么时候高温快烤？ 肉越薄，越适合用用高温 什么时候低温慢烤？ 厚一些的肉或者蔬菜菜需要低温慢烤。否则高温快烤即使碳化了表面，里面也不会熟。肉里面含有大量的水（超过70％），而水又不是好的传热体，因此热量进入食物尤其是肉的内部其实很慢。 材料：刷子，锡纸，孜然粉，辣椒粉，烧烤汁，沙茶，油，鸡翅，热狗，火腿，金针菇，韭菜，茄子配蒜头，锅菜，鱼豆腐，鱼丸，卷章。 饮料: 王老吉，橙汁]]></content>
      <categories>
        <category>Life事务所</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tourism-preparation]]></title>
    <url>%2F2019%2F06%2F16%2Ftourism%2F</url>
    <content type="text"><![CDATA[制定活动方案 活动目的 活动地点 活动时间 活动参与人员 活动流程（时间/活动/备注/预算价格） 出行方式 物资准备 eg: 去海边游泳 经费预估（项目/预算资金/备注）]]></content>
      <categories>
        <category>Life事务所</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机是怎样跑起来的]]></title>
    <url>%2F2019%2F06%2F16%2Fbook-3%2F</url>
    <content type="text"><![CDATA[计算机三大原则 计算机是执行输入，运算，输出的机器 程序是指令和数据的集合 计算机的处理方式有时与人们的思维习惯不同 【有关.NET的说明之一】微软公司率先提出了作为新一代互联网平台的.NET技术。作为.NET核心的XML Web服务使用通用技术SOAP、XML，促使企业间的计算机协同工作。 【有关.NET的说明之二】计算机是执行程序的机器。程序是指令和数据的集合。为了使互联网上相互连接的计算机能通过程序协同工作，微软公司采用了SOAP以及XML规范。SOAP是关于调用指令的规范，XML则是定义数据格式的规范。只要定义出了指令和数据的规范，装有符合规范的程序的计算机自然就可以相互协作了。所谓计算机的协同工作指的是，输入到一台计算机中的数据，可以通过互联网传送到与这台计算机相连的其他计算机上执行运算，运算所输出的结果再返回给这台计算机。像这样部署在其他计算机上能执行某种运算的程序就叫作XML Web服务。 UML: Unified Modeling Language 建模是在为面向对象编程做设计 DMBS: Database Management System HTML是给人看的，XML是给计算机看的 数据库系统分为：“独立型系统”，“文件共享型系统”，“客户端/服务器系统”，“Web系统” 对数据库的操作称为CRUD。即：记录的插入（CREATE）、获取（REFER）、更新（UPDATE）、删除（DELETE） 框架由两部分构成 负责安全执行程序的“执行引擎” 作为程序组件集合的“类库” 名称 数据结构的特征 栈 把数据像小山一样堆积起来 队列 把数据排成一队 链表 可以任意地改变数据的排列顺序 二叉树 把数据分成两路排列 电阻颜色代码的谐音助记口诀 数字 颜色 谐音助记口诀 0 黑 黑灵（零）芝 1 棕 粽（棕）子叶 2 红 红孩儿（二） 3 橙 三乘（橙）轿 4 黄 黄丝（四）带 5 绿 五缕（绿）烟 6 蓝 蓝琉（六）璃 7 紫 钟子（紫）期（七） 8 灰 灰八哥 9 白 摆（白）酒（九）宴 每隔1米就任意放1件物品。请找出这些物品中有没有苹果。 诸位每前进1米就要捡起地上的物品，检查是否拿到了革果，同时还要检查有没有到达悬崖的边缘(不检查的话就有可能掉到海里)也就是说要对这两种检查反复若干次。 使用了哨兵以后，就要先把起点挪到距悬崖边缘101米的地方，再在悬崖的边缘放置一个苹果，这个苹果就是哨兵。通过放置哨兵，诸位就一定能找到苹果了。每前进1米时只需检查捡到的物品是不是苹果就可以了。发现是苹果以后，只需站在原地再检查一步开外的情况。如果还没有到达悬星边缘，就意味着找到了真正要找的苹果。已经达到了悬崖边缘，则说明现在手中的苹果是哨兵，而没有找到真正要找的苹果。 一些主要的典型算法是必须要掌握的：辗转相除法（求最大公约数，求最小公倍数就用两者相乘除以最大公约数）、埃拉托斯特尼筛法（求某个数是否是素数，直接直觉的从2除到该数的平方根即可）、查找搜索的顺序、二分、哈希，排序的冒泡、快排；解决同一个问题可能有多种算法，而其中执行速度快的、占用空间少的算法当然更为优秀，要善于利用编程技巧（如哨兵）、数字规律（公式or特殊规律）等来优化算法，减少执行时间；善于使用流程图or伪代码先把算法写出来，想清楚之后再开始编码。]]></content>
      <categories>
        <category>Book事务所</category>
      </categories>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序是怎样跑起来的]]></title>
    <url>%2F2019%2F06%2F16%2Fbook-2%2F</url>
    <content type="text"><![CDATA[程序可以根据功能的不同分为操作系统和应用。 把所有游戏共同的功能集合起来做成一个独立的程序，这个程序就称为操作系统。而像游戏的规则这种各游戏独有的程序，就是应用。 cpu的内部由寄存器，控制器，运算器和时钟四个部分构成，各部分之间由电流信号相互连通 汇编语言 &gt; 机器语言 汇编 机器语言 &gt; 汇编语言 反汇编 1.一般所说的程序，臂如运动会、音乐会的程序等，指的是“行事的先后次序”。计算机程序也是一样的道理。 2.程序是指令和数据的组合体。例如，C语言“ printf(＂你好＂)；”这个简单的程序中，pinf是指令，”你好”是数据。 3.CPU能够直接识别和执行的只有机器语言。使用C、Java等语言编写的程序，最后都会转化成机器语言。 4.硬盘和磁盘等媒介上保存的程序被复制到内存后才能运行。 5.内存中保存命令和数据的场所，通过地址来标记和指定。地址由整数值表示。 6.计算机的构成元件中，根据程序的指令来进行数据运算，并控制整个计算机的设备称作CPU。大家熟知的奔腾( Pentium)就是CPU的一种 类型 功能 数据转送指令 寄存器和内存、内存和内存、寄存器和外围设备之间的数据读写操作 运算指令 用累加寄存器执行算术运算、逻辑运算、比较运算和移位运算 跳转指令 实现条件分支、循环、强制跳转等 call/return指令 函数的调用/返回调用前的地址 栈和队列的区别在于数据出入的顺序是不同的。在对内存数据进行读写时，用的是LIFO( Last Input First Ou，后入先出)方式，而队列用的则是FIFO( First Input First Out，先入先出)方式。如果我们在内存中预留出钱和队列所需要的空间，并确定好写入和读出的顺序，就不用再指定地址和索引了。 二叉查找树指的是从节点分成两个叉的树状数据结构 RLE算法 数据的值×循环次数 AAABB A3B2 哈夫曼算法 摩尔斯电码 哈夫曼树 不同的CPU能解释的机器语言的种类也是不同的 Windows应用程序的本地代码，通常是EXE文件及DLL文件等形式 机器语言的程序称为本地代码 C语言等编写的程序称为源代码 .c 源文件 编译—— .obj 目标文件(本地代码) 链接—— .exe (本地代码) .lib 库文件是把多个目标文件集成保存到一个文件中的形式 汇编语言指令的语法结构是操作码+操作数 栈是存储临时数据的区域 函数的参数是通过栈来传递，返回值是通过寄存器来返回的 栈-干草堆 队列-排队买票 环形缓冲区 数码相机中经常用到的JPEG格式文件，有3种压缩方式 (1)把构成图像的点阵的颜色信息由RGB(红色、绿色、蓝色)形式转化成 Ycbcr(亮度、蓝色色度、红色色度)形式。我们知道，人眼对亮度很敏感，但对颜色的交化却有些迟。国此，人眼比较敏感的亮度Y就是一个很重要的参数，而表示顺色的Cb、Cr则没有那么重要。于是我们就可以通过减少Cb和Cr的信息间距来缩小图像数据的大小。 (2)将每个点的色素变化看作是波形的信号变化，进行博里叶变换。傅里叶变是指将波形按照频率分量进行分解。照片等图像文件的特点是低频率(柔和 的颜色变化)的部分较多，高频率(强烈的的颜色变化)的部分较少。因此，这里我们就可以把高频率的部分剪切掉。这样一来，图像数据也就会缩小。虽 然剪切掉了高频率部分，但人眼分辨不出什么差别。不过，如果是用 Windows画笔描绘的简单图形，其中颜色变化强烈的部分就会出现模现象。大家不坊使用 Windows画笔做一个圆形或者四方形的图形，并将其保存成JPEG格式。然后再打开这个JPEG文件，你就会发现颜色变化强烈的部分变模糊了。 (3)最后，将已经瘦身的图像数据通过哈夫曼算法进行压缩。这样就可以使像数据进一步缩小。 1.应用的运行环境通常是用类似于 Windows(OS)和AT兼容机(硬件)这样的OS和硬件的种类来表示的。 2.不同的硬件种类需要不同的操作系统。 3.应用是为了在特定操作系统上运行而作成的。 6.只要分别为各个环境安装专用的Java虚拟机，同样的字节代码,就能在各种环境下运行了。 5.仅包含 Windows的DL文件中存储的函数信息的文件称为什么? 库文件 6.在程序运行时，用来动态申请分配的数据和对象的内存区域形式称为什么? 导入库 A:编译器是在运行前对所有源代码进行解释处理的。而解释器则是在运行时对源代码的内容一行一行地进行解释处理的。 o:“分割编译”指的是什么? A:将整个程序分为多个源代码来编写，然后分别进行编译，最后链接成一个EXE文件。这样每个源代码都相对变短，便于程序管理。 o:“＂Bud”指的是什么? A:根据开发工具种类的不同，有的编译器可以通过选择“Buld”菜单来生成EXE文件。这种情况下，Buid指的是连续执行编译和链接 Q:使用DLL文件的好处是什么? A:DLL文件中的函数可以被多个程序共用。因此，借助该功能可以节约内存和磁盘。 0:不链接导入库的话就无法调用DLL文件中的函数吗? A:通过使用 Loadl ibrary0及 Getprocaddress0这些API，即使不链接导入库，也可以在程序运行时调用DLL文件中的函数，不过使用导入库更简单一些 0:“叠加链接”这个术语指的是什么 A:将不会同时执行的函数，交替加载到同一个地址中运行。通过使用“叠加链接器”这一特殊的链接器即可实现。在计算机中配置的内存容量不多的MS-DOS时代，经常使用叠加链接。 0:和内存管理相关的“垃圾回收机制”指的是什么呢? A:垃圾回收机制( garbage collection)指的是对处理完毕后不再需要的堆内存空间的数据和对象“进行清理，释放它们所使用的内存空间，这里把不需要的数据比喻为了垃圾。进行该处理时，C语言用的是free()函数，C++用的是 delete运算符。在C++的基础上开发出来的Java及C＃这些编程语言中，程序运行环境会自动进行垃极回收。这样就可以免由于程序员的疏忽(忘了记述内存的释放处理)而造成内存泄露了 1．汇编语言是通过利用助记符来记述程序的。 2．使用汇编器这个工具来进行汇编。 3．通过反汇编，得到人们可以理解的代码。 4．asm是 assembler（汇编器）的略写。 5．在高级编程语言的源代码中，即使指令和数据在编写时是分散的，编译后也会在段定义中集合汇总起来。大家看过汇编语言的源代码后，就会清楚了。 6．在汇编语言中，通过跳转指令，可以实现循环和条件分支。 1.在x86系列CPU用的汇编语言中，通过IN指今来实现IO输入，OUT指令来实现IO输出。 2用来实现计算机主机和外围设备输入输出交互的IC称为IO控制器或简称为IO 3.所有连接到计算机的外围设备都会分配一个IO地址编号 4.RQ指的是用来执行硬件中断请求的编号。 5.DMA指的是，不经过CPU中介处理，外围设备直接同计算机的主内存迎行数据传输 6、像磁盘这样用来处理大量数据的外围设备都具有DMA功能 ①计算机模拟指的是利用计算机模拟实际试验的方式。经常被用于建筑物的耐震实验等实际难以进行的实验中。使用随机数的计算机模拟有时也称为 “蒙特卡洛法”，来源于因赌博而闻各的城市一一蒙特卡洛。 ②随机数色子的各面上都标有1～20(或1～10每两个面为同一个数值)的数值。晃动随机数色子后，就可以得到1～20(或1～10)的一个随机数 \3. 除了线性同余法以外，还有其他获取伪随机数的方法。如可以获得更接近真实随机数”的“乘同余法”、“M系法”以及能够快速生成随机数的Knuth减算法”等]]></content>
      <categories>
        <category>Book事务所</category>
      </categories>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络是怎样连接的]]></title>
    <url>%2F2019%2F06%2F16%2Fbook-1%2F</url>
    <content type="text"><![CDATA[第1章 浏览器生成消息浏览器的第一步工作就是对URL进行解析 1条请求消息中只能写1个URI。如果需要获取多个文件，必须对每个文件单独发送1条请求。 IP地址的主机号 全0: 表示整个子网 全1: 表示向子网上所有设备发送包，即“广播” Socket库是用于调用网络功能的程序组件集合。 根据域名查询IP地址时，浏览器会使用Socket库中的解析器 DNS服务器会从域名与IP地址的对照表中查找相应的记录，并返回IP地址 向操作系统内部的协议栈发出委托时，需要按照指定的顺序来调用Socket库中的程序组件 应用程序是通过“描述符”这一类似号码牌的东西来识别套接字的 描述符: 应用程序用来识别套接字的机制 IP地址和端口号: 客户端和服务器之间用来识别对方套接字的机制 第2章 用电信号传输TCP/IP数据浏览器，邮件等一般应用程序收发数据时用TCP； DNS查询等收发较短的控制数据时用UDP 协议栈是根据套接字中记录的控制信息来工作的 创建套接字时，首先分配一个套接字所需的内存空间，然后向其中写入初始状态 通信操作中使用的控制信息分为两类。 \1. 头部中记录的信息 \2. 套接字(协议栈中的内存空间)中记录的信息 连接操作的第一步是在TCP模块处创建表示连接控制信息的头部 通过TCP头部中的发送方和接收方端口号可以找到要连接的套接字 MTU: 一个网络包的最大长度，以太网中一般为1500字节 MSS: 除去头部之后，一个网络包所能容纳的TCP数据的最大长度 通过序号和ACK号可以确认接收方是否收到了网络包 IP模块负责添加如下两个头部。 \1. MAC头部: 以太网用的头部，包含MAC头部 2 IP头部: IP用的头部，包含IP地址 IP头部的“接收方IP地址”填写通信对象的IP地址 发送方IP地址需要判断发送所使用的网卡，并填写该网卡的IP地址 IP模块根据路由表Gateway栏的内容判断应该把包发送给谁 查询MAC地址需要使用ARP 网卡的ROM中保存着全世界唯一的MAC地址，这是在生产网卡时写入的 网卡保存的MAC地址会由网卡驱动程序读取并分配给MAC模块 网卡的MAC模块会生成通用信号，然后由PHY(MAU)模块转换成可在网线中传输的格式，并通过网线发送出去 第3章 从网线到网络设备集线器将信号发送给所以连接在它上面的线路 IP 是地址，有定位功能；MAC 是身份证，无 定位功能；CIDR 可以用来判断是不是本地人； IP 分公有的 IP 和私有的 IP。 DHCP 协议主要是用来给客户租用 IP 地址， 和房产中介很像，要商谈、签约、续租，广播 还不能“抢单”； DHCP 协议能给客户推荐“装修队”PXE，能 够安装操作系统，这个在云计算领域大有用处 。 交换机端口的MAC模块不具有MAC地址。 交换机根据MAC地址表查找MAC地址，然后将信号发送到相应的端口。 交换机的全双工模式可以同时发送和接收信号 路由器的各个端口都具有MAC地址和IP地址 广播地址(broadcast address)是一种特殊的地址，将广播地址设为接收方地址时，包会发送到网络中所有的设备。MAC地址中的FF:FF:FF:FF:FF:FF和IP地址中的255.255.255.255都是广播地址。 路由器根据“IP地址”判断转发目标 路由器会忽略主机号，只匹配网络号 路由表的子网掩码列只表示在匹配网络包目标地址时需要对比的比特数量 路由器的端口都具有MAC地址，只接收与自身地址匹配的包，遇到不匹配的包则直接丢弃 通过路由器转发的网络包，其接收方MAC地址为路由器端口的MAC地址 路由表中子网掩码为0.0.0.0的记录表示“默认路由” 路由器判断下一个转发目标的方法如下。 如果路由表的网关列内容为IP地址，则该地址就是下一个转发目标。如果路由表的网关列内容为空，则IP头部中的接收方IP地址就是下一个转发目标。 路由器也会使用ARP来查询下一个转发目标的MAC地址。 IP(路由器)负责将包送达通信对象这一整体过程，而其中将包传输到下一个路由器的过程则是由以太网(交换机)来负责的。 第4章 通过接入网进入互联网内部ADSL的线路费用包含在电话费中，光纤的线路费用包含在上网费中，因此光纤的上网费高，电话费便宜。 电信号和光信号传播的速度大体上相同，之所以电缆不如光纤通信速率高，是因为电信号在提升通信速率的同时，其衰减率也会提高(信号在传播过程中减弱，导致信号无法传到目的地。相对地，光信号本来的衰減率就很低，提高通信速率也并不会提高衰减率。此外，光纤还不受电磁噪声的影响，因此光纤能够进行高速通信。 互联网接入路由器会在网络包前面加上MAC头部，PPPoE头部，PPP头部总共三种头部，然后发送给ADSL Modem(PPPoE方式下) ADSL Modem 将包拆分成信元，并转换成电信号发送给分离器 DSLAM具有ATM接口，和后方路由器收发数据时使用的是原始网络包拆分后的ATM信元形式。 BAS负责将ATM信元还原成网络包并转发到互联网内部 PPPoE是将PPP消息装入以太网包进行传输的方式 互联网接入路由器通过PPPoE的发现机制查询BAS的MAC地址 BAS下发的TCP/IP参数会被配置到互联网接入路由器的BAS端的端口上，这样路由器就完成接入互联网的准备了 BAS在收到用户路由器发送的网络包之后，会去掉MAC头部和PPPoE头部，然后用隧道机制包发送给网络运营商的路由器 一对一连接的端口可以不分配IP地址，这种方式称为无编号。 PPPoA方式不添加MAC头部和PPPoE头部，而是直接将PPP消息包装入信元中。 还有一种DHCP方式，它不使用PPP，而是将以太网包直接转换成ADSL信号发送给DSLAM 网络包通过接入网之后，到达运营商POP的路由器 互联网内部使用BGP机制在运营商之间交换路由信息 私有地址的规则其实并不复杂，在内网中可用作私有地址的范围仅限以下这些。 10.0.0.0~10.255.255.255 172.16.0.0~172.31.255.255 192.168.0.0~192.168.255.255 第5章 服务器端的局域网中有什么玄机包过滤的方式的防火墙可根据接收方IP地址，发送方IP地址，接收方端口号，发送方端口号，控制位等信息来判断是否允许某个包通过 第6章 请求到达Web服务器，响应返回浏览器使用描述符来指代套接字的原因如下。 \1. 等待连接的套接字中没有客户端IP地址和端口号 \2. 使用描述符这一种信息比较简单 网卡的MAC模块将网络包从信号还原为数字信息，校验FCS并存入缓冲区 网卡驱动会根据MAC头部判断协议类型，并将包交给相应的协议栈 协议栈的IP模块会检查IP头部，1. 判断是不是发给自己的；2. 判断网络包是否经过分片；3. 将包转交给TCP模块或UDP模块 如果收到的是发起连接的包，则TCP模块会 1. 确认TCP头部的控制位SYN； 2. 检查接收方端口号； 3.为相应的等待连接套接字复制一个新的副本； 4. 记录发送方IP地址和端口号等信息 收到数据包时，TCP模块会 1.根据收到的包的发送方IP地址，发送方端口号，接收方IP地址，接收方端口号找到相对应的套接字； 2. 将数据拼合起来并保存在接收缓冲区中； 3. 向客户端返回ACK]]></content>
      <categories>
        <category>Book事务所</category>
      </categories>
      <tags>
        <tag>book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Second-hand car]]></title>
    <url>%2F2019%2F06%2F16%2FSecond-hand%20car%2F</url>
    <content type="text"><![CDATA[A：看一下零件磨损程度，比较新的话就收了吧，有一定程度的磨损的还能当面就问题搞搞价。 看前叉。压一压，看前叉润度，有无漏油情况，前叉有无磨损，一般前叉是比较容易被磕碰的。 看车架。车架上有无磕碰，需要注意的是五通下面、后下叉等不容易注意到的地方。 看变速系统。看后变速器最下面的那个小导轮，一般情况下，这个导轮是磨损最厉害的。要是这个导轮情况不错的话，这车子就蛮值得收的，相当于你用二手价买了一辆几乎全新的车子。 还有就是那其他小地方，手变是否灵活，蹬车的时候是否有异响，辐条有无换过新的，轮胎磨损情况等 看刹车磨片磨损程度，如果严重的话，刹车很容易坏 看车轮磨损程度 第一步: 问骑了多少年，有没有磨损 第二步: 问有多少档 第三步: 问是几速几寸的，什么牌 第四步: 问原价 山地车变速：上坡: 前小后大，下坡:相反]]></content>
      <categories>
        <category>Life事务所</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Rule]]></title>
    <url>%2F2019%2F06%2F16%2FRule%2F</url>
    <content type="text"><![CDATA[“遇到规矩别忙着执行，好好想想这个规定是谁定的。” 过去我听到有什么规矩，不管是明规则潜规则，第一反应都是服从，然后努力做到让自己符合规则，却很少去想规则本身的问题 而一位老司机这一句话点醒了我，以后我每次遇到那些所谓的“规则”，都会细致的拆解一下，搞清楚这个规则是谁定的，背后目的是什么，然后我发现自己就像开了挂一样 举个恋爱中的小规则：女孩子都偏向喜欢年龄比自己大的男生，经济条件比较好的男生，当然了，还有帅哥 有段时间我的小兄弟喜欢上了自己活动认识的一位小姐姐，小姐姐先他两年工作，现在已经是一位项目经理，而小兄弟还是一个初出茅庐的大学生 我的小兄弟绝望的对我说，果老哥，我怕是完犊子了，小姐姐不会看上我的，我说不着急，跟我好好想一想，这个择偶规则背后的目的和逻辑是什么？ 年龄大一点——阅历丰富， 成熟稳重——能够更加体贴，更少情绪化，照顾女孩子的情绪，进行有效关心 经济条件好——能够给女生提供更优质的生活——让女孩子更有安全感 帅哥——这个那无需多言了，你要是非要抓核心需求，那就归结成带出去有面子或者看着顺眼吧…… 那你虽然表面看起来都不符合，但是真的没救了嘛？no no no 你的思想程度比同龄人要深刻，而且一直跟着我从大学开始搞事情，接触过的人和事一点儿都不比小姐姐少，所以阅历你过关，你只需要在接触中展现出来你的思考见解，然后多关心小姐姐，留心她的生活点滴，那么成熟＋有效关心get√ 虽然你经济条件还没起步，但是你可以展示你的上进心，让人觉得你有潜力，未来一定很不错，虽然不是绩优股，但是咱当一个潜力股，那么安全感get√ 多拾掇拾掇自己，多接触一下小姐姐，增加见面频率，混脸熟，人是越脸熟越忽略相貌看内涵，而且你本身虽说不帅也不丑，那么看着舒服get√ 所以你怕什么？去吧！ 结果三个月之后，我的小兄弟抱得美人归，现在已经在订婚了 再举一个例子，过去的老板说以后上下班必须打卡，然后每次开会要有会议记录，原来能直接沟通的事情要改成和项目负责人交流汇报才能和具体人员沟通。 当时规定一出，员工们都嘀咕说有毒啊，一个小公司这么费劲干嘛，还是以前舒服 但是我想了想，老板这么做的目的，肯定是希望原来随意的办公模式改变，更加职业化专业化，说明我们公司已经度过了最开始那段野蛮生长自由发挥的阶段了。 做事需要更严格和规范 那以后和老板汇报工作，虽然他不说，但是我都会做成很规范的报告形式，按照专业的模板进行分析和总结，而且还专门学习了ppt的制作，力求汇报时体现出规范和严谨 果然，老板很快发现了我，开始让我接手一些项目。 然后遇到事情也开始主动找我讨论，没多长时间，我就干到了那家公司的销售总监 所以你看，遇到规矩时，别着急去遵守，也别着急去不满，任何规矩的制定，背后都体现了制定者的内心需求 而透过条条框框的规矩，直面制定者内心的想法，能够更加准确的满足制定者的需求，让制定者满意 所以我现在遇到什么规则，都习惯性的问自己几句： 1.这个规则是谁定的？为什么要这么定？制定者的身份是什么？ 2.制定规矩想要达到什么目的？这些目的反应了什么需求？ 3.这个规则会触碰哪些人的利益？又有哪些空子可钻？是不是这个规则我必须遵守？如果不遵守，我需要做些什么？ 在执行规则前，先好好的读读规则，你会突然发现有不少新的想法 规则背后隐藏的东西，是一个个人心]]></content>
      <categories>
        <category>Think事务所</category>
      </categories>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[电脑内存条]]></title>
    <url>%2F2019%2F06%2F16%2F%E7%94%B5%E8%84%91%E5%86%85%E5%AD%98%E6%9D%A1%2F</url>
    <content type="text"><![CDATA[可以下载CPU-Z来查看相关信息 使用命令提示符了解内存的详细情况。如果你想要知道更多关于内存的信息，如运行速度或每个组件的容量等，你可以使用命令提示符来获取更多细节信息。 从开始菜单中打开命令提示符。你也可以按下Win+R打开运行框，然后输入cmd来启动它。 输入wmic MEMORYCHIP get BankLabel,DeviceLocator,Capacity,Speed命令，按下回车键。接着会显示出几栏信息。 BankLabel一栏会告诉你内存条安装在哪个插槽内。 Capacity（容量）一栏会显示每个内存条的容量大小，以字节数来计量。 DeviceLocator（设备定位器）一栏是另一种内存安装位置的显示方式。 Speed（速度）一栏会告知你每个内存条的运行速度。 正确的内存类型 内存分为DDR2和DDR3、DDR4三种不同代内存，由于三种类型的DDR内存之间，从内存控制器到内存插槽都互不兼容。而且即使是一些在同时支持两种类型内存的主板上，两种规格的内存也不能同时工作，只能使用其中一种内存，所以大家在购买内存之前，一定仔细确定好自己的主板支持的内存类型。 然后就是内存频率，同样是DDR4内存，有几种频率的，常见的是2133MHZ和2400MHZ，工作频率越高性能越好。虽然有些主板只能工作在2133频率，但价格差不多的话还是频率高的性价比高，而且以后可以利用到更高的主板上。]]></content>
      <categories>
        <category>Computer</category>
      </categories>
      <tags>
        <tag>Computer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-10]]></title>
    <url>%2F2019%2F06%2F15%2FShare-10%2F</url>
    <content type="text"><![CDATA[Fun 蘑菇尸衣去世以后，主要有两种处理人体的方式：土葬和火葬。前者不环保，后者消耗能源。一家创业公司提出了一个更绿色的处理方式。他们发明了一种里面种植了蘑菇孢子的衣服，死者穿上以后，蘑菇孢子会不断分解人体的组织，转换成肥料。 Oddly Satisfying 一个视频项目，收集各种无限循环的短视频。 ABZ理论A计划，是一个当下你觉得值得你去持续投入，并获得部分产出和安全感的计划，好比一份你现在正在投入和从事的工作。B计划是那些当下看起来还不足以成为你职业，但你对其存有兴趣或长远看好，值得去长期投入和关注的事情。Z计划的意义就是用来应对你的职业生涯中的各种不确定性和风险。好比对我而言，假如我当前的A计划和B计划都失效，我也失业了，那么靠着银行账户上之前储备过的少量积蓄在家先捱上个半年就是我的Z计划。 摩尔斯电码 记住26个字母后，就可以进行简单的书面翻译练习。可以找泰戈尔的《飞鸟集》，随便找一条英文译成摩尔斯码，再对着摩尔斯码译成英文。这样英译码，码译英，译个十来条，26个字母基本上就不会忘了。 SAFE 这个项目在印度尼西亚婆罗州的热带雨林里面，放置了十几个录音设备，然后将每个小时录到的声音放到网上，让访问者听到每天不同时辰的大自然的声音。 路灯植物 麻省理工学院的科学家创造出一种发光植物，希望以后用植物替代路灯。科学家将一种含有荧光素的酶，包装成纳米粒子，然后将这种纳米粒子注入植物的叶子，一旦荧光素氧化，就有一部分能量以光的形式释放出来，从而达到发光的效果。 这种粒子的照明效果，可以用来阅读书籍，大约持续4个小时。下一步，研究人员会设法提高光亮，不仅让它可以用作街道照明，还可以用作室内照明，甚至是台灯。 Tool Darwin Mail 一个第三方的 GMail 的 Web 客户端。 Screen Record 一个浏览器里面的录屏工具，非常简单好用。 龙猫学术导航 一个外文期刊检索与下载的网站，里面有很多资源链接。类似网站还有”大木虫学术导航“。 Resource openbiox.org一个开源的生物信息学的中文社区，源码托管在 GitHub。 MOOC 课程搜索引擎该引擎可以搜索全世界的开放课程，目前包含1.2万门课程，里面也有中文课程。 量子算法课程微软与 Google 共同开设了一门量子算法课程，可以通过浏览器模拟的量子计算环境，学习量子算法 Essay 什么是暗网 针对新人的暗网基本知识，不涉及技术细节。 5G网速那么快，基站辐射会很大吗？ 5G 通信使用比 4G 更高的频率，需要的能量更大，这对基站和手机的辐射有何影响。这篇文章给出了很好的分析。 Picture 笔迹 技术有边界，魔鬼在细节。 友谊是一个静态累积的过程，但是我们的生活正变得越来越动态。 信和照片是最能留下时光痕迹的物品，电脑里虚拟的图像和文字最终会变成消失在宇宙洪荒的数据碎片]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[资源名词]]></title>
    <url>%2F2019%2F06%2F08%2Fresource%2F</url>
    <content type="text"><![CDATA[ed2k链接(俗称电驴) ed2k全称叫“eDonkey2000 network”，是一种文件共享网络，最初用于共享音乐、电影和软件。与多数文件共享网络一样，它是分布式的；文件基于P2P原理存放于用户的电脑上而不是存储于一个中枢服务器 BitTorrent(俗称BT种子) BitTorrent(简称BT)是一个文件分发协议，每个下载者在下载的同时不断向其他下载者上传已下载的数据。特点是下载的人越多，下载速度越快，原因在于每个下载者将已下载的数据提供给其他下载者下载，充分利用了用户的上载带宽。通过一定的策略保证上传速度越快，下载速度也越快。 magnet链接(俗称磁力链接) BT下载服务是需要一个tracker服务器来储存BT种子文件，但是MagNet URI协议是不一定需要tracker服务器的，原理类似于eD2k，但Magnet链接不仅限于eD2k Hash，而是可以使用其他的Hash，诸如SHA或MD5等 HashCode(哈希码) Hash码主要用于确保相同的文件在网络上具有的相同的唯一标识，即使这些文件储存在不同的地方或拥有不同的名字。它通过使用该文件的Hash函数（散列函数）来计算其校验和。举个例子:在你使用百度云/QQ群传文件/传视频的时候可能会出现瞬间传输完成的情况，这就是因为通过文件哈希码对比服务器上的文件，发现存在相同的哈希值，说明该文件已经被其他人上传过，所以会瞬间完成上传而不是重新上传。]]></content>
      <categories>
        <category>Computer</category>
      </categories>
      <tags>
        <tag>Computer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[魔方-职位]]></title>
    <url>%2F2019%2F06%2F01%2F%E9%AD%94%E6%96%B9-%E8%81%8C%E4%BD%8D%2F</url>
    <content type="text"><![CDATA[我的老同学开创了一个软件公司，富的流油。今天他到这个城市来后马上打电话给我：“还好吧？我到这里的大学招毕业生，要呆上五天，咱哥们趁这个机会好好聚一聚，我做东。” 既然他要做东， 我理所当然顺水推舟。 来到他下榻的宾馆，看见一个大学生模样的人站在他面前接受面试。我的老同学说：“我这里有个魔方，你能不能把它弄成六面六个颜色？”那个大学生拿着魔方，面有难色。 我的老同学看了看我，对大学生说：“如果你没有考虑好，可以把魔方拿回去考虑我直到星期五才走。”等那个大学生走了以后，我问老同学：“这是你独创的考题？” “咳！这个人有后台，我不好意思不要他，所以出个题考他，以便到时候安排个合适的职务。” “要是我，”我说：“会把魔方拆开，然后一个个安上去。”“如果他这样做就好了，这就说明他敢作敢为，就可以从事开拓市场方面的工作。” “那其他做法呢？”“如果他拿漆把六面刷出来，说明他很有创意，可以从事软件开发部的工作；如果他今天下午就把魔方拿回来，说明他非常聪明，领悟能力强，做我的助理最合适了；如果他星期三之前把魔方拿回来，说明他请教了人，也就是说他很有人缘，可以去客户服务部工作；如果在我走之前拿回来，说明他勤劳肯干，从事低级程序员的工作没问题；如果他最终拿回来说他还是不会，那说明他人很老实，可以从事保管或财物方面的工作；如果他拿不回来，那我就爱莫能助了。” 第二天晚上，我的老同学又请我吃饭。在饭桌上，我又问起魔方的事。这一回，老同学有些得意洋洋：“那个大学生我要定了，他今天早上把魔方还给了我，你猜怎么着？他新买了一个魔方！他还说‘你的魔方我扳来扳去都无法还原，所以，我新买了一个，比你那个更大、更灵活！’” “这说明什么？”我问。我的老同学压低了声音：“他绝对是做盗版的好材料！”]]></content>
      <categories>
        <category>默示录</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-9]]></title>
    <url>%2F2019%2F05%2F18%2FShare-9%2F</url>
    <content type="text"><![CDATA[Fun 停车场办公 创业者往往想要使用共享的办公空间，但是大城市的办公空间很贵。旧金山的一个创业者灵机一动，注册了 WePark 公司。他在旧金山的热门区域，选择若干个停车位，付出一整天的停车费，然后摆上桌椅，按小时卖给创业者。创业者就在停车位办公。 WePark 的优势在于价格，每小时收费 2.25美元。相比之下，WeWork 的办公空间，每天收费50美元加上每月会员费。 电路图符号解释 本文介绍基本的电路图符号的含义。 MuseNet 人工智能公司 OpenAI 开发的自动作曲系统，可以指定你想听的音乐家（比如肖邦、莫扎特），然后该系统就会使用10种乐器生成一段4分钟的音乐。现在，OpenAI 每天在网上直播音乐会，旋律都是人工智能生成的。 WebGL Fluid Simulation在浏览器中，实现流体流动效果。（有点像是抽烟时，吐烟的效果） Tool I love IMG 该网站提供各种在线的图像编辑工具，比如图像缩放、压缩、裁剪、水印等。 Motrix 一款桌面端下载工具，支持下载 HTTP、FTP、BT、磁力链、百度网盘等资源。 RemixIcon 一套免费高质量的开源图标库，目前有1500多枚图标，提供矢量图和字体图标文件，可用于商业用途。 Resource 开源世界旅行手册 命令行的艺术 计算机科学速成课 Microsoft MakeCode 可以给儿童使用的拖拽式编程体验 Essay 全程快捷键！硬核小哥超快配图1700页数学笔记，教你上手LaTeX+Inkscape 在浏览器地址栏输入一个URL后回车，背后会进行哪些技术步骤？ OAuth 2.0 的一个简单解释 Picture 笔迹 谎言分两种。关于过去的事实上的谎言以及关于未来的权利上的谎言。 然而，人们泛称为命运的事情却通常都是自己做出来的蠢事。 谁都无法制裁一件没有发生过的事。]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-8]]></title>
    <url>%2F2019%2F05%2F17%2FShare-8%2F</url>
    <content type="text"><![CDATA[Fun 辨色能力测试建议电脑打开，目的是将所有颜色排列成一个由红到紫的过渡，0分为满分。 切尔诺贝利实境游戏 两个乌克兰青年按照实景，建造了切尔诺贝利核电站废墟模型，包括住宅楼，酒店，音乐厅，游乐园和体育场等场景，然后开发了一个游戏《Isotopium：Chernobyl》。玩家可以通过互联网，控制一辆遥控小车，上面带有摄像头，在这个模型城市里面漫游，感觉跟在真实场景完全一样。 游戏的费用是每小时9美元，同时最多只能20人在线，玩家寻找隐藏在各个地点的能量球，来淘汰其他对手，获取游戏胜利。全球目前有62,615人注册参与游戏。 世界最大灵骨塔 台湾新北市，一座白色巨塔矗立在三芝区，外形呈六角形，顶层为宫殿式的望楼塔造型。楼高达二十层的巨塔在翠绿的山峦中尤其突出！这座建筑其实是一个多层式的骨灰盒大楼──龙岩真龙殿生命纪念馆。 发条短信就能拦截骚扰电话，这些实用的运营商指令值得收藏 本文将为你介绍一些实用的短信指令，希望可以帮助你在日常生活中少一点麻烦，多一点便利。 windows系统休眠 介绍windows系统中休眠HIBERNATE和睡眠SLEEP的区别我们常用的是睡眠SLEEP功能，就是电脑经过一定时间后，进入低功耗状态，工作态度保存在内存里，恢复时1-2秒就可以恢复原状态。休眠是把工作状态即所有内存信息写入硬盘，如有2-4G内存，即要写入2-4G的文件到硬盘，然后才能关机，开机恢复要读取2-4G的文件到内存，才能恢复原界面。从这里可以看出睡眠功能比休眠好很多，同样保存电脑当前状态，而且开机启动速度很快，所以在一般情况下完全可以删除休眠文件。 删除休眠文件: 以管理员运行CMD, POWERCFG -H OFF 恢复休眠功能: 以管理员运行CMD, POWERCFG -H on 傅立叶变换 Tool MikuTools - 工具集合 [北京市公安局推出的姓名查重网站，可以查询某个姓名在北京市有没有重名][(https://gaj.beijing.gov.cn/rkgl/reserve/checkNameSexNum)] kindle电子书分享网 Resource 猴子都能懂的git入门 物联网开发工程师视频教程 Medium 一个海外的写作阅读平台 47 个无版权素材网站收好，以后不怕视觉中国的律师函 Essay 控制梦境，做梦机原理和电路图解 我常用的4个备份工具 手把手教你安装Linux虚拟机 游戏开发的专业术语整理 Picture 笔迹 大都好物不坚牢，彩云易散琉璃脆。 知识点，时间线，逻辑面，维度体。 STEM:”Science, Technology, Engineering and Mathematics”]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-7]]></title>
    <url>%2F2019%2F05%2F11%2FShare-7%2F</url>
    <content type="text"><![CDATA[Fun 今日掘金 色域 购买显示设备或拍摄视频的时候，经常会遇到分辨率的术语，它们是什么意思呢？ 720p: 1280 x 720, 称为 HD（中文译为”高清”） 1080p: 1920 x 1080, 称为 FULL HD（中文称为全高清） 1440p: 2560 x 1440, 称为 QHD 或 Quad HD，即4倍的HD 2160p: 3840 x 2160, 称为 4K 4320p: 7680 x 4320, 称为 8K 算法 忘记行李箱密码的时候，只记得前两位是33，后两位忘记，于是3300,3301, 3302一直试：穷举 大姨妈有时候迟到或早来一两天：容错 分不清方向不知道路，先朝一个方向走，边走边看，后来发现这个方向是错的，返回原来的地方，朝另外一个方向走：回溯 我先把我今天的工作做好，别人的我先不管：贪心算法 给小朋友排队的时候：冒泡排序（许多人也会选择用快速排序，插入排序，再次申明：这个不适合人数多的情况，不然会乱掉） 各种心里推断题，1.你最近开心吗？A.开心，去第2题。2.不开心，去第三题，以此类推。这种类型的题目：有向图 看知乎评论的时候不是从上到下，而是从下到上，先看最新评论的：逆向排序 从A地到B地有N多条路可以走，查地图看那条路的距离最近：最短路径法 钥匙在书包的某个口袋里，首先和妈妈在不同的地方A和B找书包，找到书包了再和妈妈在书包里不同的口袋C和D找钥匙：并行（经指正，这条不属于二分法） 图像噪点噪点（noise）主要是指CCD（CMOS）将光线作为接收信号并输出的过程中所产生的图像中的粗糙部分，也指图像中不该出现的外来像素，通常由电子干扰产生。看起来就像图像被弄脏了，布满一些细小的糙点。平时拍摄的数码照片如果用个人电脑将拍摄到的高画质图像缩小以后再看的话，也许就注意不到。不过，如果将原图像放大，那么就会出现本来没有的颜色（假色），这种假色就是图像噪音。如图： VARVAR的全称为Video Assistant Referee，即视频助理裁判。其实，VAR包含了鹰眼（门线技术），所以VAR应该是视频助理裁判和VAR技术的总称。它的核心在于两个字：回放。只不过这种回放技术更专业，拥有更多角度和数据分析，捕捉到更精确的画面。 “鹰眼”系统最早出现在网球场，通过8-10个高速摄像机从不同角度同时捕捉网球飞行轨迹，得到基本数据。再通过电脑计算，将这些数据生成三维图像。最后利用即时成像技术，由大屏幕清晰地呈现出网球的运动路线及落点，从而判断球是否出界。 前几年，足球比赛也逐渐开始将鹰眼技术应用在门线上：利用14台高速摄像机向架设在球场顶部的数据间传送数码照片，经过对数据的分析再把结果传送到裁判所戴的特殊手表上，如果确定球过了门线，手表上就会显示“goal(进球)”。整个过程用时不足一秒。 Tool Markdown to PDF 学术搜索 北京地铁 Resource Programming Notes for Professionals books Git教程 一个简单的Windows下的socket程序 Essay 马同学高等数学 Windows内核主要是C写的, 有500多G 从阅读到复习，MarginNote 3 想要重塑你的学习方式 Picture 笔迹 时间可以伸缩和折叠，唯独不能倒退。你的鹤发或许是我的童颜，而我一次呼吸能抵过你此生的岁月 生命既哀亦美，知此足矣。 给时光以生命，而不是给生命以时光。]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Computer-basic]]></title>
    <url>%2F2019%2F04%2F30%2FComputer-basic%2F</url>
    <content type="text"><![CDATA[电脑硬件 电脑硬件主要包含：机箱，主板，总线，电源，硬盘，存储控制器，界面卡，可携储存装置，内置存储器，输入设备，输出设备, CPU风扇，蜂鸣器等 选购电脑最重要的参数包括：CPU、内存、硬盘、显卡配置。 CPU: 这个主要取决于频率和二级缓存，频率越高、二级缓存越大，速度越快，现在的CPU有三级缓存、四级缓存等，都影响相应速度。目前主流的CPU是Intel和AMD,买电脑时大多数人更倾向选择Intel Core系列的i3，i5，i7，可以根据自身电脑的使用场景选择。 内存: 内存的存取速度取决于接口、颗粒数量多少与储存大小（包括内存的接口，如：SDRAM133，DDR333，DDR2-533，DDR2-800,DDR3-1333），一般来说，内存越大，处理数据能力越强，速度就越快。 主板: 主要还是处理芯片，如：笔记本i965比i945芯片处理能力更强，i945比i910芯片在处理数据的能力又更强些，依此类推。 硬盘: 硬盘的转速（分：高速硬盘和低速硬盘，高速硬盘一般用在大型服务器中，如：10000转，15000转；低速硬盘用在一般电脑中，包括笔记本电脑），台式机电脑一般用7200转，笔记本电脑一般用5400转，这主要是考虑功耗和散热原因。 硬盘速度又因接口不同，速率不同，一般而言，分IDE和SATA（也就是常说的串口）接口，早前的硬盘多是IDE接口，相比之下，存取速度比SATA接口的要慢些。另一方面，目前趋势更倾向于读写很快的SSD固态硬盘，价格和容量将来也会分别降低和提高。 显卡：这项与运行超大程序软件的响应速度有着直接联系，如运行CAD2007，3DStudio、3DMAX等图形软件，一般来说显存越大越好。显卡除了硬件级别上的区分外，也有共享显存技术的存在，和一般自带显存芯片的不同，就是该“共享显存”技术，需要从内存读取显存，以处理相应程序的需要。或有人称之为：动态显存。这种技术更多用在笔记本电脑中。 电源 : 这个只要功率足够和稳定性好，稳定的电源是很重要的。 电脑快捷键技巧 win/Ctrl+Esc 打开开始菜单 win + M 最小化所有被打开的窗口 win + d 桌面 win + r 打开运行 win + e “我的电脑” win + u 工具管理 win + 左右 分屏 win + L 把电脑锁屏 win + i 打开设置 win + k 打开连接 win + 1和 Win + 2 按顺序打开相应程序 win + P 在显示器与投影间相互切换 win + shift + 左 移动当前窗口到左边的显示器上 win + shift + 右 移动当前窗口到右边的显示器上 win + shift + s 截屏 F1 请求帮助 F5 刷新 F2 重新命名所选项目 F10 激活当前程序菜单条 ctrl + o 打开 ctrl + w 关闭程序 ctrl + b 粗体 ctrl + u 下划线 ctrl + i 斜体 ctrl + y 恢复键 ctrl + ] 放大字体 ctrl + [ 缩小字体 ctrl + tab 在页面上的各框架中切换(加shift反向) ctrl + shift + Esc 打开任务管理器 ctrl + shift + N 新建文件夹 alt + F4 关闭项目退出程序 alt + 空格 打开快捷菜单 alt + enter 所选项目属性 alt + Esc 按照顺序切换 cmd calc 打开计算器 cmd systeminfo 用于显示关于计算机及其操作系统的详细配置信息 Win + Ctrl + D 创建虚拟桌面 Win + Ctrl + F4 关闭当前虚拟桌面 Win + Ctrl + ← 向左切换虚拟桌面 Win + Ctrl + → 向右切换虚拟桌面]]></content>
      <categories>
        <category>Computer</category>
      </categories>
      <tags>
        <tag>Computer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-6]]></title>
    <url>%2F2019%2F04%2F27%2FShare-6%2F</url>
    <content type="text"><![CDATA[Fun 这张人像照片是伪造的吗？ 现在的人像照片，已经无法确定真人还是假人。有人就收集了几十万张假人的照片，都是算法生成的，然后提供服务。你上传照片，系统返回长相相似的假人照片。 世界上最厚的流体和最久的实验 加拿大昆士兰大学的 Pitch Drop实验，是世界历时最久的实验，从1927年开始，到现在还没有结束。该实验由包含在玻璃漏斗中的黑色沥青组成，用来表明沥青实际上不是固体，而是一种非常粘稠的液体，是世界上最厚的流体，粘度约为水的1000亿倍。 沥青从玻璃漏斗里面，慢慢往下滴落。从1930年至今，一共滴下了9滴。最新的一滴是在2014年4月，预计第10滴将在2020年代的某个时候发生。 接听推销电话也能赚钱 英国一男子对于推销电话忍无可忍，注册了一个服务收费号码。这种号码要向拨入者收取服务费，常用于心理咨询之类的热线。该男子将这个号码，当作自己的联系电话，留作各种外部服务的联系电话。这个号码的成本是10英镑，如果有人拨打这个号码，会被收取每分钟10便士。据该男子说，两年里面获利了300英镑。 树莓派搭建空气质量监视器本文是树莓派教程，附有示例代码，演示如何搭建一个空气质量监视器（需要自购传感器）。 从海平面开始计算，地球最高点是珠穆朗玛峰。但是，地球是一个椭圆，赤道比南北极多出了几十公里。这导致从地心开始计算，最高点是厄瓜多尔的钦博拉索山（ Chimborazo，海拔6268米），这座山在赤道附近，比珠穆朗玛峰高出了2公里。钦博拉索山顶是地球上距离地心最远的地方。 Lambda School是美国的一家创业公司，主要业务是编程培训。它的收费模式很独特，学生可以缴纳2万美元学费，也可以不缴纳，直到培训后找到年薪5万美元以上的工作，用工资的17%抵扣学费，抵抗满3万美元为止。如果培训后5年内，都没有找到年薪5万美元以上的工作，可以不缴纳学费。 Tool 当鼠标移动到 VSCode 某一行中，就可以看到当前行的执行结果，类似于 debugger 当前行执行结果页。可以避免重复的敲 console.log 调试：https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode 基于浏览器的在线代理软件，可以直接访问 Google、YouTube 等网站，在线测试 ：https://github.com/EtherDream/jsproxy I love PDF 该网站提供各种免费的 PDF 在线工具，比如合并、拆分、压缩、Office 文件转 PDF、PDF 转图片等。 Resource 制作一个8位的电脑 FPS Sample This is a fully functional, first person multiplayer shooter game made inUnity and with full source and assets. Essay 加强 Linux 服务器安全的七个步骤自己架设 Linux 服务器的时候，按照本文的步骤，可以防止90%以上的攻击。 OpenCV-Python，计算机视觉开发利器 VR中如何设计虚拟商品和购物车的大小？ 笔迹 月色与雪色之间，你是第三种绝色。 – 余光中 选择平庸虽然稳妥，但绝无色彩。 – 余光中 下次你路过，人间已无我。 – 余光中 Picture]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[有趣的思维]]></title>
    <url>%2F2019%2F04%2F21%2F%E6%9C%89%E8%B6%A3%E7%9A%84%E6%80%9D%E7%BB%B4%2F</url>
    <content type="text"><![CDATA[离职 我一般离职的原因不外乎这几个，一、这个公司的业务我已经摸熟了；二、这个团队里常用的技术我已经学到手了；三、这个团队氛围不行；如果你仅仅是因为工资给的不和你心意，你大可不必离职，只要领导觉得你对公司对团队还有价值，你提一下适当的加薪，他肯定不会拒绝你的。 面试 “那要看贵公司平台的覆盖率是否能高于个人职业空间的自我膨胀率，当然最终还是要看员工付出回报率是否能体现线性分布。当个人的职业规划与公司的发展规划重合率低于30％的时候，公司恰恰应该回过来思考其规划的有效性，认真提高人才复用的叠加度，这样员工和企业才能更快、更好地在双赢的基础上合作得更加紧密。”女同学表情平静，非常淡定地回答了我。 法律 我很喜欢法律。我认为法律是人类发明过的最好的东西。你知道什么是人吗？在我眼里，人是神性和动物性的总和。就是它有你想象不到的好，更有你想象不到的恶，没有对错，这就是人。所以说，法律特别可爱。它不管你能好到哪儿，就限制你不能恶到没边儿。它清楚每个人心里都有那么点脏事儿，想想可以，但做出来不行。法律更像人性的低保，是一种强制性的修养。它不像宗教要求你眼高手低，就踏踏实实的告诉你，至少应该是什么样儿。又讲人情，又残酷无情。 车座 “如果对方单身，坐副驾驶席是上选，因为坐那里是对对方的尊敬；如果对方正在谈恋爱，别坐异性的车是上选，因为无论你坐哪儿都是暧昧的；如果对方已成家，先询问一下自己该坐哪儿是上选，因为私家车是家庭的延伸，每个家庭的主人都有不同的癖好，不要随随便便就把可能是主人位的位置给坐了。” 王者 ​ 王者中有将帅2种高手，将喜欢研究英雄的出装与CD时间差，还有什么技能什么铭文搭配，怎么在打的时候精确释放出来，即技术流高手，这样的人再差也不会低于星耀。 ​ 另外一种是帅，即意识流高手，知道什么时候做什么，选深容深度，全队怎么打野发育，怎么对线，怎么开团，如何攻塔，采取什么行动推水晶，怎么样拖后期，团的队友该做什么该事先在什么地方集合与撤退等等。 骂者众，思虑者少，献计者寡，担当者无几 一天，事长向：“進能说说公司目前存在什么題？”100多个人上来抢话筒！又问：“谁能说说背后的原因？”一半的人立马消失！再问：“谁能告诉我解决方案？”不到20人举手！那么有性想动手试一下？结果只剩下了五个人！ 教育 有位父亲他对女儿的教育方式比较独特，他从来没有辅导过女儿做功课什么的，就是每天回来跟女儿聊十分钟，只聊四个问题，就完成了他的家庭教育。这四个问题是： 1，学校有什么好事发生吗？ 2，今天你有什么好的表现？ 3，今天有什么好收获吗？ 4，有什么需要爸爸的帮助吗？ 5，有什么不懂的吗？（目标） 看似简单的问题背后其实蕴涵着丰富的含义: 第一个问题其实是在调查女儿的价值观，了解她心里面觉得哪些是好的，哪些是不好的； 第二个问题实际上是在激励女儿，增加她的自信心； 第三个问题是让她确认一下具体学到了什么； 第四个问题则有两层意思，一是我很关心你，二是学习是你自己的事。 就是这简简单单的四个问题，包含了很多关爱关怀在里面，事实上也证明很有效。 推销 最有效的五步推销法第一步，提出一个当今世界的变化趋势第二步，提出会有赢家和输家第三步，描绘美好的未来第四步，介绍克服困难、到达未来所需要的那个关键步骤第五步，提出证据，你能让这一切变成现实 面谈 1.第一印象，西装要七成新，增加亲和力2.投其所好3.带上一个愣头兵做陪衬背景4.旧笔记本和笔必不可少5.保持清新的口气6.把公司的优势，成功案例熟背于心，记住BOSS的手机号码 节奏哲学：轻松启动深度工作的方法就是将其转化成一种简单的常规习惯。这也是我目前正在使用的一种深度哲学，比如早晨5点到8点之间用于看书或者写书，8点到9点给孩子穿衣喂奶……每个时间段安排不一样的事情。 新闻记者哲学：随时可以插入深度工作，前一秒钟跟朋友聊天，下一秒中就开始码字写作，不管何时何地，总是能迅速转变角色 沉没成本：人们在决定是否去做一件事情的时候，不仅要看这件事对自己有没有好处，也要看过去是不是已经在这件事情上有过投入。 确认偏误：它是指人们会倾向于寻找能支持自己观点的证据，对支持自己观点的信息更加关注，对反对自己观点的信息进行排斥。 幸存偏误：你更容易看到成功，却看不到失败，所以你高估了成功的可能性。 马太效应：指强者愈强、弱者愈弱的现象。 长尾理论：那些原来不受到重视的销量小但种类多的产品或者服务由于总量巨大，累积起来的总收益超过主流产品。 复利效应，说得通俗一点，就是利滚利。]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-5]]></title>
    <url>%2F2019%2F04%2F21%2FShare-5%2F</url>
    <content type="text"><![CDATA[Fun 地球的年龄是45亿年 996.icu 事件的可视化（视频） 这段90秒的视频，帮你回顾 996.icu 事件的全过程。 什么是 Wayback Machine？ Wayback Machine 是一个庞大的网页数字档案库，为全世界的网页存档。该项目于1996年启动，目前保存了100亿个快照，数据量达到 30PB，另外还有 30PB 备份。 AutoPiano 自由钢琴，HTML5 技术开发的网页钢琴应用。可以自动演奏曲谱，同步显示琴键的位置。 BMI 指数 BMI 指数是体重除以身高，用来衡量一个人的肥胖程度。过高的 BMI，几乎必然导致心血管疾病，以及糖尿病等。下图纵轴是身高，横轴是体重，可以用来速查你的 BMI，以及肥胖程度。 为什么隔着玻璃晒太阳没有用？ 人体需要晒太阳，一个主要原因是，阳光里面的紫外线，可以让我们的身体产生维生素 D。这种维生素很难从食物中摄取，必须依靠阳光来合成。维生素 D 可以促进钙元素的吸收，保证骨骼健康。 所以，长期不见阳光会导致缺乏维生素 D，就会产生骨质疏松，以及其他一些问题。 虽然晒太阳是必要的，但是多晒却不行，多晒太阳会导致皮肤损伤。因为紫外线包含两种，一种是紫外线 A（又称UVA），它们渗透到皮肤深层，可能导致过早老化；另一种是紫外线 B（又称 UVB），导致晒伤发红。研究表明，主要是紫外线里面的 UVB，触发了维生素 D 的合成，而 UVA 并不会产生维生素 D。 一般来说，每天晒十分钟太阳，就能产生足够的维生素 D。但是，在室内或车内晒太阳是没用的，因为玻璃会阻挡 UVB 射线。你无法通过坐在阳光明媚的窗前增加维生素 D 水平，而且玻璃会让大部分 UVA 辐射通过，可能会对你的皮肤造成有害影响。 工具 VSCode 注释翻译插件, 在不干扰正常代码的情况下，方便快速阅读英文源码，安装地址： https://github.com/intellism/vscode-comment-translate The Fucking Github 是一个 Chrome 浏览器的扩展插件，可以用来很方便地查看、整理、搜索你已经 Star 过的项目和搜索 Github 上的项目：https://github.com/lvxianchao/the-fucking-github 油猴脚本 -直接下载百度网盘和“百度网盘分享”的文件，直链下载，超级加速；最后更新日期是 3 月 15 号：https://github.com/syhyz1990/baiduyun Linux 命令大全搜索工具，内容包含 Linux 命令手册、详解、学习、搜集，在线地址： https://github.com/jaywcjlove/linux-command Mathpix Snip 这是一个帮你快速把数学公式图片转成LaTeX代码的工具，你也可以直接在任务栏中修改代码，然后复制、粘贴，写出自己的公式，而且word是可以插入latex的。 资源 以下是我的应用场景，我不是专业的 UI 设计师，但避免不了经常要做公开性的演讲，在准备演讲材料时一般都会有几个基本的素材；我们需要根据素材的颜色来搭配整体的风格。https://colorhunt.co/ 深度学习 500 问，以“问答”的形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述：https://github.com/scutan90/DeepLearning-500-questions 文章 程序员绘画指北 军用版 HoloLens 曝光，戴上它有种打《使命召唤》的感觉 墨片 暗时间 新设备能够监测植物电信号：让你听到植物的“声音” 笔迹 不要想着学完某种熟练了以后再去做项目，也不要把一本书从头看到尾，这样过于浪费时间。 不要总是想着因人成事，也不要过于特立独行，该磨炼的时候不要躲避。 天道酬勤，不要总是为自己的懒惰而找借口。 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[OptiTrack与VR]]></title>
    <url>%2F2019%2F04%2F13%2FOptiTrack%E4%B8%8EVR%2F</url>
    <content type="text"><![CDATA[OptiTrack: 全身动作捕捉系统轻松创建台式应用动作捕捉工作室。 动捕在虚拟现实的应用 为实现人与虚拟环境及系统的交互，必须确定参与者的头部、手、身体等的位置与方向，准确地跟踪测量参与者的动作，将这些动作实时检测出来，以便将这些数据反馈给显示和控制系统。这些工作对虚拟现实系统是必不可少的，这也正是运动捕捉技术的研究内容。 VR动作捕捉的两种主流技术路径：光学方案与惯性方案动作捕捉技术的本质其就是把现实中人物的动作复制到虚拟人物身上。目前，存在着两种主流动作捕捉方案： 通过摄像机进行的动作捕捉技术，因为摄像机运用的是光学技术，所以摄像机动作捕捉方案也被称为光学动捕方案。 IMU（Inertial measurement unit）惯性传感器单元进行的动作捕捉，通常被称为惯性动捕方案。 HTCVive对OptiTrack，哪个方向是VR大空间多人定位技术的未来？目前在空间定位方向做的比较好的产品有哪些？其中之一便是所谓「VR三大头显」之一的HTC Vive，采用Lighthouse激光定位系统；另一家是以国内利亚德旗下子公司OptiTrack为代表的红外光学定位系统。 OptiTrack-虚拟现实空间定位解决方案 虚拟现实解决方案是利用高精度的OptiTrack三维运动捕捉系统，以每秒数百帧的拍摄速率捕捉人体、头盔显示器、交互设备上固定的特制的标记点，能够实时精确地构建出人体的骨骼信息或标记点三维位置信息，为虚拟现实应用领域的用户提供一套实时精确地获取人体动作数据和道具位置数据的先进工具。 为什么选择OptiTrack系统？ 清晰识别远在30米开外的标记点，最大捕捉空间可达900㎡ 850nm红外照明，即使在杂质光源干扰下，数据依然稳定精确 开源的实时数据流SDK，支持MotionBuilder\Unity\Unreal等 领先的三维重建和刚体解算精度，定位精度高达0.1mm 作为VR定位的主要解决方案，OptiTrack在应用中还存在哪些问题？]]></content>
      <categories>
        <category>VR</category>
      </categories>
      <tags>
        <tag>VR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-4]]></title>
    <url>%2F2019%2F04%2F13%2FShare-4%2F</url>
    <content type="text"><![CDATA[Fun whoiswhois 是用来查询域名的IP以及所有者等信息的传输协议。简单说，whois就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商）。通过whois来实现对域名信息的查询。 10241024是程序员自发认定的节日，表明10月24日，是程序员节，这是由于信息量的单位1GB=1024MB，1MB=1024KB，1kb=1024Byte，程序员们就把1024作为了一种表示自己身份的符号1024。另外，1024在计算机数学中，1024M=1GB，谐音可以理解为“一级棒” 除颤器 除颤器不是让心脏恢复跳动用的，如同字面之意，他只是让处于颤抖或是不正常跳动的心脏经由电流刺激而归零停止，再透过CPR（心脏复苏）使不正常心跳的情况恢复正常。 皮质醇贴片 斯坦福大学的科学家发明了一种皮肤贴片，可以实时测量汗液里面的皮质醇含量。一般来说，我们觉得压力很大的时候，皮质醇分泌就会增加。以前的测量方法都无法实时得到结果。现在我们可以实时知道人体的感受了，甚至可以找出人群里面最紧张的人，这种传感器为以后更有趣的发明奠定了基础。 长笛 众所周知，声波是靠空气振动产生也是靠空气来传播的，长笛发声所产生的音频是一种正弦波。声波振动越强传播得越远，听起来音量也越大。声波效应就好比将一个石块扔进平静的河中，人们能看见扩散荡漾的水波一样。这个原理可以与无线电波的传播途径非常类似（无线电波实际是一种频率高得我们听不见的高频振荡波），发报机上的天线要足够长电波才能远距离发射。而且：我们都能注意到，天线必须是导体，导电性能越好的金属发射效果越好。 手机号码的乾坤 移动：134、135、136、137、138、139、150、151、157(TD)、158、159、187、188 联通：130、131、132、152、155、156、185、186 电信：133、153、180、189、（1349卫通） Luca Lampariello他对语言的理解真的很棒，可以用另一种思维来看语言，有兴趣可以看看。 工具 Google搜索技巧 xx site:jianshu.com 含义：在指定网址中搜索内容xx。 xx filetype:pdf 含义：搜索与xx相关的pdf文件。 yy inurl:xx 含义：在包含xx的url中搜索内容yy。其中，xx可以是中文。 yy intitle:xx 含义：在包含xx的标题中搜索内容yy。 ColouriseSGColourise your black and white photos 一个为黑白照片着色的在线服务 dust3d开源的3D建模软件，适用于游戏开发，3D打印等。 资料 计算机科学自学指南 Visu Algo 各种算法的动态演示网站。 Introduction to Unity Scripting学习Unity中脚本编写的基础知识。 文章 写技术博客那点事 Linux Desktop Setup一个高级程序员介绍他的Linux桌面开发环境，以及他的各种软件选择。 什么是业余无线电如何在国内拥有一个个人的无线电台 SQL: One of the Most Valuable Skills 笔迹 我的方法是烂熟于心之后才写代码，完整，正确地编写一次 良心是我心里一个三角形的东西，我没有做坏事，它便静静不动，如果我干了坏事，它便转动起来，每个角都把我刺痛，如果我一直干坏事，每一个角都磨平了，也就不觉得痛了。 这个世界上除了我，其它人和事物都是来锻炼我的。这是现实的bug吗？ 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[痛]]></title>
    <url>%2F2019%2F04%2F13%2F%E7%97%9B%2F</url>
    <content type="text"><![CDATA[痛 作者：不详 一路上我们都没话说 我们眼睛里看的会不会是同一片云朵 岁月变成沙漠 喧哗变成寂寞 你是你 我是我 虽然可以彼此诉说忧伤 但是我们的痛苦却一直沉默]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[手机硬件]]></title>
    <url>%2F2019%2F04%2F06%2F%E6%89%8B%E6%9C%BA%E7%A1%AC%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[手机和电脑一样，都是由不同的零部件拼装而成。手机必备的零部件包括：CPU、RAM、ROM、GPU、屏幕、摄像头、电池、传感器、射频芯片等，具体描述如下： CPU 相当手机的大脑，核心的运算能力。 RAM 相当电脑的内存，也叫做运行内存简称运存。 ROM 一般等同于电脑硬盘，用于安装Android系统及存放照片、视频等文档，ROM越大，能存放的东西越多。 GPU 图像处理单元，等同于电脑的显卡。 屏幕 手机的屏幕材质有很多种，屏幕最重要的参数是分辨率。 摄像头 摄像头比较重要的有两个参数，像素数和光圈大小。 电池 电池最重要的参数是容量啦。 传感器 传感器就是手机的耳鼻眼手，能够采集周围环境的各种参数给CPU，使得手机具有真正智能的功能。 射频芯片 手机里边有很多跟射频相关的芯片，决定了手机通信手段的多少和通信能力的强弱。]]></content>
      <categories>
        <category>手机</category>
      </categories>
      <tags>
        <tag>手机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[岁月]]></title>
    <url>%2F2019%2F04%2F06%2F%E5%B2%81%E6%9C%88%2F</url>
    <content type="text"><![CDATA[《项脊轩志》 明朝历史人物归有光《项脊轩志》写到 “庭有枇把树，吾妻死之年所手植也，今已亭亭如盖矣。” “今伐之，为博小娘子一笑。” “小娘子一笑，恰似吾妻年少时。” “小娘子为吾与吾妻之女，今伐树，为小娘子造出嫁之物，愿伉俪情深，不输吾与吾妻。” 坐井观天 余记童稚时，尝览坐井观天一文。何为青蛙？拘于方寸之地者，余于心常不齿之。后方知世事不易，诸事皆难。乃知浩浩天地下茫茫苍生多为欲做蛙而不得者。此生愿为井中一蛙，不知天之浩渺，不识地之深厚。不问碌碌世事，不叹日月年华。井壁绿意盎然，春也。喜听凉风阵阵，夏也。身着落叶纷纷，秋也。飘落白雪点点，冬也。何谓光辉伟大？何谓声震寰宇？余不知矣。唯知于心中方寸之地，自得其乐，此生亦足矣。 丢番图墓志铭 他生命的六分之一是幸福的童年 再活十二之一，颊上长出了细细的胡须 又过了生命的七分之一才结婚 他过来五年的幸福生活，然后生下来一个儿子，可这孩子光辉灿烂的生命只有他父亲的一半 儿子死后，老人在悲痛中活了四年，结束了尘世的生涯]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[HTC VIVE - 3]]></title>
    <url>%2F2019%2F04%2F01%2Fvive3%2F</url>
    <content type="text"><![CDATA[预制体 [status] _Stats：这个是显示统计信息的一个组件（目前仅显示帧率和丢帧数）。它上面还有一个Camera，通过它将GUIText渲染到overlay的纹理上，通过overlay将文字信息显示出来。它的显示效果如下图 Overlay：这个控件的作用是是一个2D的UI界面叠加到场景上面显示出来 VIVE的交互实现方式Extras文件夹里面的SteamVR_GazeTracker是凝视的工具类，SteamVR_LaserPointer是射线的工具类 SteamVR_GazeTracker（凝视）凝视是一种在没有手柄等输入设备的情况下，可以通过眼睛盯着某个物体看来与物体进行交互的体验。我们只需要将个辅组类添加到我们想要凝视的物体上，比如菜单等，就可以实现凝视的功能。 凝视的原理实际上是从头盔的位置发出一条射线判断是否与物体相交来做选中或者交互的。而且因为凝视的精确度不高，所以没有做直接与物体相交，而是在物体的位置创建了一个平面，通过射线与平面相交的交点的位置与物体的距离来大概判断的。这个距离值是可以调的，缺省是0.15到0.4米之间就算选中了。 SteamVR_LaserPointer（激光束）SteamVR_LaserPointer的作用是从指定位置（通常是手柄）发出一条射线，它会将这条射线显示出来，然后也是判断这条视线与场景中的物体是否相交。与凝视不一样的是，它可以精确操作，所以不需要一个辅助平面。用法和凝视也不太一样，需要将这个组件添加发出射线的物体上，比如手柄。]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>VR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux日志系统]]></title>
    <url>%2F2019%2F03%2F29%2Flinux%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[常见的日志常见的日志一般存放在 /var/log 中，我们可以根据服务对象粗略的将日志分为两类 系统日志 应用日志 日志名称 记录信息 alternatives.log 系统的一些更新替代信息记录 apport.log 应用程序崩溃信息记录 apt/history.log 使用 apt-get 安装卸载软件的信息记录 apt/term.log 使用 apt-get 时的具体操作，如 package 的下载、打开等 auth.log 登录认证的信息记录 boot.log 系统启动时的程序服务的日志信息 btmp 错误的信息记录 Consolekit/history 控制台的信息记录 dist-upgrade dist-upgrade 这种更新方式的信息记录 dmesg 启动时，显示屏幕上内核缓冲信息,与硬件有关的信息 dpkg.log dpkg 命令管理包的日志。 faillog 用户登录失败详细信息记录 fontconfig.log 与字体配置有关的信息记录 kern.log 内核产生的信息记录，在自己修改内核时有很大帮助 lastlog 用户的最近信息记录 wtmp 登录信息的记录。wtmp可以找出谁正在进入系统，谁使用命令显示这个文件或信息等 syslog 系统信息记录 因为这两个日志并不是 ASCII 文件而是被编码成了二进制文件，所以我们并不能直接使用 less、cat、more 这样的工具来查看，这两个日志文件是 wtmp，lastlog，我们查看的方法是使用 last 与 lastlog 工具来提取其中的信息。 配置的日志syslog 是一个系统日志记录程序，在早期的大部分 Linux 发行版都是内置 syslog，让其作为系统的默认日志收集工具，虽然随着时代的进步与发展，syslog 已经年老体衰跟不上时代的需求，所以他被 rsyslog 所代替了，较新的 Ubuntu、Fedora 等等都是默认使用 rsyslog 作为系统的日志收集工具 rsyslog的全称是 rocket-fast system for log，它提供了高性能，高安全功能和模块化设计。rsyslog 能够接受各种各样的来源，将其输入，输出的结果到不同的目的地。rsyslog 可以提供超过每秒一百万条消息给目标文件。 这样能实时收集日志信息的程序是有其守护进程的，如 rsyslog 的守护进程便是 rsyslogd 首先我们来看 rsyslog 的配置文件是什么样子的，而 rsyslog 的配置文件有两个， 一个是 /etc/rsyslog.conf 一个是 /etc/rsyslog.d/50-default.conf。 第一个主要是配置的环境，也就是 rsyslog 加载什么模块，文件的所属者等；而第二个主要是配置的 Filter Conditions 123vim /etc/rsyslog.conf vim /etc/rsyslog.d/50-default.conf 转储的日志logrotate 程序是一个日志文件管理工具。用来把旧的日志文件删除，并创建新的日志文件。我们可以根据日志文件的大小，也可以根据其天数来切割日志、管理日志，这个过程又叫做“转储”。 大多数 Linux 发行版使用 logrotate 或 newsyslog 对日志进行管理。logrotate 程序不但可以压缩日志文件，减少存储空间，还可以将日志发送到指定 E-mail，方便管理员及时查看日志。 显而易见，logrotate 是基于 CRON 来运行的，其脚本是 /etc/cron.daily/logrotate；同时我们可以在 /etc/logrotate 中找到其配置文件 1cat /etc/logrotate.conf 1234567891011121314151617# see &quot;man logrotate&quot; for details //可以查看帮助文档# rotate log files weeklyweekly //设置每周转储一次(daily、weekly、monthly当然可以使用这些参数每天、星期，月 )# keep 4 weeks worth of backlogsrotate 4 //最多转储4次# create new (empty) log files after rotating old onescreate //当转储后文件不存在时创建它# uncomment this if you want your log files compressedcompress //通过gzip压缩方式转储（nocompress可以不压缩）# RPM packages drop log rotation information into this directoryinclude /etc/logrotate.d //其他日志文件的转储方式配置文件，包含在该目录下# no packages own wtmp -- we&apos;ll rotate them here/var/log/wtmp &#123; //设置/var/log/wtmp日志文件的转储参数 monthly //每月转储 create 0664 root utmp //转储后文件不存在时创建它，文件所有者为root，所属组为utmp，对应的权限为0664 rotate 1 //最多转储一次&#125;]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux进程管理]]></title>
    <url>%2F2019%2F03%2F29%2Flinux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[toptop 是一个在前台执行的程序，所以执行后便进入到这样的一个交互界面，正是因为交互界面我们才可以实时的获取到系统与进程的信息。 load假设我们的系统是单 CPU、单内核的，把它比喻成是一条单向的桥，把CPU任务比作汽车。 load = 0 的时候意味着这个桥上并没有车，cpu 没有任何任务； load &lt; 1 的时候意味着桥上的车并不多，一切都还是很流畅的，cpu 的任务并不多，资源还很充足； load = 1 的时候就意味着桥已经被车给占满了，没有一点空隙，cpu 的已经在全力工作了，所有的资源都被用完了，当然还好，这还在能力范围之内，只是有点慢而已； load &gt; 1 的时候就意味着不仅仅是桥上已经被车占满了，就连桥外都被占满了，cpu 已经在全力工作，系统资源的用完了，但是还是有大量的进程在请求，在等待。若是这个值大于２、大于３，表示进程请求超过 CPU 工作能力的 2 到 ３ 倍。而若是这个值 &gt; 5 说明系统已经在超负荷运作了。 这是单个 CPU 单核的情况，而实际生活中我们需要将得到的这个值除以我们的核数来看。我们可以通过以下的命令来查看 CPU 的个数与核心数 12345#查看物理CPU的个数#cat /proc/cpuinfo |grep &quot;physical id&quot;|sort |uniq|wc -l#每个cpu的核心数cat /proc/cpuinfo |grep &quot;physical id&quot;|grep &quot;0&quot;|wc -l 通过上面的指数我们可以得知 load 的临界值为 1 ，但是在实际生活中，比较有经验的运维或者系统管理员会将临界值定为0.7。 psps 也是我们最常用的查看进程的工具之一 1ps aux pstree通过 pstree 可以很直接的看到相同的进程数量，最主要的还是我们可以看到所有进程之间的相关性。 1pstree kill命令的掌握12345678#首先我们使用图形界面打开了 gedit、gvim，用 ps 可以查看到ps aux#使用9这个信号强制结束 gedit 进程kill -9 1608#我们再查找这个进程的时候就找不到了ps aux | grep gedit 进程的执行顺序而 nice 的值我们是可以通过 nice 命令来修改的，而需要注意的是 nice 值可以调整的范围是 -20 ~ 19，其中 root有着至高无上的权力，既可以调整自己的进程也可以调整其他用户的程序，并且是所有的值都可以用，而普通用户只可以调制属于自己的进程，并且其使用的范围只能是0 ~ 19，因为系统为了避免一般用户抢占系统资源而设置的一个限制 还可以用 renice 来修改已经存在的进程的优先级 1renice -5 pid]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[鸡尾酒]]></title>
    <url>%2F2019%2F03%2F29%2F%E9%B8%A1%E5%B0%BE%E9%85%92%2F</url>
    <content type="text"><![CDATA[鸡尾酒鸡尾酒的六大基酒皆为烈酒，分别是：金酒（Gin）、威士忌（Whisky）、白兰地（Brandy）、伏特加（Vodka）、朗姆酒（Rum）和龙舌兰酒（Tequila）。 金酒（Gin）：金酒，又称作杜松子酒或琴酒。金酒最早诞生于荷兰，之后因在英国大量生产而闻名世界。金酒的主要原料是大麦芽、稞麦、杜松子。金酒无色，气味清香，口感醇美舒爽，既可以单独饮用，也可以和其他酒混合配制饮用。 威士忌（Whisky）：威士忌是一种只用谷物制成的含酒精饮料。威士忌这个名字来自于盖尔语中的 uisge beatha（生命之水）。威士忌的口感细腻、苦涩、华丽、强烈，酒精度为 40 度左右，通常带有谷物香、果香、烟熏香。 白兰地（Brandy）：白兰地最早来自于荷兰语中的 Brandewijn，意为“烧酒”。白兰地是用葡萄酒加以蒸馏、浓缩制作而成的酒。目前世界上最优的白兰地产地位于法国夏朗德省的干邑（Cognac）及其周围地区。世界著名的白兰地品牌包括轩尼诗（Hennessy）、马爹利（Martell）等。 伏特加（Vodka）：伏特加是俄罗斯传统酒精饮料。经过蒸馏后的伏特加无色透明，味道清淡，饮酒之人感觉不到甜味、苦味、涩味，只能感觉到火焰般的刺激，如此口感使得伏特加独具一格。因此在调制各类鸡尾酒中，伏特加富有绝佳的灵活性、适应性和变通性。 朗姆酒（Rum）：朗姆酒原产于古巴，是古巴的传统酒类。朗姆酒通常用甘蔗或相关产品压榨出糖汁，经过发酵、蒸馏而得。朗姆酒的口感绵软顺口，通常伴有焦糖的香气，是鸡尾酒必不可少的原料之一。 龙舌兰酒（Tequila）：龙舌兰酒是墨西哥的灵魂，是墨西哥的国酒。龙舌兰酒以龙舌兰（agave）这种植物为原料，经过蒸馏制作而成。传统龙舌兰酒的喝法非常特别：迅速舔一口手背虎口处的盐之后，将一小杯龙舌兰一饮而尽，再咬一口柠檬片缓解由酒精带来的辛辣感。龙舌兰也常被用来当做鸡尾酒中的基酒，常见的有玛格丽特（Margarita）、特基拉日出（Tequila Sunrise）等。]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[惊艳]]></title>
    <url>%2F2019%2F03%2F29%2F%E6%83%8A%E8%89%B3%2F</url>
    <content type="text"><![CDATA[纵然万劫不复，纵然相思入骨，我也待你眉眼如初，岁月如故。 shuiman shiman 少了u A boy can do everything for girl. He is just kidding. Love must need our patience. 52Hertz (52Hz) 52Hz是一只鲸鱼独特的发声频率，由于他跟别的鲸鱼发声频率不相同，所以他的同伴听不见他的声音，可是他仍然在那独自高歌，等待着他的那个知音人（鲸鱼） 鲸落 一鲸落 万物生 鲸落 是鲸鱼留给大海最后的温柔 Ther 其实是Their的缩写 他们当中没有我 用朱自清的话说就是 “但热闹是他们的 我什么也没有” 夏目漱石曾把i love you翻译成“今夜月色真美”，那如何翻译i love you too呢？风也温柔。 岁月极美，在于它必然的流逝 春花，秋月，夏日，冬雪 ——三毛 miss，miss you leave，leave me 如果我说miss，miss you，你会认为是错过你，还是想念你？ 如果我又说leave，leave me，你会选择离开我，还是留下我？ 微雨的杏花最陶醉， 又何惜玫瑰？ 你可愿清风挽回…… 匹夫说我 生来骄傲 不肯半分折腰 生而高贵 亦不能半分低头 我将送喜欢的人远走 此后情书写给山鬼 心事寄予西风 终是黄粱一场梦，梦碎成空只余殇。 如果你喜欢一个人， 一定要告诉她 不是为了要她报答， 而是让她在以后黑暗的日子里， 否定自己的时候， 想起世界上还有人这么喜欢她 她并非一无是处。]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Share-3]]></title>
    <url>%2F2019%2F03%2F23%2Fshare-3%2F</url>
    <content type="text"><![CDATA[Fun GeoFS GeoFS是一个免费的在线飞行模拟器，包含全球的真实景色。你只需要一个网页浏览器就能运行它。 卡巴斯基 装逼可用 TensorFlow 的廉价硬件 TensorFlow 是谷歌的机器学习库，通常需要运行在昂贵的硬件上面。为了降低对硬件的要求，谷歌推出了 TensorFlow Lite 1.0，可以运行在嵌入式硬件上面。上图是一个 Cortex-M4 主板，可以运行简单的语音识别任务。这块主板具有 384KB RAM 和 1MB闪存存储，售价只有15美元，功耗极低，使用一颗纽扣电池就可以运行数天。人工智能的硬件要求越来越低，以后越来越多的设备将具备”智能”。 工具 vscode-leetcode：这是一个可以让用户在 VS Code 编辑器中，练习 LeetCode 习题的插件。支持：查看高票解答、提交答案、测试答案等。提高了刷题效率，助你在校招、社招中杀出重围。上班摸鱼刷题利器 资料 如何高效入门Github？ 麻省理工学院的入门课程，介绍 Linux 系统使用者需要掌握的各种基本工具，适合刚入门的初级用户。 WebGL 理论基础 藏经阁 如果有人不相信数学是简单的，那是因为他们没有意识到人生有多复杂。——冯・诺伊曼 藏起一棵树最好的方法是什么？答案是把它藏在一片森林里。 视频可以倒放，时光无法倒流。欢乐可叹短暂，孤独却是常伴。 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[现代诗]]></title>
    <url>%2F2019%2F03%2F22%2F%E7%8E%B0%E4%BB%A3%E8%AF%97%2F</url>
    <content type="text"><![CDATA[1．《再别康桥》（徐志摩） 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。 那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉，是天上虹 揉碎在浮藻间， 沉淀着彩虹似的梦。 寻梦？撑一支长蒿， 向青草更青处漫溯， 满载一船星辉， 在星辉斑斓里放歌。 但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 这首诗创作于1928年11月，是徐志摩的代表作，也是新月诗派最具代表性的作品。 康桥，即为英国著名的剑桥大学所在地。几年前，徐志摩曾游学于此，这是诗人一生中重要的转折点，是诗情激荡的岁月，他曾满怀深情地说，“我的眼是康桥教我睁的，我的求知欲是康桥给我拨动的，我的自我意识是康桥给我胚胎的。” 喜欢这首《再别康桥》已经很久了，久到还是刚上高中的时候，在晨光洒射的去路，在夕阳斜照的归途，边走边在心里默默地背这首诗。 然后，一切都会因为这份诗情而变得美好。看着路旁的柳树，就想到了夕阳中的新娘；望着西天的云彩，也欲挥一挥衣袖；遇到星月辉映的夜晚，便思索谁会吹起别离的笙箫。 这首诗以虚实结合的手法描摹了如画的风景，展现了如水的柔情，应该说每一句每一段都完美得无懈可击，但我还是最爱这段——悄悄是别离的笙箫，夏虫也为我沉默，沉默是今晚的康桥。 引申阅读：《沙扬娜拉》（徐志摩）最是那一低头的温柔，像一朵水莲花不胜凉风的娇羞。道一声珍重，道一声珍重。那一声珍重里有蜜甜的忧愁——沙扬娜拉。 2．《雨巷》（戴望舒） 撑着油纸伞，独自 彷徨在悠长，悠长 又寂寥的雨巷 我希望逢着 一个丁香一样地 结着愁怨的姑娘。 她是有 丁香一样的颜色， 丁香一样的芬芳 丁香一样的忧愁， 在雨中哀怨， 哀怨又彷徨。 她彷徨在这寂寥的雨巷， 撑着油纸伞 像我一样， 像我一样地 默默彳亍着 冷漠，凄清，又惆怅。 她静默地走近 走近，又投出 太息一般的眼光， 她飘过 像梦一般地， 像梦一般地凄婉迷茫 像梦中飘过 一枝丁香地， 我身旁飘过这女郎； 她静默地远了，远了， 到了颓圮的篱墙， 走尽这雨巷 在雨的哀曲里， 消了她的颜色， 散了她的芬芳， 消散了，甚至她的 太息般的眼光， 丁香般的惆怅。 撑着油纸伞，独自 彷徨在悠长，悠长 又寂寥的雨巷， 我希望飘过 一个丁香一样地 结着愁怨的姑娘。 这首诗创作于1927年，是戴望舒的成名作。诗中通过一位独自行走结着愁怨的丁香般的姑娘，来抒发作者自己对于人生的迷惘与感伤。 每次读《雨巷》的时候，我的脑海里总会有层出不穷的画面感。 那是怎样的雨？是“无边丝雨细如愁”吗？ 那是怎样的巷子？有“淡烟流水画屏幽”吗？ 那又是什么样的姑娘？会“拣尽寒枝不肯栖”吗？ 然而，她就那样撑着油纸伞，慢慢地走着，我们不知道她从哪里来，到哪里去。她好似从画中走来，又走成了一幅画。 曾经我并不是很喜欢雨，但某年自江南归来，从此爱上雨天，所以我也迷恋这首诗里悠长悠长的雨巷，有诗一般的梦幻，有梦一般的缥缈。 其实若说戴望舒笔下我最喜欢的一首诗，倒并非这首《雨巷》，只是因为它太有名，当然也很美，所以选了它。相对来说我更倾心于另一首《烦忧》，是较短的回文诗，读来极隽永。 引申阅读：《烦忧》（戴望舒）说是寂寞的秋的清愁，说是辽远的海的相思，假如有人问我的烦忧，我不敢说出你的名字。我不敢说出你的名字，假如有人问我的烦忧。说是辽远的海的相思，说是寂寞的秋的清愁。 3．《门前》（顾城） 我多么希望，有一个门口 早晨，阳光照在草上 我们站着 扶着自己的门扇 门很低，但太阳是明亮的 草在结它的种子 风在摇它的叶子 我们站着，不说话 就十分美好 有门，不用开开 是我们的，就十分美好 早晨，黑夜还要流浪 我们把六弦琴交给他 我们不走了 我们需要土地 需要永不毁灭的土地 我们要乘着它 度过一生 土地是粗糙的，有时狭隘 然而，它有历史 有一份天空，一份月亮 一份露水和早晨 我们爱土地 我们站着 用木鞋挖着泥土 门也晒热了 我们轻轻靠着，十分美好 墙后的草 不会再长大了 它只用指尖，触了触阳光 这首诗创作于1982年8月，作者顾城是朦胧派的重要代表诗人。 顾城最有名的句子莫过于《一代人》里那句——黑夜给了我黑色的眼睛，我却用它寻找光明。 不过，读了几首顾城的诗，我最爱的却是这一句，“草在结它的种子，风在摇它的叶子，我们站着，不说话，就十分美好。” 也正是因为这个句子，我才选了这首《门前》作为推荐。 而让我欣慰的是，诗中没有华丽词藻的堆砌，也没有遵循什么韵律或节奏，全然是一派自然的纯净，带着和煦的温暖。 无论土地，阳光，月亮，还是露水；无论草的种子，树的叶子，还是相对而站不说话的人儿，都那般安然美好，自在满足。 多么希望尘世间也如这首诗一样，我了解你的心意，你知晓我的心绪，我们只是静静地站着，什么都不说，美妙的感觉已经笼罩了你我。 引申阅读：《远和近》（顾城）你，一会看我，一会看云。我觉得，你看我时很远，你看云时很近。 4．《断章》（卞之琳） 你站在桥上看风景， 看风景人在楼上看你。 明月装饰了你的窗子， 你装饰了别人的梦 这首诗创作于1935年10月，是新月派诗人卞之琳的代表作。 据作者自述，此诗原是一首长诗中的四句，但整首诗也只有这四句令诗人满意，所以便把它们抽取出来独立成章，因此标题为“断章”。 看到这种说法，我简直忍不住要为作者鼓掌，一首拖沓勉强的长诗远没有如此小巧精致的短诗让人印象深刻，这般取舍实在是明智。 可以说这是一首充满哲理的诗作，既有思辨的意味，也有爱的哲理。 桥上人恋着美好的风景，而楼上人则关注着看风景的人。这是实写，写出了一幅悄然凝视的画面。 然而夜深人静之际，想必明月一定在她的窗前，而她则成了他渴望的梦。 此外，再也没有多余的表达了，在戛然而止的结束里，那份隐忍不发的感情显得意味深长。]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux进程概念]]></title>
    <url>%2F2019%2F03%2F22%2Flinux%E8%BF%9B%E7%A8%8B%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[进程与程序程序（procedure）：不太精确地说，程序就是执行一系列有逻辑、有顺序结构的指令，帮我们达成某个结果。就如我们去餐馆，给服务员说我要牛肉盖浇饭，她执行了做牛肉盖浇饭这么一个程序，最后我们得到了这么一盘牛肉盖浇饭。它需要去执行，不然它就像一本武功秘籍，放在那里等人翻看。 进程（process）：进程是程序在一个数据集合上的一次执行过程。就如我们去了餐馆，给服务员说我要牛肉盖浇饭，她执行了做牛肉盖浇饭这么一个程序，而里面做饭的是一个进程，做牛肉汤汁的是一个进程，把牛肉汤汁与饭混合在一起的是一个进程，把饭端上桌的是一个进程。它就像是我们在看武功秘籍这么一个过程，然后一个篇章一个篇章地去练。 并发：在一个时间段内，宏观来看有多个程序都在活动，有条不紊的执行（每一瞬间只有一个在执行，只是在一段时间有多个程序都执行过） 并行：在每一个瞬间，都有多个程序都在同时执行，这个必须有多个 CPU 才行 引入进程是因为传统意义上的程序已经不足以描述 OS 中各种活动之间的动态性、并发性、独立性还有相互制约性。程序就像一个公司，只是一些证书，文件的堆积（静态实体）。而当公司运作起来就有各个部门的区分，财务部，技术部，销售部等等，就像各个进程，各个部门之间可以独立运做，也可以有交互（独立性、并发性）。 而随着程序的发展越做越大，又会继续细分，从而引入了线程的概念，当代多数操作系统、Linux 2.6及更新的版本中，进程本身不是基本运行单位，而是线程的容器。就像上述所说的，每个部门又会细分为各个工作小组（线程），而工作小组需要的资源需要向上级（进程）申请。 线程（thread）是操作系统能够进行运算调度的最小单位。它被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。因为线程中几乎不包含系统资源，所以执行更快、更有效率。 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。 进程分类 以进程的功能与服务的对象来分； 以应用程序的服务类型来分； 第一个角度来看，我们可以分为用户进程与系统进程： 用户进程：通过执行用户程序、应用程序或称之为内核之外的系统程序而产生的进程，此类进程可以在用户的控制下运行或关闭。 系统进程：通过执行系统内核程序而产生的进程，比如可以执行内存资源分配和进程切换等相对底层的工作；而且该进程的运行不受用户的干预，即使是 root 用户也不能干预系统进程的运行。 第二角度来看，我们可以将进程分为交互进程、批处理进程、守护进程 交互进程：由一个 shell 终端启动的进程，在执行过程中，需要与用户进行交互操作，可以运行于前台，也可以运行在后台。 批处理进程：该进程是一个进程集合，负责按顺序启动其他的进程。 守护进程：守护进程是一直运行的一种进程，在 Linux 系统启动时启动，在系统关闭时终止。它们独立于控制终端并且周期性的执行某种任务或等待处理某些发生的事件。例如 httpd 进程，一直处于运行状态，等待用户的访问。还有经常用的 cron（在 centOS 系列为 crond）进程，这个进程为 crontab 的守护进程，可以周期性的执行用户设定的某些任务。 进程的衍生 fork-exec是由 Dennis M. Ritchie 创造的 fork() 是一个系统调用（system call），它的主要作用就是为当前的进程创建一个新的进程，这个新的进程就是它的子进程，这个子进程除了父进程的返回值和 PID 以外其他的都一模一样，如进程的执行代码段，内存信息，文件描述，寄存器状态等等 exec() 也是系统调用，作用是切换子进程中的执行程序也就是替换其从父进程复制过来的代码段与数据段 在将要结束时的子进程代码执行部分已经结束执行了，系统的资源也基本归还给系统了，但若是其进程的进程控制块（PCB）仍驻留在内存中，而它的 PCB 还在，代表这个进程还存在（因为 PCB 就是进程存在的唯一标志，里面有 PID 等消息），并没有消亡，这样的进程称之为僵尸进程（Zombie）。 虽然僵尸进程是已经放弃了几乎所有内存空间，没有任何可执行代码，也不能被调度，在进程列表中保留一个位置，记载该进程的退出状态等信息供其父进程收集，从而释放它。但是 Linux 系统中能使用的 PID 是有限的，如果系统中存在有大量的僵尸进程，系统将会因为没有可用的 PID 从而导致不能产生新的进程。 另外如果父进程结束（非正常的结束），未能及时收回子进程，子进程仍在运行，这样的子进程称之为孤儿进程。在 Linux 系统中，孤儿进程一般会被 init 进程所“收养”，成为 init 的子进程。由 init 来做善后处理，所以它并不至于像僵尸进程那样无人问津，不管不顾，大量存在会有危害。 进程 0 是系统引导时创建的一个特殊进程，也称之为内核初始化，其最后一个动作就是调用 fork() 创建出一个子进程运行 /sbin/init 可执行文件,而该进程就是 PID=1 的进程 1，而进程 0 就转为交换进程（也被称为空闲进程），进程 1 （init 进程）是第一个用户态的进程，再由它不断调用 fork() 来创建系统里其他的进程，所以它是所有进程的父进程或者祖先进程。同时它是一个守护程序，直到计算机关机才会停止。 我们还可以使用这样一个命令来看，其中 pid 就是该进程的一个唯一编号，ppid 就是该进程的父进程的 pid，command 表示的是该进程通过执行什么样的命令或者脚本而产生的 1ps －fxo user,ppid,pid,pgid,command 进程组与Sessions每一个进程都会是一个进程组的成员，而且这个进程组是唯一存在的，他们是依靠 PGID（process group ID）来区别的，而每当一个进程被创建的时候，它便会成为其父进程所在组中的一员。 一般情况，进程组的 PGID 等同于进程组的第一个成员的 PID，并且这样的进程称为该进程组的领导者,也就是领导进程，进程一般通过使用 getpgrp() 系统调用来寻找其所在组的 PGID，领导进程可以先终结，此时进程组依然存在，并持有相同的PGID，直到进程组中最后一个进程终结。 与进程组类似，每当一个进程被创建的时候，它便会成为其父进程所在 Session 中的一员，每一个进程组都会在一个 Session 中，并且这个 Session 是唯一存在的， Session 主要是针对一个 tty 建立，Session 中的每个进程都称为一个工作(job)。每个会话可以连接一个终端(control terminal)。当控制终端有输入输出时，都传递给该会话的前台进程组。Session 意义在于将多个 jobs 囊括在一个终端，并取其中的一个 job 作为前台，来直接接收该终端的输入输出以及终端信号。 其他 jobs 在后台运行。 前台（foreground）就是在终端中运行，能与你有交互的 后台（background）就是在终端中运行，但是你并不能与其任何的交互，也不会显示其执行的过程 详细版：Linux session和进程组概述 工作管理 我们可以通过 &amp; 这个符号，让我们的命令在后台中运行 1ls &amp; 被停止并放置在后台的工作我们可以使用这个命令来查看 1jobs 我们可以通过这样的一个命令将后台的工作拿到前台来 123#后面不加参数提取预设工作，加参数提取指定工作的编号#ubuntu 在 zsh 中需要 %，在 bash 中不需要 %fg [%jobnumber] 之前我们通过 ctrl + z 使得工作停止放置在后台，若是我们想让其在后台运作我们就使用这样一个命令 12#与fg类似，加参则指定，不加参则取预设bg [%jobnumber] 既然有方法将被放置在后台的工作提至前台或者让它从停止变成继续运行在后台，当然也有方法删除一个工作，或者重启等等 12345#kill的使用格式如下kill -signal %jobnumber#signal从1-64个信号值可以选择，可以这样查看kill －l]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux软件安装]]></title>
    <url>%2F2019%2F03%2F22%2Flinux%E4%B8%8B%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[通常 Linux 上的软件安装主要有四种方式： 在线安装 从磁盘安装deb软件包 从二进制软件包安装 从源代码编译安装 如果你在安装一个软件之后，无法立即使用Tab键补全这个命令，你可以尝试先执行source ~/.zshrc，然后你就可以使用补全操作。 apt-getapt-get 是用于处理 apt包的公用程序集，我们可以用它来在线安装、卸载和升级软件包等，下面列出一些apt-get包含的常用的一些工具： 工具 说明 install 其后加上软件包名，用于安装一个软件包 update 从软件源镜像服务器上下载/更新用于更新本地软件源的软件包列表 upgrade 升级本地可更新的全部软件包，但存在依赖问题时将不会升级，通常会在更新之前执行一次update dist-upgrade 解决依赖关系并升级(存在一定危险性) remove 移除已安装的软件包，包括与被移除软件包有依赖关系的软件包，但不包含软件包的配置文件 autoremove 移除之前被其他软件包依赖，但现在不再被使用的软件包 purge 与remove相同，但会完全移除软件包，包含其配置文件 clean 移除下载到本地的已经安装的软件包，默认保存在/var/cache/apt/archives/ autoclean 移除已安装的软件的旧版本软件包 下面是一些apt-get常用的参数： 参数 说明 -y 自动回应是否安装软件包的选项，在一些自动化安装脚本中使用这个参数将十分有用 -s 模拟安装 -q 静默安装方式，指定多个q或者-q=#,#表示数字，用于设定静默级别，这在你不想要在安装软件包时屏幕输出过多时很有用 -f 修复损坏的依赖关系 -d 只下载不安装 --reinstall 重新安装已经安装但可能存在问题的软件包 --install-suggests 同时安装APT给出的建议安装的软件包 12345678# 更新软件源$ sudo apt-get update# 升级没有依赖问题的软件包$ sudo apt-get upgrade# 升级并解决依赖关系$ sudo apt-get dist-upgrade#搜索软件仓库里面有没有该软件sudo apt-cache search softname1 softname2 softname3…… 使用dpkg从本地磁盘安装deb软件包我们经常可以在网络上见到以deb形式打包的软件包，就需要使用dpkg命令来安装。 dpkg常用参数介绍： 参数 说明 -i 安装指定deb包 -R 后面加上目录名，用于安装该目录下的所有deb安装包 -r remove，移除某个已安装的软件包 -I 显示deb包文件的信息 -s 显示已安装软件的信息 -S 搜索已安装的软件包 -L 显示已安装软件包的目录信息 使用dpkg -L查看deb包目录信息 1$ sudo dpkg -L emacs24]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[登天的感觉]]></title>
    <url>%2F2019%2F03%2F16%2F%E7%99%BB%E5%A4%A9%E7%9A%84%E6%84%9F%E8%A7%89%2F</url>
    <content type="text"><![CDATA[登天的感觉上个星期看完了岳晓东的《登天的感觉》，发现心理学其实挺有趣的。为什么我要看这本书呢？因为前个星期张雪峰老师来我们学校，给我们开了场讲座，听他的讲座真的挺有意思的，其实我不想考研，只是抱着听相声的想法去的。期间，张雪峰提到了他最近在看的书，就包括《登天的感觉》，于是我就去图书馆借来看看了。 内容简介“我恨我自己，我实在太愚蠢了”，“我们的爱情还有救吗？”……这些日常生活中随处可见的不起眼问题，却妨碍着我们对幸福的追求。在处理这些心理案例的过程中，作者展现了心理咨询的神奇技巧――原来一个人的人生道路可能因为几句话而改变！日常生活中的大多数问题实际都是心理问题，人生的幸福来自于内心的平静，天堂原本就存在于每个人的心中。本书将带给认真的读者飞翔在云端船的美妙享受――登天的感觉。 感受读完这本书，给我的收获很大，我有时会思考，如果一个人从小就开始接受心理咨询的帮助，不说永远，只说到20岁就好了，那么这个人的人生，我相信，他的人生将风雨无阻，乘风破浪，他的人生也将是自信，灿烂的人生。所以我认为其实每个人都应该学点心理学，让自己变得更会说话，也让自己的心态变得更好，利人又利己。 接下来谈谈我从书中get到的点： 我是哈佛最自卑的人（现实疗法） 宣泄不良情绪 强化平常感，自我披露 人越是在比自己成熟或地位高的人面前获得尊重，就越容易消除个人的自卑感 转移比较对象 采取具体行动 我想从哈佛转学（格式塔疗法） 过去的事情是忘不掉的 做心理咨询，好似在耍阴阳平衡（心理平衡）的魔术 我不要上哈佛大学法学院（来询者中心疗法） 你不尊重他人，他人怎么可能尊重你 比较利弊 角色扮演 问你是否爱我（理性情绪疗法） 完美主义与自我中心 提问与反问 助人自助 我们的缘分尽了吗（交互分析疗法） 考虑得失 依赖心理 - 老是为自己的行为辩护 走出心灵创伤的深渊（行为疗法） 封锁自我 - 防卫方式 心理健康的人总是幸福的 以上是我从书中get到的点，算是做一个读书笔记吧，虽然写得很草率，不过反正也没人会看到的，哈哈。 之前学到的心理小知识当我感到萎靡不振的时候可以调整一下肢体动作。 通过脚步间距来判断兴趣感。 要让朋友回答的更多，就要盯着他们的眼睛。 可以先让人帮小忙，再让人帮大忙。 不知道回应什么时，试着重复对方的话。“你为什么问这个问题?”把问题抛给对方。 导播主要负责群众的热线和信息接入和切断，提醒主播即时插播广告。 1. 用【我选择，我负责】，代替【我恐惧、我逃避】 2. 用【把比赛当成练习】，代替【等练好了再参赛】 3. 用【高配版的自己】，代替【低配版的自己】 4. 用【往前走走看】，代替【站在原地纠结】 5. 用【我帮你解决问题】，代替【我替你打工卖命】 6. 用【温柔的坚持】，代替【激烈的反抗】 心理小游戏 写下你的墓志铭 生命线 在一张白纸上，画上一条箭头直线，然后，在线条的左侧，写上“0”这个数字，在线条右方，箭头旁边，写上你为自己预计的寿数。可以写68，也可以写100。 摸着这生命线，想象你的未来计划你的未来，然后，返回你的生命线，请你按照你为自己规定的生命长度，找到你目前所在的那个点。比如你打算活七十五岁，你现在只有二十五岁，你就在整个线段的三分之一处，留下1个标志。之后，请在你的标志的左边，即代表这过去岁月的那部分，把对你有着重大影响的事件用笔标出来。 好事开心的事写在生命线的上面（可以用红色笔写出事情），坏事悲伤的事写在生命线下面（用黑色或者灰色笔写出事情）。]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[正则表达式基础]]></title>
    <url>%2F2019%2F03%2F15%2Flinux%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[grep模式匹配命令grep命令用于打印输出文本中匹配的模式串，它使用正则表达式作为模式匹配的条件。grep支持三种正则表达式引擎，分别用三个参数指定： 参数 说明 -E POSIX扩展正则表达式，ERE -G POSIX基本正则表达式，BRE -P Perl正则表达式，PCRE grep命令的常用参数： 参数 说明 -b 将二进制文件作为文本来进行匹配 -c 统计以模式匹配的数目 -i 忽略大小写 -n 显示匹配文本所在行的行号 -v 反选，输出不匹配行的内容 -r 递归匹配查找 -A n n为正整数，表示after的意思，除了列出匹配行之外，还列出后面的n行 -B n n为正整数，表示before的意思，除了列出匹配行之外，还列出后面的n行 –color = auto 将输出中的匹配项设置为自动颜色显示 数量 123456# 将匹配以&apos;z&apos;开头以&apos;o&apos;结尾的所有字符串$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;z.*o&apos;# 将匹配以&apos;z&apos;开头以&apos;o&apos;结尾，中间包含一个任意字符的字符串$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;z.o&apos;# 将匹配以&apos;z&apos;开头,以任意多个&apos;o&apos;结尾的字符串$ echo &apos;zero\nzo\nzoo&apos; | grep &apos;zo*&apos; 选择 1234567891011121314# grep默认是区分大小写的，这里将匹配所有的小写字母$ echo &apos;1234\nabcd&apos; | grep &apos;[a-z]&apos;# 将匹配所有的数字$ echo &apos;1234\nabcd&apos; | grep &apos;[0-9]&apos;# 将匹配所有的数字$ echo &apos;1234\nabcd&apos; | grep &apos;[[:digit:]]&apos;# 将匹配所有的小写字母$ echo &apos;1234\nabcd&apos; | grep &apos;[[:lower:]]&apos;# 将匹配所有的大写字母$ echo &apos;1234\nabcd&apos; | grep &apos;[[:upper:]]&apos;# 将匹配所有的字母和数字，包括0-9,a-z,A-Z$ echo &apos;1234\nabcd&apos; | grep &apos;[[:alnum:]]&apos;# 将匹配所有的字母$ echo &apos;1234\nabcd&apos; | grep &apos;[[:alpha:]]&apos; sed流编辑器sed : 用于过滤和转换文本的流编辑器 sed 命令基本格式： 123sed [参数]... [执行命令] [输入文件]...# 形如：$ sed -i &apos;s/sad/happy/&apos; test # 表示将test文件中的&quot;sad&quot;替换为&quot;happy&quot; 参数 说明 -n 安静模式，只打印受影响的行，默认打印输入数据的全部内容 -e 用于在脚本中添加多个执行命令一次执行，在命令行中执行多个命令通常不需要加该参数 -f filename 指定执行filename文件中的命令 -r 使用扩展正则表达式，默认为标准正则表达式 -i 将直接修改输入文件内容，而不是打印到标准输出设备 sed执行命令格式： 12345[n1][,n2]command[n1][~step]command# 其中一些命令可以在后面加上作用范围，形如：$ sed -i &apos;s/sad/happy/g&apos; test # g表示全局范围$ sed -i &apos;s/sad/happy/4&apos; test # 4表示指定行中的第四个匹配字符串 其中n1,n2表示输入内容的行号，它们之间为,逗号则表示从n1到n2行，如果为～波浪号则表示从n1开始以step为步进的所有行；command为执行动作，下面为一些常用动作指令： 命令 说明 s 行内替换 c 整行替换 a 插入到指定行的后面 i 插入到指定行的前面 p 打印指定行，通常与-n参数配合使用 d 删除指定行 AWK文本处理语言awk所有的操作都是基于pattern(模式)—action(动作)对来完成的，如下面的形式： 1$ pattern &#123;action&#125; 变量名 说明 FILENAME 当前输入文件名，若有多个文件，则只表示第一个。如果输入是来自标准输入，则为空字符串 $0 当前记录的内容 $N N表示字段号，最大值为NF变量的值 FS 字段分隔符，由正则表达式表示，默认为” “空格 RS 输入记录分隔符，默认为”\n”，即一行为一个记录 NF 当前记录字段数 NR 已经读入的记录数 FNR 当前输入文件的记录数，请注意它与NR的区别 OFS 输出字段分隔符，默认为” “空格 ORS 输出记录分隔符，默认为”\n”]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Unity-basic]]></title>
    <url>%2F2019%2F03%2F14%2FunityAPI%2F</url>
    <content type="text"><![CDATA[事件函数 如何执行的是一个普通方法，那么会等这个普通方法执行完，然后继续向下执行 如果调用的是一个协程方法（coroutine)，那么调用完协程方法后，不会等这个方法执行完，就继续向下执行了 Mathf.Rad2Deg 弧度转度数 Mathf.Deg2Rad 度数转弧度 Mathf.Epsilon 非常小的小数 Mathf.lnfinity 无限大的数字 Mathf.Negativelnfinity 无限小的数字 Mathf.PI Mathf.Lerp 插值运算 速度越来越慢 Mathf.MoveTowards 左右远离目标运动 匀速 Mathf.PingPong 乒乓球来回运动 UGUI 事件监听 拖拽 代码添加 通过实现接口 对应UI的接口 获取游戏物体的四种方式 Time.dateTime 每一帧的时间间隔/1s运行60帧/当前帧运行占用的时间 Time.realtimeSinceStartup 从游戏开始到现在的总时间/测性能 Time.frameCount 帧数 Time.fixedTime Time.time Time.timeSinceLevelLoad 游戏运行的时间 Time.timeScale 时间比例 构造方法 Instantiate 克隆原始对象并返回克隆。 CreatePrimitive 使用基本的网格渲染器和适当的碰撞器创建游戏对象。 GameObject 游戏物体 activeSelf 游戏对象的局部活动状态。 activeInHierarchy 定义游戏对象在场景中是否处于活动状态。 tag AddComponent 添加组件，通过组件获取到的名字为物体的名字，因为物体与组件同属于一个基类 游戏物体查找 Game.Find FindObjectsOfType FindWithTag transform.Find Input 输入事件 GetKey.. GetAxis OnMouse 静态方法由类名来调用 非静态方法由具体对象来调用 Vector2 Vector3 operators 数学运算 +-*/ = 使用random生成随机数 Random.lnitState 初始化，生成一个种子； Quaternion四元数 Inspector中的rotation 改变的为欧拉角eulerAngles Scipt中的rotation 得传递四元数 Camera mainCamera ScreenPointToRay ScreenToWorldPoint WorldToScreenPoint 要持续地移动的话，使用Rigidbody.MovePosition 把刚体从一个位置移动到另一个位置 使用Rigidbody.Position streaming Assets 资源文件 音频 视频 射线检测 Physics 中的Raycast , RaycastAll 123456Unity 5.3:ParticleSystem main = smokePuff.GetComponent&lt;ParticleSystem&gt;();main.startColorUnity 5.5+:ParticleSystem.MainModule main = smokePuff.GetComponent&lt;ParticleSystem&gt;().main;main.startColor SceneManagement 代替 Application spatial blend 0 2D声音 1 3D声音 2D声音不受距离的影响 物体由 形状（mesh) , 材质 ，贴图（Textures外观） Move To View： 移动游戏对象到视图的中心点。 Align With View： 移动游戏对象与视图对齐，将选择的对象自动移动到当前视图并以当前视图为中心进行对齐 Align View To Select：移动视图与游戏对象对齐，将当前视图对齐到选择的对象，并以游戏对象中心为准进行对齐 Pivot 原点(位置点) Center 中心点 Global 世界坐标系 Local 局部坐标系 alt + 鼠标左键 : 观察物体 鼠标左键 ：旋转观察视野 鼠标左键 ：方向移动观察物体 persp 透视视野，近大远小。 iso 正交视野 ctrl + d 复制之后，按住 ctrl 进行单位化移动 v 吸附定点 snap setting 进行步长修改 object 的select是用来选择它的 prefabs的 字体加粗就不会受到prefabs的影响 apply相当于把自身修改的属性应用到prefabs上 collider碰撞器 OnCollisionEnter 检测碰撞 OnCollisionExit 碰撞离开 OnCollisionStay 碰撞每一帧 collision 碰撞信息的获取 Is Trigger 触发器 OnTriggerEnter OnTriggerExit OnTriggerStay Unity 四种灯光 Directional Light 平行光相当于太阳 Point Light 点光源（小灯泡）（这个很有用） Spot Light 手电筒 Area Light 区域光 baked 烘培 realtime 实时运行 mixed 烘培+实时运行 particle system 粒子系统 Gizmos 辅助线 easytouch 插件 紫色 材质丢失 terrain 地形 Nav Mesh Agent 自动识路 rendertext 动态渲染纹理]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单的文本处理]]></title>
    <url>%2F2019%2F03%2F08%2Flinux%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[tr命令tr 命令可以用来删除一段文本信息中的某些文字。或者将其进行转换。 1234567# 删除 &quot;hello shiyanlou&quot; 中所有的&apos;o&apos;,&apos;l&apos;,&apos;h&apos;$ echo &apos;hello shiyanlou&apos; | tr -d &apos;olh&apos;# 将&quot;hello&quot; 中的ll,去重为一个l$ echo &apos;hello&apos; | tr -s &apos;l&apos;# 将输入文本，全部转换为大写或小写输出$ echo &apos;input some text here&apos; | tr &apos;[:lower:]&apos; &apos;[:upper:]&apos;# 上面的&apos;[:lower:]&apos; &apos;[:upper:]&apos;你也可以简单的写作&apos;[a-z]&apos; &apos;[A-Z]&apos;,当然反过来将大写变小写也是可以的 col命令col 命令可以将Tab换成对等数量的空格键，或反转这个操作。 使用方式1col [option] 常用的选项有： 选项 说明 -x 将Tab转换为空格 -h 将空格转换为Tab(默认选项) join命令join命令可以将将两个文件中包含相同内容的那一行合并在一起。 常用的选项有： 选项 说明 -t 指定分隔符，默认为空格 -i 忽略大小写的差异 -1 指名第一个文件要用哪个字段来对比，默认对比第一个字段 -2 指名第二个文件要用哪个字段来对比，默认对比第一个字段 eg: 123456789$ cd /home/shiyanlou# 创建两个文件$ echo &apos;1 hello&apos; &gt; file1$ echo &apos;1 shiyanlou&apos; &gt; file2$ join file1 file2# 将/etc/passwd与/etc/shadow两个文件合并，指定以&apos;:&apos;作为分隔符$ sudo join -t&apos;:&apos; /etc/passwd /etc/shadow# 将/etc/passwd与/etc/group两个文件合并，指定以&apos;:&apos;作为分隔符, 分别比对第4和第3个字段$ sudo join -t&apos;:&apos; -1 4 /etc/passwd -2 3 /etc/group paste 命令paste这个命令与join 命令类似，它是在不对比数据的情况下，简单地将多个文件合并一起，以Tab隔开。 常用的选项有： 选项 说明 -d 指定合并的分隔符，默认为Tab -s 不合并到一行，每个文件为一行 操作举例：12345$ echo hello &gt; file1$ echo shiyanlou &gt; file2$ echo www.shiyanlou.com &gt; file3$ paste -d &apos;:&apos; file1 file2 file3$ paste -s file1 file2 file3]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTC VIVE - 2]]></title>
    <url>%2F2019%2F03%2F03%2Fvive2%2F</url>
    <content type="text"><![CDATA[SteamVR渲染机制 等待相机和GUI的渲染完成 设置跟踪空间 获取设备位置，通知更新 渲染外部相机 渲染左右眼 vive的基站工作原理vive的基站工作原理有点像超市买东西用来扫描的扫描器，不够那个用的是可见激光，vive用的是不可见激光（红外线)。结构：基站里面有两个马达，一个横着转一个竖着转。他们上面有一个激光发射器发出一道很细的不可见激光，随着马达的转动它们射出的激光线扫过整个房间。中间有一个红外列阵。 红色的是激光发射器（在马达上的）绿色的是红外列阵。原理： 基站会频繁的发出4个信号，第一是由红外列阵发出的红外线，代表开始扫描，可以覆盖整个追踪面积；第二竖向激光扫描，第三是横向激光扫描，第四又是由红外列阵发出的，代表扫描结束。 vive和vive控制器上有多个红外接收器，它们会接受第一个信号并且开始计时，当2个信号被接收到的时候结束竖向计时，第3个信号结束横向计时，第四个信号重置。 因为马达的转速是已知的，所以通过时间差可以计算出接收点相对接收器的位置，又因为基站是固定的，可以计算出接收点的位置。 接收器上有多个接收点，通过接收点之间的距离可以计算出vive头显和控制器的完全位置以及状态。 竖向扫描 横向扫描]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>VR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-2]]></title>
    <url>%2F2019%2F03%2F02%2Fshare-2%2F</url>
    <content type="text"><![CDATA[Fun DNS Servers That Offer Privacy and Filtering 作者介绍了几个常用的DNS服务器地址，简单谈了它们之间的差异。 This Person Does Not Exist 这个网站，每刷新一次就会出现一张人脸。所有的人脸都是AI生成的，现实中不存在。 猫屎咖啡 猫屎咖啡是世界上最贵的咖啡之一，是印尼麝香猫吃下咖啡浆果排泄出的咖啡豆制成的。过去，人们是在树林捡拾野生麝香猫排泄的天然咖啡豆，数量稀少且生产速度慢，于是咖啡商人开始人工养殖麝香猫，以求大量生产猫屎咖啡。 乐器博物馆 意大利克雷莫纳，历史上是一个著名的小提琴制作城市。著名的斯特拉迪瓦里小提琴，就是在那里制作的。下图是当地的小提琴博物馆。 《流浪地球》超详细设计图、理念分享 估计日落的时间 太阳将要落山的时候，你可以把手放在太阳和地平线之间，估计日落的大概时间。如果可以放四根手指，就是1个小时后落山，三根手指45分钟，两根手指30分钟，一根手指15分钟。 工具 LucidChart 一款流程图工具，与大家熟知的 ProcessOn 功能操作类似，但图形和模板更丰富些，如果你受不了 ProcessOn 的种种小毛病，或者觉得模板不漂亮，可以试试这款工具。 百度网盘下载神器 LeetCode LeetCode是一个美国的在线编程网站，上面主要收集了各大IT公司的笔试面试题，对于找工作是一个不可多得的好帮手。如果想要练习编程基础或者准备面试的话，非常适合。 资料 How does the Hololens 2 matter? This release is super exciting, I can’t wait to get my hands on one and see what it can do. 计算机科学的自学方案 本文对于计算机科学各门课程的自学，给出了一个完整的方案。 文章 施一公：如何成为一名优秀的博士生？ 什么是点云？ 使用Linux系统是一种怎样的体验 Controlling a Quadcopter with Hand Gestures 藏经阁 回顾其过去，能看清其千丝万缕的联系。 -苏牧云 要学会挖掘数据背后的潜在价值。 -苏牧云 越是复杂的问题，背后的原理越是简单。有时候，应该让生活过得简单一些。-苏牧云 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[linux命令执行顺序控制与管道]]></title>
    <url>%2F2019%2F03%2F01%2Flinux%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E6%8E%A7%E5%88%B6%E4%B8%8E%E7%AE%A1%E9%81%93%2F</url>
    <content type="text"><![CDATA[命令执行顺序的控制顺序执行多条命令eg:1234#更新软件源里的软件列表$ sudo apt-get update$ sudo apt-get install some-tool //这里some-tool是指具体的软件包，例如：banner$ some-tool 有选择的执行命令eg:1$ which cowsay&gt;/dev/null &amp;&amp; cowsay -f head-in ohch~ 你如果没有安装cowsay，你可以先执行一次上述命令，你会发现什么也没发生，你再安装好之后你再执行一次上述命令，你也会发现一些惊喜。 上面的&amp;&amp;就是用来实现选择性执行的，它表示如果前面的命令执行结果（不是表示终端输出的内容，而是表示命令执行状态的结果）返回0则执行后面的，否则不执行，你可以从$?环境变量获取上一次命令的返回结果： ||就是与&amp;&amp;相反的控制效果，当上一条命令执行结果为≠0($?≠0)时则执行它后面的命令：1$ which cowsay&gt;/dev/null || echo &quot;cowsay has not been install, please run &apos;sudo apt-get install cowsay&apos; to install&quot; 流程图： 管道管道是什么？管道是一种通信机制，通常用于进程间的通信（也可通过socket进行网络通信），它表现出来的形式就是将前面每一个进程的输出(stdout)直接作为下一个进程的输入(stdin)。 管道又分为匿名管道和具名管道，在使用一些过滤程序时经常会用到的就是匿名管道，在命令行中由|分隔符表示,具名管道简单的说就是有名字的管道，通常只会在源程序中用到具名管道。 先试用一下管道，比如查看/etc目录下有哪些文件和目录，使用ls命令来查看：1$ ls -al /etc 有太多内容，屏幕不能完全显示，这时候可以使用滚动条或快捷键滚动窗口来查看。不过这时候可以使用管道：1$ ls -al /etc | less 通过管道将前一个命令(ls)的输出作为下一个命令(less)的输入，然后就可以一行一行地看。 cut 命令，打印每一行的某一字段打印/etc/passwd文件中以:为分隔符的第1个字段和第6个字段分别表示用户名和其家目录：1$ cut /etc/passwd -d &apos;:&apos; -f 1,6 打印/etc/passwd文件中每一行的前N个字符：12345678# 前五个（包含第五个）$ cut /etc/passwd -c -5# 前五个之后的（包含第五个）$ cut /etc/passwd -c 5-# 第五个$ cut /etc/passwd -c 5# 2到5之间的（包含第五个）$ cut /etc/passwd -c 2-5 grep 命令，在文本中或 stdin 中查找匹配字符串grep命令的一般形式为：1grep [命令选项]... 用于匹配的表达式 [文件]... 搜索/home/shiyanlou目录下所有包含”shiyanlou”的文本文件，并显示出现在文本中的行号：1$ grep -rnI &quot;shiyanlou&quot; ~ -r 参数表示递归搜索子目录中的文件 -n表示打印匹配项行号 -I表示忽略二进制文件 当然也可以在匹配字段中使用正则表达式，下面简单的演示： 12# 查看环境变量中以&quot;yanlou&quot;结尾的字符串$ export | grep &quot;.*yanlou$&quot; $表示一行的末尾 wc 命令，简单小巧的计数工具wc 命令用于统计并输出一个文件中行、单词和字节的数目，比如输出/etc/passwd文件的统计信息：1$ wc /etc/passwd 分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数：12345678910# 行数$ wc -l /etc/passwd# 单词数$ wc -w /etc/passwd# 字节数$ wc -c /etc/passwd# 字符数$ wc -m /etc/passwd# 最长行字节数$ wc -L /etc/passwd sort 排序命令这个命令前面我们也是用过多次，功能很简单就是将输入按照一定方式排序，然后再输出,它支持的排序有按字典排序,数字排序，按月份排序，随机排序，反转排序，指定特定字段进行排序等等。 默认为字典排序：1$ cat /etc/passwd | sort 反转排序：1$ cat /etc/passwd | sort -r 按特定字段排序：1$ cat /etc/passwd | sort -t&apos;:&apos; -k 3 -t参数用于指定字段的分隔符，这里是以”:”作为分隔符； -k 字段号用于指定对哪一个字段进行排序。 这里/etc/passwd文件的第三个字段为数字，默认情况下是以字典序排序的，如果要按照数字排序就要加上-n参数：1$ cat /etc/passwd | sort -t&apos;:&apos; -k 3 -n uniq 去重命令uniq命令可以用于过滤或者输出重复行。 过滤重复行我们可以使用history命令查看最近执行过的命令（实际为读取${SHELL}_history文件,如我们环境中的~/.zsh_history文件），不过你可能只想查看使用了哪个命令而不需要知道具体干了什么，那么你可能就会要想去掉命令后面的参数然后去掉重复的命令：1$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | uniq 然后经过层层过滤，你会发现确是只输出了执行的命令那一列，不过去重效果好像不明显，仔细看你会发现它确实去重了，只是不那么明显，之所以不明显是因为uniq命令只能去连续重复的行，不是全文去重，所以要达到预期效果，我们先排序：12$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq# 或者$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort -u 这就是 Linux/UNIX 哲学吸引人的地方，大繁至简，一个命令只干一件事却能干到最好。 输出重复行1234# 输出重复过的行（重复的只输出一个）及重复次数$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq -dc# 输出所有重复的行$ history | cut -c 8- | cut -d &apos; &apos; -f 1 | sort | uniq -D]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTC VIVE - 1]]></title>
    <url>%2F2019%2F02%2F28%2Fvive1%2F</url>
    <content type="text"><![CDATA[安装VIVE和SteamVR至少需要占用1020MB的磁盘空间。 技术规格“HTC Vive”具有90赫兹的刷新速率。该设备使用两个屏幕，每眼一个屏幕，每个屏幕具有1080×1200分辨率。 最低系统要求123456GPU: NVIDIA GeForce GTX 970 / AMD Radeon R9 290 同等或更高的版本CPU: Intel i5-4590 / AMD FX-8350 同等或更高的版本RAM: 4GB+Video Output: HDMI 1.4 或 DisplayPort 1.2 或更高版本USB Port: 1x USB 2.0 或更高版本操作系统: Windows 7 SP1 或更新版本[8] Viveport M简介Viveport M是HTC面向移动市场推出的虚拟现实应用商店，适用于Android平台并广泛兼容多种移动VR设备，其内容将以360°视频和体验类游戏为主，旨在为用户提供更多元化、更高品质的移动VR内容与体验。Viveport M将为全球数以万计的开发者提供一个展示内容的新平台，吸引更多开发者和合作伙伴加入到蓬勃发展的Vive生态系统中，接触到全球增长速度最快的用户群体。系统支持：安卓5.0及以上；屏幕尺寸：5-6寸 手柄1 开关、系统菜单按钮：只有这个按钮不可以编程（默认），用来打开手柄，其实没用关的功能。在游戏中按下该按钮是调出系统默认的菜单，用来关闭，切换游戏用的。 2 menu按钮：默认用来打开游戏菜单。 3 grip按钮：用的最少的按钮，每个手柄上虽然有两个，但是是相同的。 4 trigger按钮：扳机按钮，用的最多，可以有力度。 5 pad：触摸屏+鼠标的功能，可触摸，可点击。 vive开发需要两个插件： SteamVR Plugin Vive Input Utility123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105SteamVR 这个目录下的脚本都是用来定制SteamVR插件中某些脚本在Unity中的Inspector界面及功能的——Editor 定制SteamVR_Camera.cs这个脚本在Inspector中的显示效果 SteamVR_Editor.cs 定制SteamVR_RenderModel.cs脚本在Inspector中的功能 SteamVR_RenderModelEditor.cs 上面提到的弹出的SteamVR_Settings对话框里面的选项就在这儿定制 SteamVR_Settings.cs 定制SteamVR_SkyBox.cs在Inspector中显示的属性 SteamVR_SkyboxEditor.cs 用来检查插件的更新 SteamVR_Update.cs 这个文件夹下面放着一些工具脚本 ——Extras 这个脚本用来检测物体是否被用户所凝视 SteamVR_GazeTracker.cs 通过手柄指向来产生一条激光束 SteamVR_LeaserPointer.cs 用来瞬移的脚本 SteamVR_Teleporter.cs 示例场景中扔物体的脚本 SteamVR_TestThrow.cs 示例场景中跟踪相机的脚本 SteamVR_TestTrackedCamera.cs 控制器(手柄)集成脚本 SteamVR_trackedController.cs 存放示例demo的材质体 ——Materials 存放SteamVR预制体——Prefabs 相机预制体 [CameraRig] 状态相关的overlay显示预制体 [Status] /*SteamVR_Render预制体*/ [SteamVR] /*一些自带的shader*/ ——Scenes/*SteamVR核心脚本*/ ——Scripts /*SteamVR的封装类*/ SteamVR.cs /*SteamVR的核心相机类*/ SteamVR_Camera.cs /*SteamVR相机翻转*/ SteamVR_CameraFlip.cs /*SteamVR相机网格隐藏*/ SteamVR_CameraMask.cs /*控制器封装类*/ SteamVR_Controller.cs /*控制器管理类*/ SteamVR_ControllerManager.cs /*声音控制类*/ SteamVR_Ears.cs /*外部相机*/ SteamVR_ExternalCamera.cs /*场景进行渐显或者渐隐的类*/ SteamVR_Fade.cs /*跟踪设备的扫描范围*/ SteamVR_Frustum.cs /*绘制pc上的伴随窗口*/ SteamVR_GameView.cs /*关节反身运动*/ SteamVR_IK.cs /*场景切换类*/ SteamVR_LoadLevel.cs /*菜单类*/ SteamVR_Menu.cs /*overly封装类*/ SteamVR_Overlay.cs /*运动区域*/ SteamVR_PlayArea.cs /*Vive渲染流程控制的核心类*/ SteamVR_Render.cs /*设置天空盒*/ SteamVR_Skybox.cs /*做球形投影的类*/ SteamVR_SphericalProjection.cs /*通过overlay显示统计信息*/ SteamVR_Stats.cs /*根据不同状态渐变显示不同的信息*/ SteamVR_Status.cs /*根据不同状态渐变显示不同文本信息*/ SteamVR_StatusText.cs /*控制器测试脚本*/ SteamVR_TestController.cs /*头盔上的前置相机*/ SteamVR_TrackedCamera.cs /*跟踪设备管理类*/ SteamVR_TrackedObject.cs /*5.x版本以前更新设备位置的脚本*/ SteamVR_UpdatePoses.cs /*工具类，包括事件系统，Transform等等*/ SteamVR_Utils.cs /*常用的纹理*/ ——Textures]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>VR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hololens2]]></title>
    <url>%2F2019%2F02%2F25%2Fhololens2%2F</url>
    <content type="text"><![CDATA[Hololens2售价3500美元 具有强大的环境感知能力，和信息展示能力。强大的本地计算能力（HPU2），还可连接云端后台来增强。 Hololens 2本体的几个亮点： FOV * 2； Hololens 2的FOV大约从30°增加到了52°，同时达到每个视距47像素。 眼球追踪； 眼球追踪也是一个重头戏，Hololens 2 利用了一个小摄像头实现了这个功能。允许其精确追踪你的两只眼睛，并判断具体的注视点位置。与此同时，设备支持Windows Hello和虹膜识别登录，从而允许多人轻松，快速，安全地共享设备。 完全的手指跟踪； 基本上实现了Alex承诺的’instinctual control’。 显示系统: MEMS激光显示器，而且这是当前市场上最小和最高能效的2K显示器。 除了高通骁龙 850 处理器，HoloLens 2 还内置了 AI 处理单元。因此，它能够直接连接到微软的 Azure 云服务。「这意味着某些 AI 任务会被移交给云计算处理，最终的运算结果将会更加精确——类似一厘米空间映射（spatial mapping）和一毫米空间映射的区别。头显处理这些任务仍需几秒钟时间，Kipman 相信这是企业用户可以接受的延迟时长。」《连线》报道称。早在去年 10 月，微软就已推出 Dynamics 365 Remote Assist 和 Dynamics 365 Layout 两个 app。前者为 MR 头显的使用者提供远程帮助；后者将通过云记住用户创建的虚拟图像，并将它固定在特定的地方，以便多名协作用户查找。 在北京时间今天凌晨的 MWC 发布会上，微软推出了全新的员工培训应用 Dynamics 365 Guides。「就好像是为现实世界准备的，能一步步引导你的谷歌地图。」CNET 的记者这样形容。Dynamics 365 Guides 的 PC 端应用还能创建交互式内容，包括添加图片和视频，3D 模型等。 如果将设备连接至全新的Azure Remote Rendering混合现实云端服务，你将可以快速生成复杂的三维数字模型，而原本企业可能需要花费数天或数月的时间才能构建出与之媲美的模型细节。如果没有云端的图形处理能力，这是不可能实现的任务。Azure Remote Rendering可以帮助人们自由体验3D，从而实现更快，更优的决策。微软认为，今天如果要通过移动设备和混合现实头显与高质量3D模型进行交互，你通常需要“抽取”或简化3D模型。但对于设计评审和医疗规划等场景，每个细节都非常重要，而简化asset可能会导致关键决策所需的重要细节丢失。Azure Remote Rendering可以在云端渲染高质量的3D内容，并将其全部实时传输至边缘设备，而且能够确保“每个细节都完好无损”。 如果把未来的公司比作一个厨房，那么云服务大概是水电煤，数据就是基础原料，AI算法服务是不同的菜谱，操作系统则是一台功能齐备的厨师机，目前这厨房里的所有设备微软全都齐备，并且都在为未来布局。 技术规格:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748光学：透视全息透镜（波导）分辨率：2k 3：2光引擎全息密度：&gt; 2.5k辐射点（每弧度光点）注视点渲染：针对3D眼睛位置显示的优化深度传感器：Azure Kinect传感器IMU：加速度计，陀螺仪，磁力计摄像头：800万像素，1080P/30帧视频麦克风阵列：5组扬声器：内置空间音频手部追踪：双手全关节模型，直接操纵眼动追踪：实时追踪语音 ：板载命令与控制，具有互联网连接的自然语言六自由度追踪：世界规模的位置追踪空间映射：实时环境网格混合现实捕获：混合全息图和物理环境照片和视频SoC：高通骁龙850计算平台，不支持4G LTEHPU：第二代定制全息处理单元WiFi：802.11ac 2×2蓝牙：5.0USB：USB Type-C续航能力：2-3小时的有效使用时间充电：USB供电 – 快速充电热量：被动冷却佩戴：适合眼镜，可使用表盘调节 Azure Kinect微软同时发布了一款新的Azure Kinect设备，为开发者提供了创建人工智能体验的新方式。Azure Kinect将HoloLens 2中的深度感应摄像头技术与圆形麦克风阵列和彩色摄像头相结合，并搭配以Microsoft Azure中的人工智能服务。它可以帮助开发者建立新的感知功能，如根据锯子的声音识别其是否属于危险的运行情况，支持机器人在装箱时判断距离，或者是识别从商店货架中选择的物品。 第四代的Kinect，结合了在边缘运行的AI工具。这种深度和动作感知技术最初是在十年前开发，并旨在为Xbox创建手势识别附件。但对于可以准确感知深度并确定人体在空间中移动的能力，其潜力远远不局限于游戏。例如，Ocuvera正与Azure Kinect合作开发这样一种系统：旨在帮助防止每年在美国医院发生的大约100万次跌倒，甚至是全球范围内的更多跌倒。他们研发的系统可以感知需要帮助行走的患者是于何时无助地下床，并提前预警护士以提供帮助。利用深度感应摄像头和人工智能算法，系统可以在患者起床前识别出运动模式，如坐起或摆动腿部的动作。11个临床试点的初步研究结果发现，在实施上述技术后，无辅助和未留意的下床行走减少了90％以上。首席执行官史蒂夫·凯恩（Steve Kiene）表示，Ocuvera团队调查了世界每一台深度感应摄像头，甚至试图开发自家的深度感应摄像头。但对于区分病人是向前移动抑或只是翻身，没有任何一款设备能够接近于Azure Kinect的准确性和分辨率。他说道：“这就像玩扑克时的认牌一样。只有Azure Kinect能够为我们提供可以真正了解患者在病床上发生的情况，并以足够的准确度预测其意图的数据。当我们在医院进行试点测试时，他们经常告诉我们这是不可能的做到的事情，但随后他们发现它确实有效，而且他们感到非常惊讶。” 参考文章 售价3500美元，中国首发，微软HoloLens 2正式发布 - 映维网 十年一剑！微软HoloLens 2是如何沸腾下一代计算平台 - 映维网]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Hololens</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux帮助命令和crontab]]></title>
    <url>%2F2019%2F02%2F21%2Flinux%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[内建命令与外部命令可以用type来区分命令是内建的还是外部的1type + 命令 内建命令是写在bash源码的builtins里面的 外部命令通常放在/bin，/user/bin,/sbin,/usr/sbin等等 crontab语法用于设置周期性被执行的指令。通常，crontab 储存的指令被守护进程激活，crond 为其守护进程，crond 常常在后台运行，每一分钟会检查一次是否有预定的作业需要执行。 通过 crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell script 脚本。时间间隔的单位可以是分钟、小时、日、月、周的任意组合。 crontab 的格式:12345678# Example of job definition:# .---------------- minute (0 - 59)# | .------------- hour (0 - 23)# | | .---------- day of month (1 - 31)# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat# | | | | |# * * * * * user-name command to be executed 12$ crontab -e 表示为当前用户添加计划任务$ sudo crontab -e 表示为root用户添加计划任务]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C# 反射（Reflection）]]></title>
    <url>%2F2019%2F02%2F21%2Fc%20sharp%E5%8F%8D%E5%B0%84%2F</url>
    <content type="text"><![CDATA[反射（Reflection）的用途反射（Reflection）有下列用途： 它允许在运行时查看特性（attribute）信息。 它允许审查集合中的各种类型，以及实例化这些类型。 它允许延迟绑定的方法和属性（property）。 它允许在运行时创建新类型，然后使用这些类型执行一些任务。 查看元数据使用反射（Reflection）可以查看特性（attribute）信息。 System.Reflection 类的 MemberInfo 对象需要被初始化，用于发现与类相关的特性（attribute）。为了做到这点，您可以定义目标类的一个对象，如下：1System.Reflection.MemberInfo info = typeof(MyClass); 下面的程序演示了这点：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849using System;[AttributeUsage(AttributeTargets.All)]public class HelpAttribute : System.Attribute&#123; public readonly string Url; public string Topic // Topic 是一个命名（named）参数 &#123; get &#123; return topic; &#125; set &#123; topic = value; &#125; &#125; public HelpAttribute(string url) // url 是一个定位（positional）参数 &#123; this.Url = url; &#125; private string topic;&#125;[HelpAttribute(&quot;Information on the class MyClass&quot;)]class MyClass&#123;&#125;namespace AttributeAppl&#123; class Program &#123; static void Main(string[] args) &#123; System.Reflection.MemberInfo info = typeof(MyClass); object[] attributes = info.GetCustomAttributes(true); for (int i = 0; i &lt; attributes.Length; i++) &#123; System.Console.WriteLine(attributes[i]); &#125; Console.ReadKey(); &#125; &#125;&#125; 当上面的代码被编译和执行时，它会显示附加到类 MyClass 上的自定义特性：1HelpAttribute]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C# 特性（Attribute）]]></title>
    <url>%2F2019%2F02%2F21%2Fc%20sharp%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[特性（Attribute）是用于在运行时传递程序中各种元素（比如类、方法、结构、枚举、组件等）的行为信息的声明性标签。可以通过使用特性向程序添加声明性信息。一个声明性标签是通过放置在它所应用的元素前面的方括号（[ ]）来描述的。 .Net 框架提供了两种类型的特性：预定义特性和自定义特性。 预定义特性（Attribute）.Net 框架提供了三种预定义特性： AttributeUsage Conditional Obsolete 创建自定义特性（Attribute）创建并使用自定义特性包含四个步骤： 声明自定义特性 构建自定义特性 在目标程序元素上应用自定义特性 通过反射访问特性 声明自定义特性一个新的自定义特性应派生自 System.Attribute 类。例如： 123456789// 一个自定义特性 BugFix 被赋给类及其成员[AttributeUsage(AttributeTargets.Class |AttributeTargets.Constructor |AttributeTargets.Field |AttributeTargets.Method |AttributeTargets.Property,AllowMultiple = true)]public class DeBugInfo : System.Attribute 在上面的代码中，我们已经声明了一个名为 DeBugInfo 的自定义特性。 构建自定义特性让我们构建一个名为 DeBugInfo 的自定义特性，该特性将存储调试程序获得的信息。它存储下面的信息： bug 的代码编号 辨认该 bug 的开发人员名字 最后一次审查该代码的日期 一个存储了开发人员标记的字符串消息 我们的 DeBugInfo 类将带有三个用于存储前三个信息的私有属性（property）和一个用于存储消息的公有属性（property）。所以 bug 编号、开发人员名字和审查日期将是 DeBugInfo 类的必需的定位（ positional）参数，消息将是一个可选的命名（named）参数。 每个特性必须至少有一个构造函数。必需的定位（ positional）参数应通过构造函数传递。下面的代码演示了 DeBugInfo 类： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455// 一个自定义特性 BugFix 被赋给类及其成员[AttributeUsage(AttributeTargets.Class |AttributeTargets.Constructor |AttributeTargets.Field |AttributeTargets.Method |AttributeTargets.Property,AllowMultiple = true)]public class DeBugInfo : System.Attribute&#123; private int bugNo; private string developer; private string lastReview; public string message; public DeBugInfo(int bg, string dev, string d) &#123; this.bugNo = bg; this.developer = dev; this.lastReview = d; &#125; public int BugNo &#123; get &#123; return bugNo; &#125; &#125; public string Developer &#123; get &#123; return developer; &#125; &#125; public string LastReview &#123; get &#123; return lastReview; &#125; &#125; public string Message &#123; get &#123; return message; &#125; set &#123; message = value; &#125; &#125;&#125; 应用自定义特性通过把特性放置在紧接着它的目标之前，来应用该特性：1234567891011121314151617181920212223242526[DeBugInfo(45, &quot;Zara Ali&quot;, &quot;12/8/2012&quot;, Message = &quot;Return type mismatch&quot;)][DeBugInfo(49, &quot;Nuha Ali&quot;, &quot;10/10/2012&quot;, Message = &quot;Unused variable&quot;)]class Rectangle&#123; // 成员变量 protected double length; protected double width; public Rectangle(double l, double w) &#123; length = l; width = w; &#125; [DeBugInfo(55, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;, Message = &quot;Return type mismatch&quot;)] public double GetArea() &#123; return length * width; &#125; [DeBugInfo(56, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;)] public void Display() &#123; Console.WriteLine(&quot;Length: &#123;0&#125;&quot;, length); Console.WriteLine(&quot;Width: &#123;0&#125;&quot;, width); Console.WriteLine(&quot;Area: &#123;0&#125;&quot;, GetArea()); &#125;&#125;]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[两则小故事]]></title>
    <url>%2F2019%2F02%2F21%2F%E4%B8%A4%E5%88%99%E5%B0%8F%E6%95%85%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[故事1 新郎，特地和司仪要了话筒，说了一段话，他说他父母婚姻不幸，心里那个自己，从来没有长大过。 从来我不是不爱你，不是一次次想要推开你。不是心有不忿意难平。这世间，离别太多。 太美好的你，怕握不住。 嗯，那个戒指，他配了项链挂在胸口。忽然明白，为什么十年，依旧是他们两个。 或许女孩子从来不卑微，她知道命中注定就是他。 嗯，我一直看见的婚礼都是新娘哭，新郎笑。 今天第一次看见新郎哭得双肩耸动，新娘笑着安慰，帮他抹泪。 很甜！ 故事二 高中时一个同学沉迷网络 时常半夜翻墙出校上网 一日他照例翻墙 翻到一半就拔足狂奔而归 面色古怪，问之不语 从此认真读书，不再上网 学校盛传他见鬼了 后来他考上名校，我们问起这事 他沉默良久，说 “那天父亲来送生活费 舍不得住旅馆，在墙下坐了一夜”]]></content>
      <categories>
        <category>云梦泽</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Python-1]]></title>
    <url>%2F2019%2F02%2F16%2Fpython1%2F</url>
    <content type="text"><![CDATA[输入与输出12name = input(&apos;please enter your name: &apos;)print(&apos;hello,&apos;, name) python基础 Python允许用r’’表示’’内部的字符串默认不转义 1234print(&apos;\\\t\\&apos;)\ \print(r&apos;\\\t\\&apos;)\\\t\\ 如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，Python允许用’’’…’’’的格式表示多行内容, ...是提示符，不是代码的一部分 12print(r&apos;&apos;&apos;hello,world&apos;&apos;&apos;) 一个布尔值只有True、False两种值,布尔值可以用and、or和not运算。 用全部大写的变量名表示常量只是一个习惯上的用法 , eg: PI 除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数： 129 / 33.0 还有一种除法是//，称为地板除，两个整数的除法仍然是整数：1210 // 33 Python的整数没有大小限制，Python的浮点数也没有大小限制，但是超出一定范围就直接表示为inf（无限大）。 字符编码 美国ASCII编码 中国GB2312编码 Unicode统一编码 -&gt; UTF-8编码(可变长编码) 在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。 浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器 Python的字符串对于单个字符的编码，Python提供了ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符：12345678&gt;&gt;&gt; ord(&apos;A&apos;)65&gt;&gt;&gt; ord(&apos;中&apos;)20013&gt;&gt;&gt; chr(66)&apos;B&apos;&gt;&gt;&gt; chr(25991)&apos;文&apos; 由于Python的字符串类型是str，在内存中以Unicode表示，一个字符对应若干个字节。如果要在网络上传输，或者保存到磁盘上，就需要把str变为以字节为单位的bytes。 Python对bytes类型的数据用带b前缀的单引号或双引号表示：1x = b&apos;ABC&apos; 要注意区分’ABC’和b’ABC’，前者是str，后者虽然内容显示得和前者一样，但bytes的每个字符都只占用一个字节。 以Unicode表示的str通过encode()方法可以编码为指定的bytes，例如：12345678&gt;&gt;&gt; &apos;ABC&apos;.encode(&apos;ascii&apos;)b&apos;ABC&apos;&gt;&gt;&gt; &apos;中文&apos;.encode(&apos;utf-8&apos;)b&apos;\xe4\xb8\xad\xe6\x96\x87&apos;&gt;&gt;&gt; &apos;中文&apos;.encode(&apos;ascii&apos;)Traceback (most recent call last): File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode characters in position 0-1: ordinal not in range(128) 反过来，如果我们从网络或磁盘上读取了字节流，那么读到的数据就是bytes。要把bytes变为str，就需要用decode()方法：1234&gt;&gt;&gt; b&apos;ABC&apos;.decode(&apos;ascii&apos;)&apos;ABC&apos;&gt;&gt;&gt; b&apos;\xe4\xb8\xad\xe6\x96\x87&apos;.decode(&apos;utf-8&apos;)&apos;中文&apos; 如果bytes中包含无法解码的字节，decode()方法会报错：1234&gt;&gt;&gt; b&apos;\xe4\xb8\xad\xff&apos;.decode(&apos;utf-8&apos;)Traceback (most recent call last): ...UnicodeDecodeError: &apos;utf-8&apos; codec can&apos;t decode byte 0xff in position 3: invalid start byte 如果bytes中只有一小部分无效的字节，可以传入errors=’ignore’忽略错误的字节：12&gt;&gt;&gt; b&apos;\xe4\xb8\xad\xff&apos;.decode(&apos;utf-8&apos;, errors=&apos;ignore&apos;)&apos;中&apos; 要计算str包含多少个字符，可以用len()函数：1234&gt;&gt;&gt; len(&apos;ABC&apos;)3&gt;&gt;&gt; len(&apos;中文&apos;)2 len()函数计算的是str的字符数，如果换成bytes，len()函数就计算字节数：123456&gt;&gt;&gt; len(b&apos;ABC&apos;)3&gt;&gt;&gt; len(b&apos;\xe4\xb8\xad\xe6\x96\x87&apos;)6&gt;&gt;&gt; len(&apos;中文&apos;.encode(&apos;utf-8&apos;))6 格式化在Python中，采用的格式化方式和C语言是一致的，用%实现，举例如下：1234&gt;&gt;&gt; &apos;Hello, %s&apos; % &apos;world&apos;&apos;Hello, world&apos;&gt;&gt;&gt; &apos;Hi, %s, you have $%d.&apos; % (&apos;Michael&apos;, 1000000)&apos;Hi, Michael, you have $1000000.&apos; 占位符 替换内容 %d 整数 %f 浮点数 %s 字符串 %x 十六进制整数]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pycharm-basics]]></title>
    <url>%2F2019%2F02%2F16%2Fpycharm%2F</url>
    <content type="text"><![CDATA[常用的默认快捷键： 调试栏的几个重要的按钮作用： Resume Program：断点调试后，点击按钮，继续执行程序； Step Over ：在单步执行时，在函数内遇到子函数时不会进入子函数内单步执行，而是将子函数整个执行完再停止，也就是把子函数整个作为一步。有一点,经过我们简单的调试,在不存在子函数的情况下是和Step Into效果一样的（简而言之，越过子函数，但子函数会执行）； Step Into：单步执行，遇到子函数就进入并且继续单步执行（简而言之，进入子函数）； Step Out ： 当单步执行到子函数内时，用step out就可以执行完子函数余下部分，并返回到上一层函数。 PythonPython报错TypeError: ‘&lt;’ not supported between instances of ‘str’ and ‘int’input()返回的数据类型是str，不能直接和整数进行比较，必须先把str换成整数，使用int()方法1231 n = int(input(&quot;Input a number:&quot;))2 if n&gt;=100:print(int(n)/10)3 else:print(int(n)*10)]]></content>
      <categories>
        <category>云图</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[文件系统操作与磁盘管理]]></title>
    <url>%2F2019%2F02%2F16%2Flinux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C%E4%B8%8E%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[查看磁盘和目录的容量 使用df命令查看磁盘的容量12$ df$ df -h 使用du命令查看目录的容量 1234# 默认同样以 块 的大小展示$ du# 加上-h参数，以更易读的方式展示$ du -h -d 参数指定查看目录的深度1234# 只查看1级目录的信息$ du -h -d 0 ~# 查看2级$ du -h -d 1 ~ 常用参数123du -h #同--human-readable 以K，M，G为单位，提高信息的可读性。du -a #同--all 显示目录中所有文件的大小。du -s #同--summarize 仅显示总计，只列出最后加总的值。 创建虚拟磁盘 用dd命令从标准输入读入用户的输入到标准输出或者一个文件中： 12345# 输出到文件$ dd of=test bs=10 count=1# 输出到标准输出$ dd if=/dev/stdin of=/dev/stdout bs=10 count=1# 注:在打完了这个命令后，继续在终端打字，作为你的输入 bs（block size）用于指定块大小（缺省单位为 Byte，也可为其指定如’K’，’M’，’G’等单位），count用于指定块数量。 将输出的英文字符转换为大写再写入文件：1$ dd if=/dev/stdin of=test bs=10 count=1 conv=ucase 使用 dd 命令创建虚拟镜像文件 从/dev/zero设备创建一个容量为 256M 的空文件：12$ dd if=/dev/zero of=virtual.img bs=1M count=256$ du -h virtual.img 使用 mkfs 命令格式化磁盘（我们这里是自己创建的虚拟磁盘镜像） $ sudo mkfs.ext4 virtual.img 使用 mount 命令挂载磁盘到目录树 mount命令的一般格式如下： 1mount [options] [source] [directory] 一些常用操作： 1mount [-o [操作选项]] [-t 文件系统类型] [-w|--rw|--ro] [文件系统源] [挂载点]]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux-basics]]></title>
    <url>%2F2019%2F02%2F16%2Flinux%2F</url>
    <content type="text"><![CDATA[Linux的几个优点： 免费 很多软件原生是在Linux下运行的，庞大的社区支持，生态环境好。 开源，可被定制，开放，多用户的网络操作系统。 相对安全稳定 Linux 基本目录结构 bin 存放二进制可执行文件(ls,cat,mkdir等) boot 存放用于系统引导时使用的各种文件 dev 用于存放设备文件 etc 存放系统配置文件 home 存放所有用户文件的根目录 lib 存放跟文件系统中的程序运行所需要的共享库及内核模块 mnt 系统管理员安装临时文件系统的安装点 opt 额外安装的可选应用程序包所放置的位置 proc 虚拟文件系统，存放当前内存的映射 root 超级用户目录 sbin 存放二进制可执行文件，只有root才能访问 tmp 用于存放各种临时文件 usr 用于存放系统应用程序，比较重要的目录/usr/local 本地管理员软件安装目录 var 用于存放运行时需要改变数据的文件 作者：Java3y链接：https://www.jianshu.com/p/a182a0be4b8a 关于linux的不错的文章 Linux指令学习笔记 目录文件权限的查看和修改]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux压缩解压工具]]></title>
    <url>%2F2019%2F02%2F15%2Flinux%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B%2F</url>
    <content type="text"><![CDATA[压缩文件linux常见格式：.zip,.rar,.7z,.tar,.gz,.xz,.bz2,.tar.gz,.tar.xz,tar.bz2,.tar.7z zip压缩打包程序使用zip打包文件夹1234$ cd /home/shiyanlou$ zip -r -q -o shiyanlou.zip /home/shiyanlou/Desktop$ du -h shiyanlou.zip$ file shiyanlou.zip -r 参数表示递归打包包含子目录的全部内容， -q 参数表示为安静模式，即不向屏幕输出信息， -o，表示输出文件，需在其后紧跟打包输出文件名。 du ,命令查看打包后文件的大小 设置压缩级别为9和1（9最大，1最小），重新打包：12$ zip -r -9 -q -o shiyanlou_9.zip /home/shiyanlou/Desktop -x ~/*.zip$ zip -r -1 -q -o shiyanlou_1.zip /home/shiyanlou/Desktop -x ~/*.zip -[1-9] 表示压缩级别，1 表示最快压缩但体积大，9 表示体积最小但耗时最久。 -x 是为了排除我们上一次创建的 zip 文件，否则又会被打包进这一次的压缩文件中，注意：这里只能使用绝对路径，否则不起作用。 创建加密 zip 包使用 -e 参数可以创建加密压缩包：1$ zip -r -e -o shiyanlou_encryption.zip /home/shiyanlou/Desktop 如果你想让你在 Linux 创建的 zip 压缩文件在 Windows 上解压后没有任何问题,需要加上 -l参数将LF 转换为 CR+LF1$ zip -r -l -o shiyanlou.zip /home/shiyanlou/Desktop 使用 unzip 命令解压缩 zip 文件将 shiyanlou.zip 解压到当前目录：1$ unzip shiyanlou.zip 使用安静模式，将文件解压到指定目录：1$ unzip -q shiyanlou.zip -d ziptest 如果你不想解压只想查看压缩包的内容你可以使用 -l 参数：1$ unzip -l shiyanlou.zip 通常 Windows 系统上面创建的中文名压缩文件，默认会采用 GBK 编码，而 Linux 上面默认使用的是 UTF-8 编码，如果不加任何处理，直接解压的话可能会出现中文乱码的问题1unzip -O GBK 中文压缩文件.zip tar打包工具 创建一个 tar 包：12$ cd /home/shiyanlou$ tar -cf shiyanlou.tar /home/shiyanlou/Desktop -c 表示创建一个 tar 包文件 -f 用于指定创建的文件名 -v 以可视的的方式输出打包的文件 解包一个文件（-x 参数）到指定路径的已存在目录（-C 参数）： 12$ mkdir tardir$ tar -xf shiyanlou.tar -C tardir 只查看不解包文件 -t 参数：1$ tar -tf shiyanlou.tar 在创建 tar 文件的基础上添加 -z 参数，使用 gzip 来压缩文件： 1$ tar -czf shiyanlou.tar.gz /home/shiyanlou/Desktop 解压 *.tar.gz 文件：1$ tar -xzf shiyanlou.tar.gz 常用命令zip： 打包 ：zip something.zip something （目录请加 -r 参数） 解包：unzip something.zip 指定路径：-d 参数 tar： 打包：tar -cf something.tar something 解包：tar -xf something.tar 指定路径：-C 参数]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hololens-basics]]></title>
    <url>%2F2019%2F02%2F14%2Fhololens1%2F</url>
    <content type="text"><![CDATA[同时按住音量的加减键就可以拍照了，不管是不是有应用在运行。 录像是30fps的，并且最长录制5分钟 MRTK(Mixed Reality Toolkit) 是微软为我们提供的混合现实开发工具包，旨在帮助我们加速开发混合现实应用程序。 Hololens 的 Bloom 手势呼出主菜单的效果，主菜单是跟随你移动并且使终面朝你。这就是广告牌（Billboarding） + 平滑追踪（Tag-Along）的联合实现。 空间坐标系 所有的3D图形应用都采用笛卡尔积坐标系。 空间坐标系统以真实世界米为一个单位。 坐标系采用右手定则，X向右为正，Y向上为正，Z向内为正。 坐标参考框架在全息渲染中，有些影像需要跟随用户头部的移动而移动，有些影像在用户头部移动时需要始终保持在固定的位置上。 Hololens 为我们提供了两种参考框架，分别是静止参考框架（Stationary frame of reference） 和附加参考框架（Attached frame of reference）。 附加参考框架附加参照框架中，当用户移动或转动头部的时候，内容也会跟着走。当 Hololens 无法获取空间信息时，就只会渲染基于附加参照框架的全息图。例如程序在丢失空间映射时，弹出一个正在扫描空间信息的界面，来帮助用户。 静止参考框架在编写游戏、VR程序时，传统做法是建立一个，绝对世界坐标系（absolute world coordinate system）。在该坐标系中，可以可靠的获取任意两个物体之间的关系，只要不移动物体的位置，它们的相对位置是保持不变的。 然而在 Hololens 中，动态传感器会随着用户的移动而不断的调整对周围世界的扫描。如果仍然采用一个绝对世界坐标系，随着用户的移动，可能就会导致物体的漂移（drift）。例如假设 Hololens 采用绝对世界坐标系，定义房间左侧角落C1，右侧角落为C2，C1(0,0,0),C2(10,0,0)​C1(0,0,0),C2(10,0,0)​，在C1、C2上分别放置一个全息图，当用户在房间移动时，动态传感器重新扫描，发现 C1 到 C2 的距离只有9.9米，这时 C2(9.9,0,0)​ C2(9.9,0,0)​ ，C2的变化就会导致 C2上的全息图的位置变化，导致物体漂移。 空间锚Hololens 采用空间锚（spatial anchors）来解决这个问题。Hololens 在用户放置全息图的位置上放置空间锚，每一个锚都有一个坐标系统，当用户移动导致动态传感器重新扫描时，Hololens 根据需要调整每个锚的位置，来确保锚上的全息图停留在现实世界的固定位置。 Hololens 支持将空间锚持久化保存（Spatial anchor persistence），这样在相同的环境下再次启动程序时可以加载锚，实现全息图的位置记忆功能。 Hololens 还支持空间锚共享（Spatial anchor sharing），通过将空间锚和周围环境的传感器数据从一个HoloLens 传输到另一个HoloLens。两台设备使用共享的空间锚，使得用户可以在相同位置看到一样的东西。 SpectatorView当我们戴上 Hololens 时，一个没有戴上它的人是无法体验到我们所能体验到的奇迹。 SpectatorView（三方视角）允许其他人通过2D屏幕看到 Hololens 用户在他们的世界里看到的东西。SpectatorView（Preview版）提供一种快速和廉价的途径来录制高清的全息影像，而 SpectatorView Pro 版提供了专业质量记录的全景图。 问题关于textmeshpro的错误 请将刚刚创建的App文件夹整个删掉，在Unity中，点击菜单栏Window &gt; Package Manager，移除TextMesh Pro，如图所示，然后重新导出解决方案即可。 作者：Jitwxs来源：CSDN原文：https://blog.csdn.net/yuanlaijike/article/category/8389122]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Hololens</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux环境变量]]></title>
    <url>%2F2019%2F02%2F14%2Flinux%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[变量1$ declare tmp 使用 declare 命令创建一个变量名为 tmp 的变量 1$ echo $tmp 读取变量的值 1zsh 创建子shell 1export temp 导出变量temp为环境变量 1gedit hello_shell.sh 创建一个shell脚本文件，第一行 #!/bin/bash 不能省略 1$ PATH=$PATH:/home/shiyanlou/mybin 添加环境变量，可以在任意目录执行mybin里面的文件 1$ echo &quot;PATH=$PATH:/home/shiyanlou/mybin&quot; &gt;&gt; .zshrc 让添加的变量全局有效 &gt;&gt; 表示将标准输出以追加的方式重定向到一个文件中 &gt; 是以覆盖的方式重定向到一个文件中 1source .zshrc 让环境变量立即生效 1unset temp 删除一个环境变量 环境变量 变量类型： 用户自定义变量 Shell本身内建的变量 从自定义变量导出的环境变量 命 令 说 明 set 显示 Shell 所有变量，包括其内建环境变量，用户自定义变量及导出的环境变量。 env 显示与当前用户相关的环境变量，还可以让命令在指定环境中运行。 export 显示从 Shell 中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量。 按变量的生存周期来划分，Linux 变量可分为两类： 永久的：需要修改配置文件，变量永久生效； 临时的：使用 export 命令行声明即可，变量在关闭 shell 时失效。 1/etc/bashrc 存放shell变量 1/etc/profile 存放环境变量 搜索文件与搜索相关的命令常用的有 whereis，which，find和 locate。]]></content>
      <categories>
        <category>云图</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Share-1]]></title>
    <url>%2F2019%2F02%2F09%2Fshare-1%2F</url>
    <content type="text"><![CDATA[Fun 字母雨 感受静谧 Comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，效果很棒。 earth a global map of wind, weather, and ocean conditions. Hololens Mixed Reality HoloLens Solution for Streamlined Shelf Management. 小printf的编程故事 作者仿照《小王子》中的情节，生动有趣的阐述了小printf从编程小白到专家的成长历程。 工具 FetchRSS 将任何网页转为 RSS 的工具。 RSSHub 直接提供各种 Web 应用的 RSS 供订阅。代码开源，可以自己部署。 love2.io 一个收集开源书籍的网站。 鸠摩搜书 一个搜索电子书的网站。 开发者知识库 搜索IT解决方案。 Diagram 手绘图，然后保存成 PPT 的在线服务。 资料 DeviantArt 是一个为艺术家展示各自作品、并交流讨论而设计的社交网路服务网站，里面的壁纸是真的不错。 Crazyflie 对Crazyflie有兴趣可以看看。 A Hololens Hololens的相关资讯。 藏经阁 谁是哪个引起蝴蝶效应的第一个IP包？ 非常在意用电情况，会用任何方式去省电。有一次问他是为什么，他的回答让我们都泪流满面：让这个宇宙的熵，增加的慢一些。 –极客 站在更高一个层次，俯瞰时，很多问题都可以轻易解决。 –思维 藏宝图]]></content>
      <categories>
        <category>Share</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Markdowm语法]]></title>
    <url>%2F2019%2F01%2F29%2FMarkdown%2F</url>
    <content type="text"><![CDATA[Markdown 维基百科 Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。 优点 纯文本，所以兼容性极强，可以用所有文本编辑器打开。 让你专注于文字而不是排版。 格式转换方便，Markdown 的文本你可以轻松转换为 html、电子书等。 Markdown 的标记语法有极好的可读性。 Markdown的简单语法1234567891011121314151617181920212223242526272829303132333435# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 列表- 文本1- 文本2- 文本31. 文本12. 文本23. 文本3插入链接[简书](http://www.jianshu.com)插入图片![](图片链接地址)引用在你希望引用的文字前面加上 &gt;斜体*一盏灯*粗体**一简书**表格| Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 | 参考文章：https://www.jianshu.com/p/q81RER]]></content>
      <categories>
        <category>云图</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Root? Root!]]></title>
    <url>%2F2019%2F01%2F21%2Froot%2F</url>
    <content type="text"><![CDATA[小米手机获取完整ROOT权限前言一开始，我只是想删除一些系统自带的软件，以及安装一些需要root权限的app，这里就不细说了，可能我比较爱折腾，也比较想更多地了解一下手机。虽然ROOT一般情况下不会对硬件造成危害，但ROOT后可能会导致系统运行不稳定，耗电大，手机发热，支付有风险的情况。 过程一 : 解锁Bootloader和刷机 解锁Bootloader申请链接 http://www.miui.com/unlock/index.html小米手机解锁Bootloader教程：http://www.miui.com/thread-10101861-1-1.html 升级开发版的卡刷/线刷详细教程，以及MIUI ROM最新刷机包下载链接： http://www.miui.com/shuaji-329.html 解锁和刷机会清除所有数据，请做好备份！ MIUI系统备份与恢复的教程：http://www.miui.com/thread-9605562-1-1.html 二 ：开启ROOT权限 在系统桌面上找到安全中心，并打开。 点击应用管理—权限—开启ROOT权限。 然后等待手机重启。 注意： 稳定版系统不能在授权管理中开启ROOT权限；遇到当前版本撤包，则不能在授权管理中开启ROOT。 解决方法：您可以在电脑上一键刷入recovery，然后卡刷SU。支持直接获取ROOT权限的版本有开发版,内测版和体验版！ 系统提供的ROOT功能并不是完整的；要获取完整的权限，必须解锁System分区！ 三 ：解锁System分区下载解锁分区软件 Syslock，打开界面中的解锁开关，等待手机重启成功即可生效。 结尾其实手机Root并没有难，重要的是敢于探索的精神，要学会使用好网上的搜索引擎，新世界的大门将会向你打开！ 感谢这位大佬 http://api.bbs.miui.com/thread-12281379-1-1.html]]></content>
      <categories>
        <category>云图</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[HexoHexo的命令极简单，安装后只需要记住四个常用的即可。执行命令需要Git当前处于blog文件夹根目录下。 常用命令Create a new post1$ hexo new &quot;My New Post&quot; Run server(启动服务器)1$ hexo server Generate static files(生成静态文件)1$ hexo generate Deploy to remote sites(部署网站。部署网站前，需要预先生成静态文件)1$ hexo deploy clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)1$ hexo clean]]></content>
      <categories>
        <category>云图</category>
      </categories>
  </entry>
</search>
